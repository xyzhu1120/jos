!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
-format	GNUmakefile	/^	git archive --format=tar HEAD | gzip > lab$(LAB)-handin.tar.gz$/;"	m
ALLOC_ZERO	kern/pmap.h	/^	ALLOC_ZERO = 1<<0,$/;"	e	enum:__anon2
ALT	kern/console.c	219;"	d	file:
AR	GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
ARRAYSIZE	user/testbss.c	5;"	d	file:
AS	GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
ASM	lib/string.c	9;"	d	file:
ASM	obj/kern/kernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/badsegment.asm	/^#define ASM 1$/;"	d
ASM	obj/user/breakpoint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello2.asm	/^#define ASM 1$/;"	d
ASM	obj/user/divzero.asm	/^#define ASM 1$/;"	d
ASM	obj/user/dumbfork.asm	/^#define ASM 1$/;"	d
ASM	obj/user/evilhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/evilhello2.asm	/^#define ASM 1$/;"	d
ASM	obj/user/fairness.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultalloc.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultallocbad.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultbadhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultdie.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultevilhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultnostack.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultread.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultreadkernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultregs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwrite.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwritekernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/forktree.asm	/^#define ASM 1$/;"	d
ASM	obj/user/hello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/idle.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpong.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpongs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/primes.asm	/^#define ASM 1$/;"	d
ASM	obj/user/softint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/spin.asm	/^#define ASM 1$/;"	d
ASM	obj/user/stresssched.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testbss.asm	/^#define ASM 1$/;"	d
ASM	obj/user/yield.asm	/^#define ASM 1$/;"	d
ASSERT	kern/lapic.c	25;"	d	file:
BCAST	kern/lapic.c	28;"	d	file:
BUFLEN	lib/readline.c	4;"	d	file:
BUFLEN	obj/kern/kernel.asm	/^#define BUFLEN 1024$/;"	d
BUSY	kern/lapic.c	30;"	d	file:
C	kern/console.c	286;"	d	file:
CAPSLOCK	kern/console.c	221;"	d	file:
CC	GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
CFLAGS	GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MD$/;"	m
CGA_BASE	kern/console.h	13;"	d
CGA_BUF	kern/console.h	14;"	d
CHECK	user/faultregs.c	43;"	d	file:
CHECK	user/faultregs.c	65;"	d	file:
CHECKSUM	kern/entry.S	/^#define CHECKSUM (-(MULTIBOOT_HEADER_MAGIC + MULTIBOOT_HEADER_FLAGS))$/;"	d
CMDBUF_SIZE	kern/monitor.c	15;"	d	file:
CMDBYTE	inc/kbdreg.h	60;"	d
COM1	kern/console.c	27;"	d	file:
COM_DLL	kern/console.c	31;"	d	file:
COM_DLM	kern/console.c	32;"	d	file:
COM_FCR	kern/console.c	36;"	d	file:
COM_IER	kern/console.c	33;"	d	file:
COM_IER_RDI	kern/console.c	34;"	d	file:
COM_IIR	kern/console.c	35;"	d	file:
COM_LCR	kern/console.c	37;"	d	file:
COM_LCR_DLAB	kern/console.c	38;"	d	file:
COM_LCR_WLEN8	kern/console.c	39;"	d	file:
COM_LSR	kern/console.c	44;"	d	file:
COM_LSR_DATA	kern/console.c	45;"	d	file:
COM_LSR_TSRE	kern/console.c	47;"	d	file:
COM_LSR_TXRDY	kern/console.c	46;"	d	file:
COM_MCR	kern/console.c	40;"	d	file:
COM_MCR_DTR	kern/console.c	42;"	d	file:
COM_MCR_OUT2	kern/console.c	43;"	d	file:
COM_MCR_RTS	kern/console.c	41;"	d	file:
COM_RX	kern/console.c	29;"	d	file:
COM_TX	kern/console.c	30;"	d	file:
CONSBUFSIZE	kern/console.c	385;"	d	file:
CPUS	GNUmakefile	/^CPUS ?= 1$/;"	m
CPU_STARTED	kern/cpu.h	/^	CPU_STARTED,$/;"	e	enum:__anon3
CPU_UNUSED	kern/cpu.h	/^	CPU_UNUSED = 0,$/;"	e	enum:__anon3
CR0_AM	inc/mmu.h	86;"	d
CR0_CD	inc/mmu.h	88;"	d
CR0_EM	inc/mmu.h	81;"	d
CR0_ET	inc/mmu.h	83;"	d
CR0_MP	inc/mmu.h	80;"	d
CR0_NE	inc/mmu.h	84;"	d
CR0_NW	inc/mmu.h	87;"	d
CR0_PE	inc/mmu.h	79;"	d
CR0_PG	inc/mmu.h	89;"	d
CR0_TS	inc/mmu.h	82;"	d
CR0_WP	inc/mmu.h	85;"	d
CR4_DE	inc/mmu.h	94;"	d
CR4_MCE	inc/mmu.h	92;"	d
CR4_PCE	inc/mmu.h	91;"	d
CR4_PSE	inc/mmu.h	93;"	d
CR4_PVI	inc/mmu.h	96;"	d
CR4_TSD	inc/mmu.h	95;"	d
CR4_VME	inc/mmu.h	97;"	d
CRT_COLS	kern/console.h	17;"	d
CRT_ROWS	kern/console.h	16;"	d
CRT_SIZE	kern/console.h	18;"	d
CTL	kern/console.c	218;"	d	file:
Command	kern/monitor.c	/^struct Command {$/;"	s	file:
Command::desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:	access:public
Command::func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:	access:public
Command::name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:	access:public
Cpu	kern/cpu.h	/^struct Cpu {$/;"	s
Cpu::cpu_env	kern/cpu.h	/^	struct Env *cpu_env;            \/\/ The currently-running environment.$/;"	m	struct:Cpu	typeref:struct:Cpu::Env	access:public
Cpu::cpu_id	kern/cpu.h	/^	uint8_t cpu_id;                 \/\/ Local APIC ID; index into cpus[] below$/;"	m	struct:Cpu	access:public
Cpu::cpu_status	kern/cpu.h	/^	volatile unsigned cpu_status;   \/\/ The status of the CPU$/;"	m	struct:Cpu	access:public
Cpu::cpu_ts	kern/cpu.h	/^	struct Taskstate cpu_ts;        \/\/ Used by x86 to find stack for interrupt$/;"	m	struct:Cpu	typeref:struct:Cpu::Taskstate	access:public
DEASSERT	kern/lapic.c	26;"	d	file:
DEBUG_SPINLOCK	kern/spinlock.h	7;"	d
DELIVS	kern/lapic.c	24;"	d	file:
DEPTH	user/forktree.c	5;"	d	file:
Disassembly	obj/boot/boot.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kern/kernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/badsegment.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/breakpoint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/divzero.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/dumbfork.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/evilhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/evilhello2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/fairness.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultalloc.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultallocbad.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultbadhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultdie.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultevilhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultnostack.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultread.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultreadkernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultregs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwrite.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwritekernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/forktree.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/hello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/idle.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpong.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpongs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/primes.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/softint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spin.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/stresssched.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testbss.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/yield.asm	/^Disassembly of section .text:$/;"	l
E0ESC	kern/console.c	225;"	d	file:
ELFHDR	boot/main.c	33;"	d	file:
ELF_MAGIC	inc/elf.h	4;"	d
ELF_PROG_FLAG_EXEC	inc/elf.h	52;"	d
ELF_PROG_FLAG_READ	inc/elf.h	54;"	d
ELF_PROG_FLAG_WRITE	inc/elf.h	53;"	d
ELF_PROG_LOAD	inc/elf.h	49;"	d
ELF_SHN_UNDEF	inc/elf.h	63;"	d
ELF_SHT_NULL	inc/elf.h	57;"	d
ELF_SHT_PROGBITS	inc/elf.h	58;"	d
ELF_SHT_STRTAB	inc/elf.h	60;"	d
ELF_SHT_SYMTAB	inc/elf.h	59;"	d
ENABLE	kern/lapic.c	19;"	d	file:
ENVGENSHIFT	kern/env.c	22;"	d	file:
ENVX	inc/env.h	30;"	d
ENV_CREATE	kern/env.h	29;"	d
ENV_DYING	inc/env.h	/^	ENV_DYING,$/;"	e	enum:__anon5
ENV_FREE	inc/env.h	/^	ENV_FREE = 0,$/;"	e	enum:__anon5
ENV_NOT_RUNNABLE	inc/env.h	/^	ENV_NOT_RUNNABLE$/;"	e	enum:__anon5
ENV_PASTE3	kern/env.h	27;"	d
ENV_RUNNABLE	inc/env.h	/^	ENV_RUNNABLE,$/;"	e	enum:__anon5
ENV_RUNNING	inc/env.h	/^	ENV_RUNNING,$/;"	e	enum:__anon5
ENV_TYPE_IDLE	inc/env.h	/^	ENV_TYPE_IDLE,$/;"	e	enum:EnvType
ENV_TYPE_USER	inc/env.h	/^	ENV_TYPE_USER = 0,$/;"	e	enum:EnvType
EOI	kern/lapic.c	17;"	d	file:
ERROR	kern/lapic.c	39;"	d	file:
ESR	kern/lapic.c	20;"	d	file:
EXTPHYSMEM	inc/memlayout.h	96;"	d
E_BAD_ENV	inc/error.h	/^	E_BAD_ENV	= 2,	\/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon4
E_EOF	inc/error.h	/^	E_EOF		= 8,	\/\/ Unexpected end of file$/;"	e	enum:__anon4
E_FAULT	inc/error.h	/^	E_FAULT		= 6,	\/\/ Memory fault$/;"	e	enum:__anon4
E_INVAL	inc/error.h	/^	E_INVAL		= 3,	\/\/ Invalid parameter$/;"	e	enum:__anon4
E_IPC_NOT_RECV	inc/error.h	/^	E_IPC_NOT_RECV	= 7,	\/\/ Attempt to send to env that is not recving$/;"	e	enum:__anon4
E_NO_FREE_ENV	inc/error.h	/^	E_NO_FREE_ENV	= 5,	\/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon4
E_NO_MEM	inc/error.h	/^	E_NO_MEM	= 4,	\/\/ Request failed due to memory shortage$/;"	e	enum:__anon4
E_UNSPECIFIED	inc/error.h	/^	E_UNSPECIFIED	= 1,	\/\/ Unspecified or unknown problem$/;"	e	enum:__anon4
Eipdebuginfo	kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s
Eipdebuginfo::eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo	access:public
Elf	inc/elf.h	/^struct Elf {$/;"	s
Elf::e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf	access:public
Elf::e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf	access:public
Elf::e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf	access:public
Elf::e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf	access:public
Elf::e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf	access:public
Elf::e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf	access:public
Elf::e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf	access:public
Elf::e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf	access:public
Elf::e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf	access:public
Elf::e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf	access:public
Elf::e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf	access:public
Elf::e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf	access:public
Elf::e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf	access:public
Elf::e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf	access:public
Elf::e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf	access:public
Env	inc/env.h	/^struct Env {$/;"	s
Env	kern/pmap.h	/^struct Env;$/;"	x
Env::env_cpunum	inc/env.h	/^	int env_cpunum;			\/\/ The CPU that the env is running on$/;"	m	struct:Env	access:public
Env::env_id	inc/env.h	/^	envid_t env_id;			\/\/ Unique environment identifier$/;"	m	struct:Env	access:public
Env::env_ipc_dstva	inc/env.h	/^	void *env_ipc_dstva;		\/\/ VA at which to map received page$/;"	m	struct:Env	access:public
Env::env_ipc_from	inc/env.h	/^	envid_t env_ipc_from;		\/\/ envid of the sender$/;"	m	struct:Env	access:public
Env::env_ipc_perm	inc/env.h	/^	int env_ipc_perm;		\/\/ Perm of page mapping received$/;"	m	struct:Env	access:public
Env::env_ipc_recving	inc/env.h	/^	bool env_ipc_recving;		\/\/ Env is blocked receiving$/;"	m	struct:Env	access:public
Env::env_ipc_value	inc/env.h	/^	uint32_t env_ipc_value;		\/\/ Data value sent to us$/;"	m	struct:Env	access:public
Env::env_link	inc/env.h	/^	struct Env *env_link;		\/\/ Next free Env$/;"	m	struct:Env	typeref:struct:Env::Env	access:public
Env::env_parent_id	inc/env.h	/^	envid_t env_parent_id;		\/\/ env_id of this env's parent$/;"	m	struct:Env	access:public
Env::env_pgdir	inc/env.h	/^	pde_t *env_pgdir;		\/\/ Kernel virtual address of page dir$/;"	m	struct:Env	access:public
Env::env_pgfault_upcall	inc/env.h	/^	void *env_pgfault_upcall;	\/\/ Page fault upcall entry point$/;"	m	struct:Env	access:public
Env::env_runs	inc/env.h	/^	uint32_t env_runs;		\/\/ Number of times environment has run$/;"	m	struct:Env	access:public
Env::env_status	inc/env.h	/^	unsigned env_status;		\/\/ Status of the environment$/;"	m	struct:Env	access:public
Env::env_tf	inc/env.h	/^	struct Trapframe env_tf;	\/\/ Saved registers$/;"	m	struct:Env	typeref:struct:Env::Trapframe	access:public
Env::env_type	inc/env.h	/^	enum EnvType env_type;		\/\/ Indicates special system environments$/;"	m	struct:Env	typeref:enum:Env::EnvType	access:public
EnvType	inc/env.h	/^enum EnvType {$/;"	g
FEC_PR	inc/mmu.h	123;"	d
FEC_U	inc/mmu.h	125;"	d
FEC_WR	inc/mmu.h	124;"	d
FIXED	kern/lapic.c	31;"	d	file:
FL_AC	inc/mmu.h	117;"	d
FL_AF	inc/mmu.h	102;"	d
FL_CF	inc/mmu.h	100;"	d
FL_DF	inc/mmu.h	107;"	d
FL_ID	inc/mmu.h	120;"	d
FL_IF	inc/mmu.h	106;"	d
FL_IOPL_0	inc/mmu.h	110;"	d
FL_IOPL_1	inc/mmu.h	111;"	d
FL_IOPL_2	inc/mmu.h	112;"	d
FL_IOPL_3	inc/mmu.h	113;"	d
FL_IOPL_MASK	inc/mmu.h	109;"	d
FL_NT	inc/mmu.h	114;"	d
FL_OF	inc/mmu.h	108;"	d
FL_PF	inc/mmu.h	101;"	d
FL_RF	inc/mmu.h	115;"	d
FL_SF	inc/mmu.h	104;"	d
FL_TF	inc/mmu.h	105;"	d
FL_VIF	inc/mmu.h	118;"	d
FL_VIP	inc/mmu.h	119;"	d
FL_VM	inc/mmu.h	116;"	d
FL_ZF	inc/mmu.h	103;"	d
GCCPREFIX	GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GCC_LIB	GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
GDBPORT	GNUmakefile	/^GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)$/;"	m
GD_KD	inc/memlayout.h	16;"	d
GD_KT	inc/memlayout.h	15;"	d
GD_TSS0	inc/memlayout.h	19;"	d
GD_UD	inc/memlayout.h	18;"	d
GD_UT	inc/memlayout.h	17;"	d
Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s
Gatedesc::gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc	access:public
ICRHI	kern/lapic.c	32;"	d	file:
ICRLO	kern/lapic.c	21;"	d	file:
ID	kern/lapic.c	14;"	d	file:
IMAGES	GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/kernel.img$/;"	m
INIT	kern/lapic.c	22;"	d	file:
IOMEMBASE	inc/memlayout.h	145;"	d
IOMEM_PADDR	inc/memlayout.h	143;"	d
IOPHYSMEM	inc/memlayout.h	95;"	d
IO_PIC1	kern/picirq.h	12;"	d
IO_PIC2	kern/picirq.h	13;"	d
IO_RTC	kern/kclock.h	9;"	d
IO_RTC	kern/lapic.c	132;"	d	file:
IRQ_ERROR	inc/trap.h	40;"	d
IRQ_IDE	inc/trap.h	39;"	d
IRQ_KBD	inc/trap.h	36;"	d
IRQ_OFFSET	inc/trap.h	32;"	d
IRQ_SERIAL	inc/trap.h	37;"	d
IRQ_SLAVE	kern/picirq.h	15;"	d
IRQ_SPURIOUS	inc/trap.h	38;"	d
IRQ_TIMER	inc/trap.h	35;"	d
JOS_INC_ASSERT_H	inc/assert.h	4;"	d
JOS_INC_CPU_H	kern/cpu.h	3;"	d
JOS_INC_ELF_H	inc/elf.h	2;"	d
JOS_INC_ENV_H	inc/env.h	4;"	d
JOS_INC_ERROR_H	inc/error.h	4;"	d
JOS_INC_LIB_H	inc/lib.h	8;"	d
JOS_INC_MEMLAYOUT_H	inc/memlayout.h	2;"	d
JOS_INC_MMU_H	inc/mmu.h	2;"	d
JOS_INC_QUEUE_H	inc/queue.h	36;"	d
JOS_INC_SPINLOCK_H	kern/spinlock.h	2;"	d
JOS_INC_STDARG_H	inc/stdarg.h	4;"	d
JOS_INC_STDIO_H	inc/stdio.h	2;"	d
JOS_INC_STRING_H	inc/string.h	2;"	d
JOS_INC_SYSCALL_H	inc/syscall.h	2;"	d
JOS_INC_TRAP_H	inc/trap.h	2;"	d
JOS_INC_TYPES_H	inc/types.h	2;"	d
JOS_INC_X86_H	inc/x86.h	2;"	d
JOS_KBDREG_H	inc/kbdreg.h	2;"	d
JOS_KERN_ENV_H	kern/env.h	4;"	d
JOS_KERN_KCLOCK_H	kern/kclock.h	4;"	d
JOS_KERN_KDEBUG_H	kern/kdebug.h	2;"	d
JOS_KERN_MONITOR_H	kern/monitor.h	2;"	d
JOS_KERN_PICIRQ_H	kern/picirq.h	4;"	d
JOS_KERN_PMAP_H	kern/pmap.h	4;"	d
JOS_KERN_SCHED_H	kern/sched.h	4;"	d
JOS_KERN_SYSCALL_H	kern/syscall.h	2;"	d
JOS_KERN_TRAP_H	kern/trap.h	4;"	d
JOS_STAB_H	inc/stab.h	2;"	d
KADDR	kern/pmap.h	38;"	d
KADDR	obj/kern/kernel.asm	/^#define KADDR(pa) _kaddr(__FILE__, __LINE__, pa)$/;"	d
KBCMDP	inc/kbdreg.h	29;"	d
KBC_AUXDISABLE	inc/kbdreg.h	32;"	d
KBC_AUXECHO	inc/kbdreg.h	36;"	d
KBC_AUXENABLE	inc/kbdreg.h	33;"	d
KBC_AUXTEST	inc/kbdreg.h	34;"	d
KBC_AUXWRITE	inc/kbdreg.h	37;"	d
KBC_DISABLE	inc/kbdreg.h	66;"	d
KBC_ECHO	inc/kbdreg.h	71;"	d
KBC_ENABLE	inc/kbdreg.h	67;"	d
KBC_KBDDISABLE	inc/kbdreg.h	40;"	d
KBC_KBDECHO	inc/kbdreg.h	35;"	d
KBC_KBDENABLE	inc/kbdreg.h	41;"	d
KBC_KBDTEST	inc/kbdreg.h	39;"	d
KBC_MODEIND	inc/kbdreg.h	70;"	d
KBC_PULSE0	inc/kbdreg.h	42;"	d
KBC_PULSE1	inc/kbdreg.h	43;"	d
KBC_PULSE2	inc/kbdreg.h	44;"	d
KBC_PULSE3	inc/kbdreg.h	45;"	d
KBC_RAMREAD	inc/kbdreg.h	30;"	d
KBC_RAMWRITE	inc/kbdreg.h	31;"	d
KBC_RESEND	inc/kbdreg.h	64;"	d
KBC_RESET	inc/kbdreg.h	63;"	d
KBC_SELFTEST	inc/kbdreg.h	38;"	d
KBC_SETDEFAULT	inc/kbdreg.h	65;"	d
KBC_SETTABLE	inc/kbdreg.h	69;"	d
KBC_TYPEMATIC	inc/kbdreg.h	68;"	d
KBDATAP	inc/kbdreg.h	47;"	d
KBOUTP	inc/kbdreg.h	48;"	d
KBR_ACK	inc/kbdreg.h	76;"	d
KBR_BREAK	inc/kbdreg.h	79;"	d
KBR_ECHO	inc/kbdreg.h	81;"	d
KBR_EXTENDED	inc/kbdreg.h	74;"	d
KBR_FAILURE	inc/kbdreg.h	78;"	d
KBR_OVERRUN	inc/kbdreg.h	77;"	d
KBR_RESEND	inc/kbdreg.h	75;"	d
KBR_RSTDONE	inc/kbdreg.h	80;"	d
KBSTATP	inc/kbdreg.h	19;"	d
KBS_DIB	inc/kbdreg.h	20;"	d
KBS_IBF	inc/kbdreg.h	21;"	d
KBS_NOSEC	inc/kbdreg.h	24;"	d
KBS_OCMD	inc/kbdreg.h	23;"	d
KBS_PERR	inc/kbdreg.h	27;"	d
KBS_RERR	inc/kbdreg.h	26;"	d
KBS_TERR	inc/kbdreg.h	25;"	d
KBS_WARM	inc/kbdreg.h	22;"	d
KC8_CPU	inc/kbdreg.h	57;"	d
KC8_IGNSEC	inc/kbdreg.h	56;"	d
KC8_KDISABLE	inc/kbdreg.h	55;"	d
KC8_KENABLE	inc/kbdreg.h	59;"	d
KC8_MDISABLE	inc/kbdreg.h	54;"	d
KC8_MENABLE	inc/kbdreg.h	58;"	d
KC8_TRANS	inc/kbdreg.h	53;"	d
KERNBASE	inc/memlayout.h	90;"	d
KERN_CFLAGS	GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs$/;"	m
KEY_DEL	inc/kbdreg.h	14;"	d
KEY_DN	inc/kbdreg.h	8;"	d
KEY_END	inc/kbdreg.h	6;"	d
KEY_HOME	inc/kbdreg.h	5;"	d
KEY_INS	inc/kbdreg.h	13;"	d
KEY_LF	inc/kbdreg.h	9;"	d
KEY_PGDN	inc/kbdreg.h	12;"	d
KEY_PGUP	inc/kbdreg.h	11;"	d
KEY_RT	inc/kbdreg.h	10;"	d
KEY_UP	inc/kbdreg.h	7;"	d
KSTACKTOP	inc/memlayout.h	99;"	d
KSTKGAP	inc/memlayout.h	101;"	d
KSTKSIZE	inc/memlayout.h	100;"	d
K_LDCMDBYTE	inc/kbdreg.h	51;"	d
K_RDCMDBYTE	inc/kbdreg.h	50;"	d
LAB	conf/lab.mk	/^LAB=4$/;"	m
LABSETUP	GNUmakefile	/^LABSETUP ?= .\/$/;"	m
LD	GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
LDFLAGS	GNUmakefile	/^LDFLAGS := -m elf_i386$/;"	m
LEVEL	kern/lapic.c	27;"	d	file:
LINT0	kern/lapic.c	37;"	d	file:
LINT1	kern/lapic.c	38;"	d	file:
LIST_EMPTY	inc/queue.h	142;"	d
LIST_ENTRY	inc/queue.h	129;"	d
LIST_FIRST	inc/queue.h	147;"	d
LIST_FOREACH	inc/queue.h	160;"	d
LIST_HEAD	inc/queue.h	109;"	d
LIST_HEAD_INITIALIZER	inc/queue.h	118;"	d
LIST_INIT	inc/queue.h	168;"	d
LIST_INSERT_AFTER	inc/queue.h	177;"	d
LIST_INSERT_BEFORE	inc/queue.h	190;"	d
LIST_INSERT_HEAD	inc/queue.h	201;"	d
LIST_NEXT	inc/queue.h	153;"	d
LIST_REMOVE	inc/queue.h	212;"	d
LOAD_REGS	user/faultregs.c	23;"	d	file:
LOG2NENV	inc/env.h	28;"	d
MASKED	kern/lapic.c	40;"	d	file:
MAX	inc/types.h	48;"	d
MAXARGS	kern/monitor.c	182;"	d	file:
MAXERROR	inc/error.h	/^	MAXERROR$/;"	e	enum:__anon4
MAX_IRQS	kern/picirq.h	9;"	d
MC_NVRAM_SIZE	kern/kclock.h	12;"	d
MC_NVRAM_START	kern/kclock.h	11;"	d
MIN	inc/types.h	42;"	d
MONO_BASE	kern/console.h	11;"	d
MONO_BUF	kern/console.h	12;"	d
MPBOOTPHYS	kern/mpentry.S	/^#define MPBOOTPHYS(s) ((s) - mpentry_start + MPENTRY_PADDR)$/;"	d
MPBUS	kern/mpconfig.c	67;"	d	file:
MPENTRY_PADDR	inc/memlayout.h	140;"	d
MPIOAPIC	kern/mpconfig.c	68;"	d	file:
MPIOINTR	kern/mpconfig.c	69;"	d	file:
MPIOINTR	obj/kern/kernel.asm	/^#define MPIOINTR  0x03  \/\/ One per bus interrupt source$/;"	d
MPLINTR	kern/mpconfig.c	70;"	d	file:
MPLINTR	obj/kern/kernel.asm	/^#define MPLINTR   0x04  \/\/ One per system interrupt source$/;"	d
MPPROC	kern/mpconfig.c	66;"	d	file:
MPPROC_BOOT	kern/mpconfig.c	63;"	d	file:
MULTIBOOT_HEADER_FLAGS	kern/entry.S	/^#define MULTIBOOT_HEADER_FLAGS (0)$/;"	d
MULTIBOOT_HEADER_MAGIC	kern/entry.S	/^#define MULTIBOOT_HEADER_MAGIC (0x1BADB002)$/;"	d
NATIVE_CFLAGS	GNUmakefile	/^NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -Wall$/;"	m
NCC	GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
NCOMMANDS	kern/monitor.c	37;"	d	file:
NCPU	kern/cpu.h	11;"	d
NENV	inc/env.h	29;"	d
NM	GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
NO	kern/console.c	215;"	d	file:
NPDENTRIES	inc/mmu.h	45;"	d
NPTENTRIES	inc/mmu.h	46;"	d
NSYSCALLS	inc/syscall.h	/^	NSYSCALLS$/;"	e	enum:__anon6
NULL	inc/stdio.h	7;"	d
NULL	inc/types.h	5;"	d
NUMLOCK	kern/console.c	222;"	d	file:
NVRAM_BASEHI	kern/kclock.h	16;"	d
NVRAM_BASELO	kern/kclock.h	15;"	d
NVRAM_CENTURY	kern/kclock.h	27;"	d
NVRAM_EXTHI	kern/kclock.h	20;"	d
NVRAM_EXTLO	kern/kclock.h	19;"	d
NVRAM_PEXTHI	kern/kclock.h	24;"	d
NVRAM_PEXTLO	kern/kclock.h	23;"	d
N_BCOMM	inc/stab.h	37;"	d
N_BINCL	inc/stab.h	29;"	d
N_BSLINE	inc/stab.h	25;"	d
N_DSLINE	inc/stab.h	24;"	d
N_ECOML	inc/stab.h	39;"	d
N_ECOMM	inc/stab.h	38;"	d
N_EINCL	inc/stab.h	32;"	d
N_ENTRY	inc/stab.h	33;"	d
N_EXCL	inc/stab.h	35;"	d
N_FNAME	inc/stab.h	16;"	d
N_FUN	inc/stab.h	17;"	d
N_GSYM	inc/stab.h	15;"	d
N_LBRAC	inc/stab.h	34;"	d
N_LCSYM	inc/stab.h	19;"	d
N_LENG	inc/stab.h	40;"	d
N_LSYM	inc/stab.h	28;"	d
N_MAIN	inc/stab.h	20;"	d
N_PC	inc/stab.h	21;"	d
N_PSYM	inc/stab.h	31;"	d
N_RBRAC	inc/stab.h	36;"	d
N_RSYM	inc/stab.h	22;"	d
N_SLINE	inc/stab.h	23;"	d
N_SO	inc/stab.h	27;"	d
N_SOL	inc/stab.h	30;"	d
N_SSYM	inc/stab.h	26;"	d
N_STSYM	inc/stab.h	18;"	d
OBJCOPY	GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
OBJDIR	GNUmakefile	/^OBJDIR := obj$/;"	m
OBJDIRS	GNUmakefile	/^OBJDIRS :=$/;"	m
OBJDUMP	GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
OTHERS	kern/lapic.c	29;"	d	file:
O_ACCMODE	inc/lib.h	90;"	d
O_CREAT	inc/lib.h	92;"	d
O_EXCL	inc/lib.h	94;"	d
O_MKDIR	inc/lib.h	95;"	d
O_RDONLY	inc/lib.h	87;"	d
O_RDWR	inc/lib.h	89;"	d
O_TRUNC	inc/lib.h	93;"	d
O_WRONLY	inc/lib.h	88;"	d
PACKAGEDATE	conf/lab.mk	/^PACKAGEDATE=Wed Nov 2 21:31:50 EDT 2011$/;"	m
PADDR	kern/pmap.h	26;"	d
PADDR	obj/kern/kernel.asm	/^#define PADDR(kva) _paddr(__FILE__, __LINE__, kva)$/;"	d
PCINT	kern/lapic.c	36;"	d	file:
PDX	inc/mmu.h	33;"	d
PDXSHIFT	inc/mmu.h	55;"	d
PERIODIC	kern/lapic.c	35;"	d	file:
PERL	GNUmakefile	/^PERL	:= perl$/;"	m
PFTEMP	inc/memlayout.h	135;"	d
PGADDR	inc/mmu.h	42;"	d
PGNUM	inc/mmu.h	30;"	d
PGOFF	inc/mmu.h	39;"	d
PGSHIFT	inc/mmu.h	49;"	d
PGSIZE	inc/mmu.h	48;"	d
PTE_A	inc/mmu.h	63;"	d
PTE_ADDR	inc/mmu.h	76;"	d
PTE_AVAIL	inc/mmu.h	70;"	d
PTE_COW	lib/fork.c	8;"	d	file:
PTE_D	inc/mmu.h	64;"	d
PTE_G	inc/mmu.h	66;"	d
PTE_P	inc/mmu.h	58;"	d
PTE_PCD	inc/mmu.h	62;"	d
PTE_PS	inc/mmu.h	65;"	d
PTE_PWT	inc/mmu.h	61;"	d
PTE_SHARE	inc/lib.h	79;"	d
PTE_SYSCALL	inc/mmu.h	73;"	d
PTE_U	inc/mmu.h	60;"	d
PTE_W	inc/mmu.h	59;"	d
PTSHIFT	inc/mmu.h	52;"	d
PTSIZE	inc/mmu.h	51;"	d
PTX	inc/mmu.h	36;"	d
PTXSHIFT	inc/mmu.h	54;"	d
Page	inc/memlayout.h	/^struct Page {$/;"	s
Page::pp_link	inc/memlayout.h	/^	struct Page *pp_link;$/;"	m	struct:Page	typeref:struct:Page::Page	access:public
Page::pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:Page	access:public
Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s
Proghdr::p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr	access:public
Proghdr::p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr	access:public
Proghdr::p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr	access:public
Proghdr::p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr	access:public
Proghdr::p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr	access:public
Proghdr::p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr	access:public
Proghdr::p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr	access:public
Proghdr::p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr	access:public
Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s
Pseudodesc::pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc	access:public
Pseudodesc::pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc	access:public
PushRegs	inc/trap.h	/^struct PushRegs {$/;"	s
PushRegs::reg_eax	inc/trap.h	/^	uint32_t reg_eax;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_ebp	inc/trap.h	/^	uint32_t reg_ebp;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_ebx	inc/trap.h	/^	uint32_t reg_ebx;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_ecx	inc/trap.h	/^	uint32_t reg_ecx;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_edi	inc/trap.h	/^	uint32_t reg_edi;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_edx	inc/trap.h	/^	uint32_t reg_edx;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_esi	inc/trap.h	/^	uint32_t reg_esi;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_oesp	inc/trap.h	/^	uint32_t reg_oesp;		\/* Useless *\/$/;"	m	struct:PushRegs	access:public
QEMU	GNUmakefile	/^QEMU := $(shell if which qemu > \/dev\/null; \\$/;"	m
QEMUOPTS	GNUmakefile	/^QEMUOPTS = -hda $(OBJDIR)\/kern\/kernel.img -serial mon:stdio -gdb tcp::$(GDBPORT)$/;"	m
RELOC	kern/entry.S	/^#define	RELOC(x) ((x) - KERNBASE)$/;"	d
RELOC	kern/mpentry.S	/^#define RELOC(x) ((x) - KERNBASE)$/;"	d
ROUNDDOWN	inc/types.h	57;"	d
ROUNDUP	inc/types.h	63;"	d
SAVE_REGS	user/faultregs.c	13;"	d	file:
SCROLLLOCK	kern/console.c	223;"	d	file:
SECTSIZE	boot/main.c	32;"	d	file:
SEG	inc/mmu.h	142;"	d
SEG	inc/mmu.h	172;"	d
SEG16	inc/mmu.h	176;"	d
SEG_FAULT	inc/mmu.h	170;"	d
SEG_NULL	inc/mmu.h	139;"	d
SEG_NULL	inc/mmu.h	168;"	d
SETCALLGATE	inc/mmu.h	296;"	d
SETGATE	inc/mmu.h	282;"	d
SHIFT	kern/console.c	217;"	d	file:
SRL	kern/entry.S	/^#define SRL(val, shamt)		(((val) >> (shamt)) & ~(-1 << (32 - (shamt))))$/;"	d
STARTUP	kern/lapic.c	23;"	d	file:
STA_A	inc/mmu.h	189;"	d
STA_C	inc/mmu.h	186;"	d
STA_E	inc/mmu.h	185;"	d
STA_R	inc/mmu.h	188;"	d
STA_W	inc/mmu.h	187;"	d
STA_X	inc/mmu.h	184;"	d
STS_CG16	inc/mmu.h	195;"	d
STS_CG32	inc/mmu.h	201;"	d
STS_IG16	inc/mmu.h	197;"	d
STS_IG32	inc/mmu.h	202;"	d
STS_LDT	inc/mmu.h	193;"	d
STS_T16A	inc/mmu.h	192;"	d
STS_T16B	inc/mmu.h	194;"	d
STS_T32A	inc/mmu.h	199;"	d
STS_T32B	inc/mmu.h	200;"	d
STS_TG	inc/mmu.h	196;"	d
STS_TG16	inc/mmu.h	198;"	d
STS_TG32	inc/mmu.h	203;"	d
SVR	kern/lapic.c	18;"	d	file:
SYS_cgetc	inc/syscall.h	/^	SYS_cgetc,$/;"	e	enum:__anon6
SYS_cputs	inc/syscall.h	/^	SYS_cputs = 0,$/;"	e	enum:__anon6
SYS_env_destroy	inc/syscall.h	/^	SYS_env_destroy,$/;"	e	enum:__anon6
SYS_env_set_pgfault_upcall	inc/syscall.h	/^	SYS_env_set_pgfault_upcall,$/;"	e	enum:__anon6
SYS_env_set_status	inc/syscall.h	/^	SYS_env_set_status,$/;"	e	enum:__anon6
SYS_exofork	inc/syscall.h	/^	SYS_exofork,$/;"	e	enum:__anon6
SYS_getenvid	inc/syscall.h	/^	SYS_getenvid,$/;"	e	enum:__anon6
SYS_ipc_recv	inc/syscall.h	/^	SYS_ipc_recv,$/;"	e	enum:__anon6
SYS_ipc_try_send	inc/syscall.h	/^	SYS_ipc_try_send,$/;"	e	enum:__anon6
SYS_map_kernel_page	inc/syscall.h	/^	SYS_map_kernel_page,$/;"	e	enum:__anon6
SYS_page_alloc	inc/syscall.h	/^	SYS_page_alloc,$/;"	e	enum:__anon6
SYS_page_map	inc/syscall.h	/^	SYS_page_map,$/;"	e	enum:__anon6
SYS_page_unmap	inc/syscall.h	/^	SYS_page_unmap,$/;"	e	enum:__anon6
SYS_yield	inc/syscall.h	/^	SYS_yield,$/;"	e	enum:__anon6
Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s
Secthdr::sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr	access:public
Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s
Segdesc::sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc	access:public
Segdesc::sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc	access:public
Segdesc::sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc	access:public
Segdesc::sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc	access:public
Segdesc::sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc	access:public
Segdesc::sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc	access:public
Segdesc::sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc	access:public
Segdesc::sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc	access:public
Segdesc::sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc	access:public
Segdesc::sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc	access:public
Segdesc::sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc	access:public
Segdesc::sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc	access:public
Segdesc::sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc	access:public
Stab	inc/stab.h	/^struct Stab {$/;"	s
Stab::n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab	access:public
Stab::n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab	access:public
Stab::n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab	access:public
Stab::n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab	access:public
Stab::n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab	access:public
Stackframe	kern/monitor.c	/^struct Stackframe{$/;"	s	file:
Stackframe::argn	kern/monitor.c	/^	int argn;$/;"	m	struct:Stackframe	file:	access:public
Stackframe::args	kern/monitor.c	/^	int *args;$/;"	m	struct:Stackframe	file:	access:public
Stackframe::ebp	kern/monitor.c	/^	int ebp;$/;"	m	struct:Stackframe	file:	access:public
Stackframe::eip	kern/monitor.c	/^	int eip;$/;"	m	struct:Stackframe	file:	access:public
TAR	GNUmakefile	/^TAR	:= gtar$/;"	m
TCCR	kern/lapic.c	42;"	d	file:
TDCR	kern/lapic.c	43;"	d	file:
TICR	kern/lapic.c	41;"	d	file:
TIMER	kern/lapic.c	33;"	d	file:
TOP	GNUmakefile	/^TOP = .$/;"	m
TPR	kern/lapic.c	16;"	d	file:
TRAPHANDLER	kern/trapentry.S	/^#define TRAPHANDLER(name, num)						\\$/;"	d
TRAPHANDLER_NOEC	kern/trapentry.S	/^#define TRAPHANDLER_NOEC(name, num)					\\$/;"	d
T_ALIGN	inc/trap.h	23;"	d
T_BOUND	inc/trap.h	11;"	d
T_BRKPT	inc/trap.h	9;"	d
T_DBLFLT	inc/trap.h	14;"	d
T_DEBUG	inc/trap.h	7;"	d
T_DEFAULT	inc/trap.h	30;"	d
T_DEVICE	inc/trap.h	13;"	d
T_DIVIDE	inc/trap.h	6;"	d
T_FPERR	inc/trap.h	22;"	d
T_GPFLT	inc/trap.h	19;"	d
T_ILLOP	inc/trap.h	12;"	d
T_MCHK	inc/trap.h	24;"	d
T_NMI	inc/trap.h	8;"	d
T_OFLOW	inc/trap.h	10;"	d
T_PGFLT	inc/trap.h	20;"	d
T_SEGNP	inc/trap.h	17;"	d
T_SIMDERR	inc/trap.h	25;"	d
T_STACK	inc/trap.h	18;"	d
T_SYSCALL	inc/trap.h	29;"	d
T_TSS	inc/trap.h	16;"	d
Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s
Taskstate::ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate	access:public
Taskstate::ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate	access:public
Taskstate::ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate	access:public
Trapframe	inc/trap.h	/^struct Trapframe {$/;"	s
Trapframe	kern/monitor.h	/^struct Trapframe;$/;"	x
Trapframe::tf_cs	inc/trap.h	/^	uint16_t tf_cs;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_ds	inc/trap.h	/^	uint16_t tf_ds;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_eflags	inc/trap.h	/^	uint32_t tf_eflags;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_eip	inc/trap.h	/^	uintptr_t tf_eip;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_err	inc/trap.h	/^	uint32_t tf_err;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_es	inc/trap.h	/^	uint16_t tf_es;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_esp	inc/trap.h	/^	uintptr_t tf_esp;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_padding1	inc/trap.h	/^	uint16_t tf_padding1;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_padding2	inc/trap.h	/^	uint16_t tf_padding2;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_padding3	inc/trap.h	/^	uint16_t tf_padding3;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_padding4	inc/trap.h	/^	uint16_t tf_padding4;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_regs	inc/trap.h	/^	struct PushRegs tf_regs;$/;"	m	struct:Trapframe	typeref:struct:Trapframe::PushRegs	access:public
Trapframe::tf_ss	inc/trap.h	/^	uint16_t tf_ss;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_trapno	inc/trap.h	/^	uint32_t tf_trapno;$/;"	m	struct:Trapframe	access:public
UENVS	inc/memlayout.h	114;"	d
ULDFLAGS	GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
ULIM	inc/memlayout.h	102;"	d
UPAGES	inc/memlayout.h	112;"	d
USED	inc/lib.h	21;"	d
USER_CFLAGS	GNUmakefile	/^USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabs$/;"	m
USTABDATA	inc/memlayout.h	137;"	d
USTACKTOP	inc/memlayout.h	126;"	d
UTEMP	inc/memlayout.h	132;"	d
UTEXT	inc/memlayout.h	129;"	d
UTOP	inc/memlayout.h	121;"	d
UTrapframe	inc/trap.h	/^struct UTrapframe {$/;"	s
UTrapframe::utf_eflags	inc/trap.h	/^	uint32_t utf_eflags;$/;"	m	struct:UTrapframe	access:public
UTrapframe::utf_eip	inc/trap.h	/^	uintptr_t utf_eip;$/;"	m	struct:UTrapframe	access:public
UTrapframe::utf_err	inc/trap.h	/^	uint32_t utf_err;$/;"	m	struct:UTrapframe	access:public
UTrapframe::utf_esp	inc/trap.h	/^	uintptr_t utf_esp;$/;"	m	struct:UTrapframe	access:public
UTrapframe::utf_fault_va	inc/trap.h	/^	uint32_t utf_fault_va;	\/* va for T_PGFLT, 0 otherwise *\/$/;"	m	struct:UTrapframe	access:public
UTrapframe::utf_regs	inc/trap.h	/^	struct PushRegs utf_regs;$/;"	m	struct:UTrapframe	typeref:struct:UTrapframe::PushRegs	access:public
UVPT	inc/memlayout.h	110;"	d
UXSTACKTOP	inc/memlayout.h	123;"	d
UserStabData	kern/kdebug.c	/^struct UserStabData {$/;"	s	file:
UserStabData::stab_end	kern/kdebug.c	/^	const struct Stab *stab_end;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:	access:public
UserStabData::stabs	kern/kdebug.c	/^	const struct Stab *stabs;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:	access:public
UserStabData::stabstr	kern/kdebug.c	/^	const char *stabstr;$/;"	m	struct:UserStabData	file:	access:public
UserStabData::stabstr_end	kern/kdebug.c	/^	const char *stabstr_end;$/;"	m	struct:UserStabData	file:	access:public
V	conf/env.mk	/^V = @$/;"	m
VER	kern/lapic.c	15;"	d	file:
WHITESPACE	kern/monitor.c	181;"	d	file:
X1	kern/lapic.c	34;"	d	file:
_CONSOLE_H_	kern/console.h	4;"	d
__STABSTR_BEGIN__	kern/kdebug.c	/^extern const char __STABSTR_BEGIN__[];		\/\/ Beginning of string table$/;"	x
__STABSTR_END__	kern/kdebug.c	/^extern const char __STABSTR_END__[];		\/\/ End of string table$/;"	x
__STAB_BEGIN__	kern/kdebug.c	/^extern const struct Stab __STAB_BEGIN__[];	\/\/ Beginning of stabs table$/;"	x
__STAB_END__	kern/kdebug.c	/^extern const struct Stab __STAB_END__[];	\/\/ End of stabs table$/;"	x
__anon1::buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon1	file:	access:public
__anon1::rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon1	file:	access:public
__anon1::wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon1	file:	access:public
__spin_initlock	kern/spinlock.c	/^__spin_initlock(struct spinlock *lk, char *name)$/;"	f	signature:(struct spinlock *lk, char *name)
__spin_initlock	kern/spinlock.h	/^void __spin_initlock(struct spinlock *lk, char *name);$/;"	p	signature:(struct spinlock *lk, char *name)
_alltraps	kern/trapentry.S	/^_alltraps:$/;"	l
_alltraps	obj/kern/kernel.asm	/^_alltraps:$/;"	l
_kaddr	kern/pmap.h	/^_kaddr(const char *file, int line, physaddr_t pa)$/;"	f	signature:(const char *file, int line, physaddr_t pa)
_paddr	kern/pmap.h	/^_paddr(const char *file, int line, void *kva)$/;"	f	signature:(const char *file, int line, void *kva)
_panic	inc/assert.h	/^void _panic(const char*, int, const char*, ...) __attribute__((noreturn));$/;"	p	signature:(const char*, int, const char*, ...)
_panic	kern/init.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f	signature:(const char *file, int line, const char *fmt,...)
_panic	lib/panic.c	/^_panic(const char *file, int line, const char *fmt, ...)$/;"	f	signature:(const char *file, int line, const char *fmt, ...)
_pgfault_handler	lib/pgfault.c	/^void (*_pgfault_handler)(struct UTrapframe *utf);$/;"	v
_pgfault_handler	obj/user/faultalloc.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultallocbad.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultdie.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultnostack.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultregs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	lib/pfentry.S	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	lib/pgfault.c	/^extern void _pgfault_upcall(void);$/;"	p	file:	signature:(void)
_pgfault_upcall	obj/user/faultnostack.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	user/faultnostack.c	/^void _pgfault_upcall();$/;"	p	file:
_start	kern/entry.S	/^_start = RELOC(entry)$/;"	d
_start	lib/entry.S	/^_start:$/;"	l
_start	obj/kern/kernel.asm	/^_start = RELOC(entry)$/;"	d
_start	obj/user/badsegment.asm	/^_start:$/;"	l
_start	obj/user/breakpoint.asm	/^_start:$/;"	l
_start	obj/user/buggyhello.asm	/^_start:$/;"	l
_start	obj/user/buggyhello2.asm	/^_start:$/;"	l
_start	obj/user/divzero.asm	/^_start:$/;"	l
_start	obj/user/dumbfork.asm	/^_start:$/;"	l
_start	obj/user/evilhello.asm	/^_start:$/;"	l
_start	obj/user/evilhello2.asm	/^_start:$/;"	l
_start	obj/user/fairness.asm	/^_start:$/;"	l
_start	obj/user/faultalloc.asm	/^_start:$/;"	l
_start	obj/user/faultallocbad.asm	/^_start:$/;"	l
_start	obj/user/faultbadhandler.asm	/^_start:$/;"	l
_start	obj/user/faultdie.asm	/^_start:$/;"	l
_start	obj/user/faultevilhandler.asm	/^_start:$/;"	l
_start	obj/user/faultnostack.asm	/^_start:$/;"	l
_start	obj/user/faultread.asm	/^_start:$/;"	l
_start	obj/user/faultreadkernel.asm	/^_start:$/;"	l
_start	obj/user/faultregs.asm	/^_start:$/;"	l
_start	obj/user/faultwrite.asm	/^_start:$/;"	l
_start	obj/user/faultwritekernel.asm	/^_start:$/;"	l
_start	obj/user/forktree.asm	/^_start:$/;"	l
_start	obj/user/hello.asm	/^_start:$/;"	l
_start	obj/user/idle.asm	/^_start:$/;"	l
_start	obj/user/pingpong.asm	/^_start:$/;"	l
_start	obj/user/pingpongs.asm	/^_start:$/;"	l
_start	obj/user/primes.asm	/^_start:$/;"	l
_start	obj/user/softint.asm	/^_start:$/;"	l
_start	obj/user/spin.asm	/^_start:$/;"	l
_start	obj/user/stresssched.asm	/^_start:$/;"	l
_start	obj/user/testbss.asm	/^_start:$/;"	l
_start	obj/user/yield.asm	/^_start:$/;"	l
_warn	inc/assert.h	/^void _warn(const char*, int, const char*, ...);$/;"	p	signature:(const char*, int, const char*, ...)
_warn	kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f	signature:(const char *file, int line, const char *fmt,...)
addr	obj/kern/kernel.asm	/^	addr = (char*)page2kva(pp0);$/;"	d
addr	obj/kern/kernel.asm	/^	addr = (unsigned int)str;$/;"	d
addr_6845	kern/console.c	/^static unsigned addr_6845;$/;"	v	file:
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = MONO_BASE;$/;"	d
after	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
altflag	obj/kern/kernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/kern/kernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/badsegment.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/badsegment.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/breakpoint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/breakpoint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/divzero.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/divzero.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/dumbfork.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/dumbfork.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/evilhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/evilhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/evilhello2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/evilhello2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/fairness.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/fairness.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultalloc.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultalloc.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultallocbad.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultallocbad.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultdie.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultdie.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultnostack.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultnostack.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultread.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultread.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultregs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultregs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwrite.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwrite.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/forktree.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/forktree.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/hello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/hello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/idle.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/idle.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpong.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpong.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpongs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpongs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/primes.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/primes.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/softint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/softint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/spin.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spin.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/stresssched.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/stresssched.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testbss.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testbss.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/yield.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/yield.asm	/^		altflag = 0;$/;"	d
any_matches	obj/kern/kernel.asm	/^		any_matches = 1;$/;"	d
apicid	kern/mpconfig.c	/^	uint8_t apicid;                 \/\/ local APIC id$/;"	m	struct:mpproc	file:	access:public
argc	obj/kern/kernel.asm	/^	argc = 0;$/;"	d
argn	kern/monitor.c	/^	int argn;$/;"	m	struct:Stackframe	file:	access:public
args	kern/monitor.c	/^	int *args;$/;"	m	struct:Stackframe	file:	access:public
args_exist	lib/entry.S	/^args_exist:$/;"	l
args_exist	obj/user/badsegment.asm	/^args_exist:$/;"	l
args_exist	obj/user/breakpoint.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello2.asm	/^args_exist:$/;"	l
args_exist	obj/user/divzero.asm	/^args_exist:$/;"	l
args_exist	obj/user/dumbfork.asm	/^args_exist:$/;"	l
args_exist	obj/user/evilhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/evilhello2.asm	/^args_exist:$/;"	l
args_exist	obj/user/fairness.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultalloc.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultallocbad.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultbadhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultdie.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultevilhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultnostack.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultread.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultreadkernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultregs.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwrite.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwritekernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/forktree.asm	/^args_exist:$/;"	l
args_exist	obj/user/hello.asm	/^args_exist:$/;"	l
args_exist	obj/user/idle.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpong.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpongs.asm	/^args_exist:$/;"	l
args_exist	obj/user/primes.asm	/^args_exist:$/;"	l
args_exist	obj/user/softint.asm	/^args_exist:$/;"	l
args_exist	obj/user/spin.asm	/^args_exist:$/;"	l
args_exist	obj/user/stresssched.asm	/^args_exist:$/;"	l
args_exist	obj/user/testbss.asm	/^args_exist:$/;"	l
args_exist	obj/user/yield.asm	/^args_exist:$/;"	l
argv0	lib/panic.c	/^const char *argv0;$/;"	v
assert	inc/assert.h	14;"	d
backtrace	kern/trap.h	/^void backtrace(struct Trapframe *);$/;"	p	signature:(struct Trapframe *)
bad	obj/kern/kernel.asm	/^bad:$/;"	l
base	obj/kern/kernel.asm	/^			base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 16;$/;"	d
base	obj/kern/kernel.asm	/^			base = 8;$/;"	d
base	obj/user/badsegment.asm	/^			base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 16;$/;"	d
base	obj/user/badsegment.asm	/^			base = 8;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 16;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 8;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 8;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 8;$/;"	d
base	obj/user/divzero.asm	/^			base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 16;$/;"	d
base	obj/user/divzero.asm	/^			base = 8;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 16;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 8;$/;"	d
base	obj/user/evilhello.asm	/^			base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 16;$/;"	d
base	obj/user/evilhello.asm	/^			base = 8;$/;"	d
base	obj/user/evilhello2.asm	/^			base = 10;$/;"	d
base	obj/user/evilhello2.asm	/^			base = 16;$/;"	d
base	obj/user/evilhello2.asm	/^			base = 8;$/;"	d
base	obj/user/fairness.asm	/^			base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 16;$/;"	d
base	obj/user/fairness.asm	/^			base = 8;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 16;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 8;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 16;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 8;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 8;$/;"	d
base	obj/user/faultdie.asm	/^			base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 16;$/;"	d
base	obj/user/faultdie.asm	/^			base = 8;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 8;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 16;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 8;$/;"	d
base	obj/user/faultread.asm	/^			base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 16;$/;"	d
base	obj/user/faultread.asm	/^			base = 8;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 8;$/;"	d
base	obj/user/faultregs.asm	/^			base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 16;$/;"	d
base	obj/user/faultregs.asm	/^			base = 8;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 16;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 8;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 8;$/;"	d
base	obj/user/forktree.asm	/^			base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 16;$/;"	d
base	obj/user/forktree.asm	/^			base = 8;$/;"	d
base	obj/user/hello.asm	/^			base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 16;$/;"	d
base	obj/user/hello.asm	/^			base = 8;$/;"	d
base	obj/user/idle.asm	/^			base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 16;$/;"	d
base	obj/user/idle.asm	/^			base = 8;$/;"	d
base	obj/user/pingpong.asm	/^			base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 16;$/;"	d
base	obj/user/pingpong.asm	/^			base = 8;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 16;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 8;$/;"	d
base	obj/user/primes.asm	/^			base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 16;$/;"	d
base	obj/user/primes.asm	/^			base = 8;$/;"	d
base	obj/user/softint.asm	/^			base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 16;$/;"	d
base	obj/user/softint.asm	/^			base = 8;$/;"	d
base	obj/user/spin.asm	/^			base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 16;$/;"	d
base	obj/user/spin.asm	/^			base = 8;$/;"	d
base	obj/user/stresssched.asm	/^			base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 16;$/;"	d
base	obj/user/stresssched.asm	/^			base = 8;$/;"	d
base	obj/user/testbss.asm	/^			base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 16;$/;"	d
base	obj/user/testbss.asm	/^			base = 8;$/;"	d
base	obj/user/yield.asm	/^			base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 16;$/;"	d
base	obj/user/yield.asm	/^			base = 8;$/;"	d
bda	obj/kern/kernel.asm	/^	bda = (uint8_t *) KADDR(0x40 << 4);$/;"	d
before	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:regs	file:
bigarray	user/testbss.c	/^uint32_t bigarray[ARRAYSIZE];$/;"	v
binaryname	inc/lib.h	/^extern const char *binaryname;$/;"	x
binaryname	lib/libmain.c	/^const char *binaryname = "<unknown>";$/;"	v
binaryname	obj/user/badsegment.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/breakpoint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/divzero.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/dumbfork.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/evilhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/evilhello2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/fairness.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultalloc.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultallocbad.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultbadhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultdie.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultevilhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultnostack.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultread.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultreadkernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultregs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwrite.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwritekernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/forktree.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/hello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/idle.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/idle.asm	/^	binaryname = "idle";$/;"	d
binaryname	obj/user/pingpong.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/pingpongs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primes.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/softint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/spin.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/stresssched.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testbss.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/yield.asm	/^		binaryname = argv[0];$/;"	d
bool	inc/types.h	/^typedef int bool;$/;"	t
boot_alloc	kern/pmap.c	/^boot_alloc(uint32_t n)$/;"	f	file:	signature:(uint32_t n)
boot_aps	kern/init.c	/^boot_aps(void)$/;"	f	file:	signature:(void)
boot_aps	kern/init.c	/^static void boot_aps(void);$/;"	p	file:	signature:(void)
boot_map_region	kern/pmap.c	/^boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)$/;"	f	file:	signature:(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)
boot_map_region	kern/pmap.c	/^static void boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm);$/;"	p	file:	signature:(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)
bootcpu	kern/cpu.h	/^extern struct Cpu *bootcpu;         \/\/ The boot-strap processor (BSP)$/;"	x
bootcpu	kern/mpconfig.c	/^struct Cpu *bootcpu;$/;"	v	typeref:struct:Cpu
bootcpu	obj/kern/kernel.asm	/^				bootcpu = &cpus[ncpu];$/;"	d
bootcpu	obj/kern/kernel.asm	/^	bootcpu = &cpus[0];$/;"	d
bootmain	boot/main.c	/^bootmain(void)$/;"	f	signature:(void)
bootstack	kern/entry.S	/^bootstack:$/;"	l
bootstack	kern/pmap.h	/^extern char bootstacktop[], bootstack[];$/;"	x
bootstacktop	kern/entry.S	/^bootstacktop:$/;"	l
bootstacktop	kern/pmap.h	/^extern char bootstacktop[], bootstack[];$/;"	x
breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f	signature:(void)
breakpoint	inc/x86.h	/^static __inline void breakpoint(void) __attribute__((always_inline));$/;"	p	signature:(void)
buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon1	file:	access:public
buf	lib/printf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:	access:public
buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:	access:public
buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	file:
buf	obj/kern/kernel.asm	/^		buf = readline("K> ");$/;"	d
c	obj/kern/kernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = cons.buf[cons.rpos++];$/;"	d
c	obj/kern/kernel.asm	/^		c = getchar();$/;"	d
c	obj/kern/kernel.asm	/^	c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c	obj/kern/kernel.asm	/^	c = page2kva(pp);$/;"	d
c	obj/user/badsegment.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/breakpoint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/divzero.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/dumbfork.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/evilhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/evilhello2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/fairness.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultalloc.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultallocbad.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultbadhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultdie.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultevilhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultnostack.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultread.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultreadkernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultregs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwrite.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwritekernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/forktree.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/hello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/idle.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpong.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpongs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/primes.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/softint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/spin.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/stresssched.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testbss.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/yield.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
cga_init	kern/console.c	/^cga_init(void)$/;"	f	file:	signature:(void)
cga_putc	kern/console.c	/^cga_putc(int c)$/;"	f	file:	signature:(int c)
ch	obj/kern/kernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/badsegment.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/breakpoint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/divzero.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/dumbfork.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/evilhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/evilhello2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/fairness.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultalloc.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultallocbad.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultbadhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultdie.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultevilhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultnostack.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultread.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultreadkernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultregs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwrite.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwritekernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/forktree.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/hello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/idle.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpong.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpongs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/primes.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/softint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/spin.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/stresssched.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testbss.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/yield.asm	/^				ch = *fmt;$/;"	d
char	obj/kern/kernel.asm	/^char *$/;"	l
char	obj/user/badsegment.asm	/^char *$/;"	l
char	obj/user/breakpoint.asm	/^char *$/;"	l
char	obj/user/buggyhello.asm	/^char *$/;"	l
char	obj/user/buggyhello2.asm	/^char *$/;"	l
char	obj/user/divzero.asm	/^char *$/;"	l
char	obj/user/dumbfork.asm	/^char *$/;"	l
char	obj/user/evilhello.asm	/^char *$/;"	l
char	obj/user/evilhello2.asm	/^char *$/;"	l
char	obj/user/evilhello2.asm	/^char va[PGSIZE];$/;"	l
char	obj/user/fairness.asm	/^char *$/;"	l
char	obj/user/faultalloc.asm	/^char *$/;"	l
char	obj/user/faultallocbad.asm	/^char *$/;"	l
char	obj/user/faultbadhandler.asm	/^char *$/;"	l
char	obj/user/faultdie.asm	/^char *$/;"	l
char	obj/user/faultevilhandler.asm	/^char *$/;"	l
char	obj/user/faultnostack.asm	/^char *$/;"	l
char	obj/user/faultread.asm	/^char *$/;"	l
char	obj/user/faultreadkernel.asm	/^char *$/;"	l
char	obj/user/faultregs.asm	/^char *$/;"	l
char	obj/user/faultwrite.asm	/^char *$/;"	l
char	obj/user/faultwritekernel.asm	/^char *$/;"	l
char	obj/user/forktree.asm	/^char *$/;"	l
char	obj/user/hello.asm	/^char *$/;"	l
char	obj/user/idle.asm	/^char *$/;"	l
char	obj/user/pingpong.asm	/^char *$/;"	l
char	obj/user/pingpongs.asm	/^char *$/;"	l
char	obj/user/primes.asm	/^char *$/;"	l
char	obj/user/softint.asm	/^char *$/;"	l
char	obj/user/spin.asm	/^char *$/;"	l
char	obj/user/stresssched.asm	/^char *$/;"	l
char	obj/user/testbss.asm	/^char *$/;"	l
char	obj/user/yield.asm	/^char *$/;"	l
charcode	kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
check	grade-lab2.sh	/^check () {$/;"	f
check_continuous	kern/pmap.c	/^check_continuous(struct Page *pp)$/;"	f	file:	signature:(struct Page *pp)
check_continuous	kern/pmap.c	/^static int check_continuous(struct Page *pp);$/;"	p	file:	signature:(struct Page *pp)
check_four_pages	kern/pmap.c	/^check_four_pages(void)$/;"	f	file:	signature:(void)
check_four_pages	kern/pmap.c	/^static void check_four_pages(void);$/;"	p	file:	signature:(void)
check_kern_pgdir	kern/pmap.c	/^check_kern_pgdir(void)$/;"	f	file:	signature:(void)
check_kern_pgdir	kern/pmap.c	/^static void check_kern_pgdir(void);$/;"	p	file:	signature:(void)
check_page	kern/pmap.c	/^check_page(void)$/;"	f	file:	signature:(void)
check_page	kern/pmap.c	/^static void check_page(void);$/;"	p	file:	signature:(void)
check_page_alloc	kern/pmap.c	/^check_page_alloc(void)$/;"	f	file:	signature:(void)
check_page_alloc	kern/pmap.c	/^static void check_page_alloc(void);$/;"	p	file:	signature:(void)
check_page_free_list	kern/pmap.c	/^check_page_free_list(bool only_low_memory)$/;"	f	file:	signature:(bool only_low_memory)
check_page_free_list	kern/pmap.c	/^static void check_page_free_list(bool only_low_memory);$/;"	p	file:	signature:(bool only_low_memory)
check_page_installed_pgdir	kern/pmap.c	/^check_page_installed_pgdir(void)$/;"	f	file:	signature:(void)
check_page_installed_pgdir	kern/pmap.c	/^static void check_page_installed_pgdir(void);$/;"	p	file:	signature:(void)
check_regs	user/faultregs.c	/^check_regs(struct regs* a, const char *an, struct regs* b, const char *bn,$/;"	f	file:	signature:(struct regs* a, const char *an, struct regs* b, const char *bn, const char *testname)
check_va2pa	kern/pmap.c	/^check_va2pa(pde_t *pgdir, uintptr_t va)$/;"	f	file:	signature:(pde_t *pgdir, uintptr_t va)
check_va2pa	kern/pmap.c	/^static physaddr_t check_va2pa(pde_t *pgdir, uintptr_t va);$/;"	p	file:	signature:(pde_t *pgdir, uintptr_t va)
checkregexps	grade-functions.sh	/^checkregexps () {$/;"	f
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mp	file:	access:public
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mpconf	file:	access:public
chunck_list	kern/pmap.c	/^static struct Page chunck_list;$/;"	v	typeref:struct:Page	file:
chunck_list	obj/kern/kernel.asm	/^	chunck_list = *pp;$/;"	d
cnt	lib/printf.c	/^	int cnt;	\/\/ total bytes printed so far$/;"	m	struct:printbuf	file:	access:public
cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:	access:public
cnt	obj/kern/kernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/badsegment.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/breakpoint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/divzero.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/dumbfork.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/evilhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/evilhello2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/fairness.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultalloc.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultallocbad.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultbadhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultdie.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultevilhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultnostack.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultread.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultreadkernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultregs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwrite.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwritekernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/forktree.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/hello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/idle.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/pingpong.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/pingpongs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/primes.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/softint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/spin.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/stresssched.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testbss.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/yield.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
code	obj/kern/kernel.asm	/^	code = KADDR(MPENTRY_PADDR);$/;"	d
commands	kern/monitor.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command	file:
conf	obj/kern/kernel.asm	/^	conf = (struct mpconf *) KADDR(mp->physaddr);$/;"	d
cons	kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon1	file:
cons_getc	kern/console.c	/^cons_getc(void)$/;"	f	signature:(void)
cons_getc	kern/console.h	/^int cons_getc(void);$/;"	p	signature:(void)
cons_init	kern/console.c	/^cons_init(void)$/;"	f	signature:(void)
cons_init	kern/console.h	/^void cons_init(void);$/;"	p	signature:(void)
cons_intr	kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f	file:	signature:(int (*proc)(void))
cons_intr	kern/console.c	/^static void cons_intr(int (*proc)(void));$/;"	p	file:	signature:(int (*proc)(void))
cons_putc	kern/console.c	/^cons_putc(int c)$/;"	f	file:	signature:(int c)
cons_putc	kern/console.c	/^static void cons_putc(int c);$/;"	p	file:	signature:(int c)
const	obj/kern/kernel.asm	/^		const struct UserStabData *usd = (const struct UserStabData *) USTABDATA;$/;"	t
const	obj/kern/kernel.asm	/^	const struct Stab *stabs, *stab_end;$/;"	t
const	obj/user/badsegment.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/badsegment.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/breakpoint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/breakpoint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello2.asm	/^const char *hello = "hello, world\\n";$/;"	l
const	obj/user/buggyhello2.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/divzero.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/divzero.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/dumbfork.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/dumbfork.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/evilhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/evilhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/evilhello2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/evilhello2.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/fairness.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/fairness.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultalloc.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultalloc.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultallocbad.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultallocbad.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultbadhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultbadhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultdie.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultdie.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultevilhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultevilhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultnostack.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultnostack.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultread.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultread.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultreadkernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultreadkernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultregs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultregs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwrite.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwrite.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwritekernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwritekernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/forktree.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/forktree.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/hello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/hello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/idle.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/idle.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpong.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpong.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpongs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpongs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/primes.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/primes.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/softint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/softint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/spin.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/spin.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/stresssched.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/stresssched.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testbss.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testbss.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/yield.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/yield.asm	/^const volatile struct Env *thisenv;$/;"	l
counter	user/stresssched.c	/^volatile int counter;$/;"	v
cp	obj/kern/kernel.asm	/^		cp = (uint16_t*) (KERNBASE + MONO_BUF);$/;"	d
cp	obj/kern/kernel.asm	/^	cp = (uint16_t*) (KERNBASE + CGA_BUF);$/;"	d
cprintf	inc/stdio.h	/^int	cprintf(const char *fmt, ...);$/;"	p	signature:(const char *fmt, ...)
cprintf	kern/printf.c	/^cprintf(const char *fmt, ...)$/;"	f	signature:(const char *fmt, ...)
cprintf	lib/printf.c	/^cprintf(const char *fmt, ...)$/;"	f	signature:(const char *fmt, ...)
cpu	kern/spinlock.h	/^	struct Cpu *cpu;   \/\/ The CPU holding the lock.$/;"	m	struct:spinlock	typeref:struct:spinlock::Cpu	access:public
cpu_env	kern/cpu.h	/^	struct Env *cpu_env;            \/\/ The currently-running environment.$/;"	m	struct:Cpu	typeref:struct:Cpu::Env	access:public
cpu_id	kern/cpu.h	/^	uint8_t cpu_id;                 \/\/ Local APIC ID; index into cpus[] below$/;"	m	struct:Cpu	access:public
cpu_status	kern/cpu.h	/^	volatile unsigned cpu_status;   \/\/ The status of the CPU$/;"	m	struct:Cpu	access:public
cpu_ts	kern/cpu.h	/^	struct Taskstate cpu_ts;        \/\/ Used by x86 to find stack for interrupt$/;"	m	struct:Cpu	typeref:struct:Cpu::Taskstate	access:public
cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f	signature:(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)
cpuid	inc/x86.h	/^static __inline void cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp);$/;"	p	signature:(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)
cpunum	kern/cpu.h	/^int cpunum(void);$/;"	p	signature:(void)
cpunum	kern/lapic.c	/^cpunum(void)$/;"	f	signature:(void)
cpus	kern/cpu.h	/^extern struct Cpu cpus[NCPU];$/;"	x
cpus	kern/mpconfig.c	/^struct Cpu cpus[NCPU];$/;"	v	typeref:struct:Cpu
cputchar	inc/stdio.h	/^void	cputchar(int c);$/;"	p	signature:(int c)
cputchar	kern/console.c	/^cputchar(int c)$/;"	f	signature:(int c)
cputchar	lib/console.c	/^cputchar(int ch)$/;"	f	signature:(int ch)
cr0	obj/kern/kernel.asm	/^	cr0 = rcr0();$/;"	d
crt_buf	kern/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_buf	obj/kern/kernel.asm	/^	crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	kern/console.c	/^static uint16_t crt_pos;$/;"	v	file:
crt_pos	obj/kern/kernel.asm	/^	crt_pos = pos;$/;"	d
ctlmap	kern/console.c	/^static uint8_t ctlmap[256] = $/;"	v	file:
curenv	kern/env.h	10;"	d
curenv	obj/kern/kernel.asm	/^			curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^		curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^		curenv = e;$/;"	d
d	obj/kern/kernel.asm	/^	d = dst;$/;"	d
d	obj/user/badsegment.asm	/^	d = dst;$/;"	d
d	obj/user/breakpoint.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello2.asm	/^	d = dst;$/;"	d
d	obj/user/divzero.asm	/^	d = dst;$/;"	d
d	obj/user/dumbfork.asm	/^	d = dst;$/;"	d
d	obj/user/evilhello.asm	/^	d = dst;$/;"	d
d	obj/user/evilhello2.asm	/^	d = dst;$/;"	d
d	obj/user/fairness.asm	/^	d = dst;$/;"	d
d	obj/user/faultalloc.asm	/^	d = dst;$/;"	d
d	obj/user/faultallocbad.asm	/^	d = dst;$/;"	d
d	obj/user/faultbadhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultdie.asm	/^	d = dst;$/;"	d
d	obj/user/faultevilhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultnostack.asm	/^	d = dst;$/;"	d
d	obj/user/faultread.asm	/^	d = dst;$/;"	d
d	obj/user/faultreadkernel.asm	/^	d = dst;$/;"	d
d	obj/user/faultregs.asm	/^	d = dst;$/;"	d
d	obj/user/faultwrite.asm	/^	d = dst;$/;"	d
d	obj/user/faultwritekernel.asm	/^	d = dst;$/;"	d
d	obj/user/forktree.asm	/^	d = dst;$/;"	d
d	obj/user/hello.asm	/^	d = dst;$/;"	d
d	obj/user/idle.asm	/^	d = dst;$/;"	d
d	obj/user/pingpong.asm	/^	d = dst;$/;"	d
d	obj/user/pingpongs.asm	/^	d = dst;$/;"	d
d	obj/user/primes.asm	/^	d = dst;$/;"	d
d	obj/user/softint.asm	/^	d = dst;$/;"	d
d	obj/user/spin.asm	/^	d = dst;$/;"	d
d	obj/user/stresssched.asm	/^	d = dst;$/;"	d
d	obj/user/testbss.asm	/^	d = dst;$/;"	d
d	obj/user/yield.asm	/^	d = dst;$/;"	d
data	obj/kern/kernel.asm	/^		data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	obj/kern/kernel.asm	/^	data = inb(KBDATAP);$/;"	d
dead	obj/kern/kernel.asm	/^dead:$/;"	l
debuginfo_eip	kern/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)$/;"	f	signature:(uintptr_t addr, struct Eipdebuginfo *info)
debuginfo_eip	kern/kdebug.h	/^int debuginfo_eip(uintptr_t eip, struct Eipdebuginfo *info);$/;"	p	signature:(uintptr_t eip, struct Eipdebuginfo *info)
default	obj/kern/kernel.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^	default:$/;"	l
default	obj/user/badsegment.asm	/^		default:$/;"	l
default	obj/user/breakpoint.asm	/^		default:$/;"	l
default	obj/user/buggyhello.asm	/^		default:$/;"	l
default	obj/user/buggyhello2.asm	/^		default:$/;"	l
default	obj/user/divzero.asm	/^		default:$/;"	l
default	obj/user/dumbfork.asm	/^		default:$/;"	l
default	obj/user/evilhello.asm	/^		default:$/;"	l
default	obj/user/evilhello2.asm	/^		default:$/;"	l
default	obj/user/fairness.asm	/^		default:$/;"	l
default	obj/user/faultalloc.asm	/^		default:$/;"	l
default	obj/user/faultallocbad.asm	/^		default:$/;"	l
default	obj/user/faultbadhandler.asm	/^		default:$/;"	l
default	obj/user/faultdie.asm	/^		default:$/;"	l
default	obj/user/faultevilhandler.asm	/^		default:$/;"	l
default	obj/user/faultnostack.asm	/^		default:$/;"	l
default	obj/user/faultread.asm	/^		default:$/;"	l
default	obj/user/faultreadkernel.asm	/^		default:$/;"	l
default	obj/user/faultregs.asm	/^		default:$/;"	l
default	obj/user/faultwrite.asm	/^		default:$/;"	l
default	obj/user/faultwritekernel.asm	/^		default:$/;"	l
default	obj/user/forktree.asm	/^		default:$/;"	l
default	obj/user/hello.asm	/^		default:$/;"	l
default	obj/user/idle.asm	/^		default:$/;"	l
default	obj/user/pingpong.asm	/^		default:$/;"	l
default	obj/user/pingpongs.asm	/^		default:$/;"	l
default	obj/user/primes.asm	/^		default:$/;"	l
default	obj/user/softint.asm	/^		default:$/;"	l
default	obj/user/spin.asm	/^		default:$/;"	l
default	obj/user/stresssched.asm	/^		default:$/;"	l
default	obj/user/testbss.asm	/^		default:$/;"	l
default	obj/user/yield.asm	/^		default:$/;"	l
delay	kern/console.c	/^delay(void)$/;"	f	file:	signature:(void)
desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:	access:public
desc	obj/user/evilhello2.asm	/^	desc = *entry;$/;"	d
desc	user/evilhello2.c	/^struct Segdesc desc;$/;"	v	typeref:struct:Segdesc
didinit	kern/picirq.c	/^static bool didinit;$/;"	v	file:
didinit	obj/kern/kernel.asm	/^	didinit = 1;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/evilhello2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/evilhello2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/evilhello2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'a' + 10;$/;"	d
do_overflow	kern/monitor.c	/^do_overflow(void)$/;"	f	signature:(void)
dst_in	obj/kern/kernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/badsegment.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/breakpoint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/divzero.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/dumbfork.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/evilhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/evilhello2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/fairness.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultalloc.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultallocbad.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultbadhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultdie.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultevilhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultnostack.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultread.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultreadkernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultregs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwrite.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwritekernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/forktree.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/hello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/idle.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpong.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpongs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/primes.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/softint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/spin.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/stresssched.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testbss.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/yield.asm	/^	dst_in = dst;$/;"	d
dumbfork	user/dumbfork.c	/^dumbfork(void)$/;"	f	signature:(void)
dumbfork	user/dumbfork.c	/^envid_t dumbfork(void);$/;"	p	file:	signature:(void)
duppage	lib/fork.c	/^duppage(envid_t envid, unsigned pn)$/;"	f	file:	signature:(envid_t envid, unsigned pn)
duppage	user/dumbfork.c	/^duppage(envid_t dstenv, void *addr)$/;"	f	signature:(envid_t dstenv, void *addr)
during	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
e	obj/kern/kernel.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf	access:public
e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf	access:public
e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf	access:public
e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf	access:public
e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf	access:public
e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf	access:public
e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf	access:public
e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf	access:public
e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf	access:public
e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf	access:public
e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf	access:public
e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf	access:public
e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf	access:public
e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf	access:public
e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf	access:public
ebp	kern/monitor.c	/^	int ebp;$/;"	m	struct:Stackframe	file:	access:public
ebp	obj/kern/kernel.asm	/^		ebp = (uint32_t *)ebp[0]; \/\/ saved %ebp$/;"	d
ebp	obj/kern/kernel.asm	/^		ebp = ebp2;$/;"	d
ebp	obj/kern/kernel.asm	/^	ebp = (uint32_t *)read_ebp();$/;"	d
ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:	access:public
echo_n	grade-functions.sh	/^echo_n () {$/;"	f
echoing	obj/kern/kernel.asm	/^	echoing = iscons(0);$/;"	d
eflags	user/faultregs.c	/^	uint32_t eflags;$/;"	m	struct:regs	file:	access:public
eip	kern/monitor.c	/^	int eip;$/;"	m	struct:Stackframe	file:	access:public
eip	obj/kern/kernel.asm	/^	eip = read_eip();$/;"	d
eip	user/faultregs.c	/^	uintptr_t eip;$/;"	m	struct:regs	file:	access:public
eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo	access:public
eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo	access:public
eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo	access:public
eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo	access:public
eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo	access:public
eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo	access:public
end_pa	obj/boot/boot.asm	/^	end_pa = pa + count;$/;"	d
entries	kern/mpconfig.c	/^	uint8_t entries[0];             \/\/ table entries$/;"	m	struct:mpconf	file:	access:public
entry	kern/entry.S	/^entry:$/;"	l
entry	kern/mpconfig.c	/^	uint16_t entry;                 \/\/ entry count$/;"	m	struct:mpconf	file:	access:public
entry	obj/kern/kernel.asm	/^entry:$/;"	l
entry	obj/user/evilhello2.asm	/^	entry = gdt + index;$/;"	d
entry	user/evilhello2.c	/^struct Segdesc *entry;$/;"	v	typeref:struct:Segdesc
entry_pgdir	kern/entrypgdir.c	/^pde_t entry_pgdir[NPDENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES];$/;"	v
env_alloc	kern/env.c	/^env_alloc(struct Env **newenv_store, envid_t parent_id)$/;"	f	signature:(struct Env **newenv_store, envid_t parent_id)
env_alloc	kern/env.h	/^int	env_alloc(struct Env **e, envid_t parent_id);$/;"	p	signature:(struct Env **e, envid_t parent_id)
env_cpunum	inc/env.h	/^	int env_cpunum;			\/\/ The CPU that the env is running on$/;"	m	struct:Env	access:public
env_create	kern/env.c	/^env_create(uint8_t *binary, size_t size, enum EnvType type)$/;"	f	signature:(uint8_t *binary, size_t size, enum EnvType type)
env_create	kern/env.h	/^void	env_create(uint8_t *binary, size_t size, enum EnvType type);$/;"	p	signature:(uint8_t *binary, size_t size, enum EnvType type)
env_destroy	kern/env.c	/^env_destroy(struct Env *e)$/;"	f	signature:(struct Env *e)
env_destroy	kern/env.h	/^void	env_destroy(struct Env *e);	\/\/ Does not return if e == curenv$/;"	p	signature:(struct Env *e)
env_free	kern/env.c	/^env_free(struct Env *e)$/;"	f	signature:(struct Env *e)
env_free	kern/env.h	/^void	env_free(struct Env *e);$/;"	p	signature:(struct Env *e)
env_free_list	kern/env.c	/^static struct Env *env_free_list;	\/\/ Free environment list$/;"	v	typeref:struct:Env	file:
env_free_list	obj/kern/kernel.asm	/^	env_free_list = &(envs[0]);$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e->env_link;$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e;$/;"	d
env_id	inc/env.h	/^	envid_t env_id;			\/\/ Unique environment identifier$/;"	m	struct:Env	access:public
env_init	kern/env.c	/^env_init(void)$/;"	f	signature:(void)
env_init	kern/env.h	/^void	env_init(void);$/;"	p	signature:(void)
env_init_percpu	kern/env.c	/^env_init_percpu(void)$/;"	f	signature:(void)
env_init_percpu	kern/env.h	/^void	env_init_percpu(void);$/;"	p	signature:(void)
env_ipc_dstva	inc/env.h	/^	void *env_ipc_dstva;		\/\/ VA at which to map received page$/;"	m	struct:Env	access:public
env_ipc_from	inc/env.h	/^	envid_t env_ipc_from;		\/\/ envid of the sender$/;"	m	struct:Env	access:public
env_ipc_perm	inc/env.h	/^	int env_ipc_perm;		\/\/ Perm of page mapping received$/;"	m	struct:Env	access:public
env_ipc_recving	inc/env.h	/^	bool env_ipc_recving;		\/\/ Env is blocked receiving$/;"	m	struct:Env	access:public
env_ipc_value	inc/env.h	/^	uint32_t env_ipc_value;		\/\/ Data value sent to us$/;"	m	struct:Env	access:public
env_link	inc/env.h	/^	struct Env *env_link;		\/\/ Next free Env$/;"	m	struct:Env	typeref:struct:Env::Env	access:public
env_parent_id	inc/env.h	/^	envid_t env_parent_id;		\/\/ env_id of this env's parent$/;"	m	struct:Env	access:public
env_pgdir	inc/env.h	/^	pde_t *env_pgdir;		\/\/ Kernel virtual address of page dir$/;"	m	struct:Env	access:public
env_pgfault_upcall	inc/env.h	/^	void *env_pgfault_upcall;	\/\/ Page fault upcall entry point$/;"	m	struct:Env	access:public
env_pop_tf	kern/env.c	/^env_pop_tf(struct Trapframe *tf)$/;"	f	signature:(struct Trapframe *tf)
env_pop_tf	kern/env.h	/^void	env_pop_tf(struct Trapframe *tf) __attribute__((noreturn));$/;"	p	signature:(struct Trapframe *tf)
env_run	kern/env.c	/^env_run(struct Env *e)$/;"	f	signature:(struct Env *e)
env_run	kern/env.h	/^void	env_run(struct Env *e) __attribute__((noreturn));$/;"	p	signature:(struct Env *e)
env_runs	inc/env.h	/^	uint32_t env_runs;		\/\/ Number of times environment has run$/;"	m	struct:Env	access:public
env_setup_vm	kern/env.c	/^env_setup_vm(struct Env *e)$/;"	f	file:	signature:(struct Env *e)
env_status	inc/env.h	/^	unsigned env_status;		\/\/ Status of the environment$/;"	m	struct:Env	access:public
env_tf	inc/env.h	/^	struct Trapframe env_tf;	\/\/ Saved registers$/;"	m	struct:Env	typeref:struct:Env::Trapframe	access:public
env_type	inc/env.h	/^	enum EnvType env_type;		\/\/ Indicates special system environments$/;"	m	struct:Env	typeref:enum:Env::EnvType	access:public
envid	obj/user/dumbfork.asm	/^	envid = sys_exofork();$/;"	d
envid2env	kern/env.c	/^envid2env(envid_t envid, struct Env **env_store, bool checkperm)$/;"	f	signature:(envid_t envid, struct Env **env_store, bool checkperm)
envid2env	kern/env.h	/^int	envid2env(envid_t envid, struct Env **env_store, bool checkperm);$/;"	p	signature:(envid_t envid, struct Env **env_store, bool checkperm)
envid_t	inc/env.h	/^typedef int32_t envid_t;$/;"	t
envid_t	obj/user/badsegment.asm	/^envid_t$/;"	l
envid_t	obj/user/breakpoint.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello2.asm	/^envid_t$/;"	l
envid_t	obj/user/divzero.asm	/^envid_t$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t dumbfork(void);$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t$/;"	l
envid_t	obj/user/evilhello.asm	/^envid_t$/;"	l
envid_t	obj/user/evilhello2.asm	/^envid_t$/;"	l
envid_t	obj/user/fairness.asm	/^envid_t$/;"	l
envid_t	obj/user/faultalloc.asm	/^envid_t$/;"	l
envid_t	obj/user/faultallocbad.asm	/^envid_t$/;"	l
envid_t	obj/user/faultbadhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultdie.asm	/^envid_t$/;"	l
envid_t	obj/user/faultevilhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultnostack.asm	/^envid_t$/;"	l
envid_t	obj/user/faultread.asm	/^envid_t$/;"	l
envid_t	obj/user/faultreadkernel.asm	/^envid_t$/;"	l
envid_t	obj/user/faultregs.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwrite.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwritekernel.asm	/^envid_t$/;"	l
envid_t	obj/user/forktree.asm	/^envid_t$/;"	l
envid_t	obj/user/hello.asm	/^envid_t$/;"	l
envid_t	obj/user/idle.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpong.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpongs.asm	/^envid_t$/;"	l
envid_t	obj/user/primes.asm	/^envid_t$/;"	l
envid_t	obj/user/softint.asm	/^envid_t$/;"	l
envid_t	obj/user/spin.asm	/^envid_t$/;"	l
envid_t	obj/user/stresssched.asm	/^envid_t$/;"	l
envid_t	obj/user/testbss.asm	/^envid_t$/;"	l
envid_t	obj/user/yield.asm	/^envid_t$/;"	l
envs	inc/lib.h	/^extern const volatile struct Env envs[NENV];$/;"	x
envs	kern/env.c	/^struct Env *envs = NULL;		\/\/ All environments$/;"	v	typeref:struct:Env
envs	kern/env.h	/^extern struct Env *envs;		\/\/ All environments$/;"	x
envs	obj/kern/kernel.asm	/^	envs = boot_alloc(NENV * sizeof(struct Env));$/;"	d
eph	obj/boot/boot.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
eph	obj/kern/kernel.asm	/^	eph = ph + elf->e_phnum;$/;"	d
err	obj/kern/kernel.asm	/^				err = -err;$/;"	d
err	obj/kern/kernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/badsegment.asm	/^				err = -err;$/;"	d
err	obj/user/badsegment.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/breakpoint.asm	/^				err = -err;$/;"	d
err	obj/user/breakpoint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello2.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/divzero.asm	/^				err = -err;$/;"	d
err	obj/user/divzero.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/dumbfork.asm	/^				err = -err;$/;"	d
err	obj/user/dumbfork.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/evilhello.asm	/^				err = -err;$/;"	d
err	obj/user/evilhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/evilhello2.asm	/^				err = -err;$/;"	d
err	obj/user/evilhello2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/fairness.asm	/^				err = -err;$/;"	d
err	obj/user/fairness.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultalloc.asm	/^				err = -err;$/;"	d
err	obj/user/faultalloc.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultallocbad.asm	/^				err = -err;$/;"	d
err	obj/user/faultallocbad.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultbadhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultbadhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultdie.asm	/^				err = -err;$/;"	d
err	obj/user/faultdie.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultevilhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultevilhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultnostack.asm	/^				err = -err;$/;"	d
err	obj/user/faultnostack.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultread.asm	/^				err = -err;$/;"	d
err	obj/user/faultread.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultreadkernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultreadkernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultregs.asm	/^				err = -err;$/;"	d
err	obj/user/faultregs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwrite.asm	/^				err = -err;$/;"	d
err	obj/user/faultwrite.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwritekernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultwritekernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/forktree.asm	/^				err = -err;$/;"	d
err	obj/user/forktree.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/hello.asm	/^				err = -err;$/;"	d
err	obj/user/hello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/idle.asm	/^				err = -err;$/;"	d
err	obj/user/idle.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpong.asm	/^				err = -err;$/;"	d
err	obj/user/pingpong.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpongs.asm	/^				err = -err;$/;"	d
err	obj/user/pingpongs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/primes.asm	/^				err = -err;$/;"	d
err	obj/user/primes.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/softint.asm	/^				err = -err;$/;"	d
err	obj/user/softint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spin.asm	/^				err = -err;$/;"	d
err	obj/user/spin.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/stresssched.asm	/^				err = -err;$/;"	d
err	obj/user/stresssched.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testbss.asm	/^				err = -err;$/;"	d
err	obj/user/testbss.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/yield.asm	/^				err = -err;$/;"	d
err	obj/user/yield.asm	/^			err = va_arg(ap, int);$/;"	d
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	file:
esp	user/faultregs.c	/^	uintptr_t esp;$/;"	m	struct:regs	file:	access:public
evil	user/evilhello2.c	/^void evil()$/;"	f
evil_do	user/evilhello2.c	/^void evil_do(){$/;"	f
exit	inc/lib.h	/^void	exit(void);$/;"	p	signature:(void)
exit	lib/exit.c	/^exit(void)$/;"	f	signature:(void)
f0100000	obj/kern/kernel.asm	/^f0100000 <_start+0xeffffff4>:$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dh$/;"	l
f0100006	obj/kern/kernel.asm	/^f0100006:	00 00                	add    %al,(%eax)$/;"	l
f0100008	obj/kern/kernel.asm	/^f0100008:	fe 4f 52             	decb   0x52(%edi)$/;"	l
f010000b	obj/kern/kernel.asm	/^f010000b:	e4 66                	in     $0x66,%al$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c <entry>:$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472$/;"	l
f0100013	obj/kern/kernel.asm	/^f0100013:	34 12 $/;"	l
f0100015	obj/kern/kernel.asm	/^f0100015:	b8 00 f0 11 00       	mov    $0x11f000,%eax$/;"	l
f010001a	obj/kern/kernel.asm	/^f010001a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010001d	obj/kern/kernel.asm	/^f010001d:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0100020	obj/kern/kernel.asm	/^f0100020:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0100025	obj/kern/kernel.asm	/^f0100025:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0100028	obj/kern/kernel.asm	/^f0100028:	b8 2f 00 10 f0       	mov    $0xf010002f,%eax$/;"	l
f010002d	obj/kern/kernel.asm	/^f010002d:	ff e0                	jmp    *%eax$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f <relocated>:$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0100034	obj/kern/kernel.asm	/^f0100034:	bc 00 f0 11 f0       	mov    $0xf011f000,%esp$/;"	l
f0100039	obj/kern/kernel.asm	/^f0100039:	e8 2a 01 00 00       	call   f0100168 <i386_init>$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e <spin>:$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e:	eb fe                	jmp    f010003e <spin>$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040 <_warn>:$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040:	55                   	push   %ebp$/;"	l
f0100041	obj/kern/kernel.asm	/^f0100041:	89 e5                	mov    %esp,%ebp$/;"	l
f0100043	obj/kern/kernel.asm	/^f0100043:	53                   	push   %ebx$/;"	l
f0100044	obj/kern/kernel.asm	/^f0100044:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100047	obj/kern/kernel.asm	/^f0100047:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f010004a	obj/kern/kernel.asm	/^f010004a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010004d	obj/kern/kernel.asm	/^f010004d:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100051	obj/kern/kernel.asm	/^f0100051:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100054	obj/kern/kernel.asm	/^f0100054:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100058	obj/kern/kernel.asm	/^f0100058:	c7 04 24 c0 69 10 f0 	movl   $0xf01069c0,(%esp)$/;"	l
f010005f	obj/kern/kernel.asm	/^f010005f:	e8 4b 42 00 00       	call   f01042af <cprintf>$/;"	l
f0100064	obj/kern/kernel.asm	/^f0100064:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0100068	obj/kern/kernel.asm	/^f0100068:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010006b	obj/kern/kernel.asm	/^f010006b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010006e	obj/kern/kernel.asm	/^f010006e:	e8 09 42 00 00       	call   f010427c <vcprintf>$/;"	l
f0100073	obj/kern/kernel.asm	/^f0100073:	c7 04 24 9f 78 10 f0 	movl   $0xf010789f,(%esp)$/;"	l
f010007a	obj/kern/kernel.asm	/^f010007a:	e8 30 42 00 00       	call   f01042af <cprintf>$/;"	l
f010007f	obj/kern/kernel.asm	/^f010007f:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100082	obj/kern/kernel.asm	/^f0100082:	5b                   	pop    %ebx$/;"	l
f0100083	obj/kern/kernel.asm	/^f0100083:	5d                   	pop    %ebp$/;"	l
f0100084	obj/kern/kernel.asm	/^f0100084:	c3                   	ret    $/;"	l
f0100085	obj/kern/kernel.asm	/^f0100085 <_panic>:$/;"	l
f0100085	obj/kern/kernel.asm	/^f0100085:	55                   	push   %ebp$/;"	l
f0100086	obj/kern/kernel.asm	/^f0100086:	89 e5                	mov    %esp,%ebp$/;"	l
f0100088	obj/kern/kernel.asm	/^f0100088:	56                   	push   %esi$/;"	l
f0100089	obj/kern/kernel.asm	/^f0100089:	53                   	push   %ebx$/;"	l
f010008a	obj/kern/kernel.asm	/^f010008a:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010008d	obj/kern/kernel.asm	/^f010008d:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0100090	obj/kern/kernel.asm	/^f0100090:	83 3d e0 ce 22 f0 00 	cmpl   $0x0,0xf022cee0$/;"	l
f0100097	obj/kern/kernel.asm	/^f0100097:	75 46                	jne    f01000df <_panic+0x5a>$/;"	l
f0100099	obj/kern/kernel.asm	/^f0100099:	89 35 e0 ce 22 f0    	mov    %esi,0xf022cee0$/;"	l
f010009f	obj/kern/kernel.asm	/^f010009f:	fa                   	cli    $/;"	l
f01000a0	obj/kern/kernel.asm	/^f01000a0:	fc                   	cld    $/;"	l
f01000a1	obj/kern/kernel.asm	/^f01000a1:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f01000a4	obj/kern/kernel.asm	/^f01000a4:	e8 05 62 00 00       	call   f01062ae <cpunum>$/;"	l
f01000a9	obj/kern/kernel.asm	/^f01000a9:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01000ac	obj/kern/kernel.asm	/^f01000ac:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f01000b0	obj/kern/kernel.asm	/^f01000b0:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01000b3	obj/kern/kernel.asm	/^f01000b3:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01000b7	obj/kern/kernel.asm	/^f01000b7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01000bb	obj/kern/kernel.asm	/^f01000bb:	c7 04 24 24 6a 10 f0 	movl   $0xf0106a24,(%esp)$/;"	l
f01000c2	obj/kern/kernel.asm	/^f01000c2:	e8 e8 41 00 00       	call   f01042af <cprintf>$/;"	l
f01000c7	obj/kern/kernel.asm	/^f01000c7:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01000cb	obj/kern/kernel.asm	/^f01000cb:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01000ce	obj/kern/kernel.asm	/^f01000ce:	e8 a9 41 00 00       	call   f010427c <vcprintf>$/;"	l
f01000d3	obj/kern/kernel.asm	/^f01000d3:	c7 04 24 9f 78 10 f0 	movl   $0xf010789f,(%esp)$/;"	l
f01000da	obj/kern/kernel.asm	/^f01000da:	e8 d0 41 00 00       	call   f01042af <cprintf>$/;"	l
f01000df	obj/kern/kernel.asm	/^f01000df:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01000e6	obj/kern/kernel.asm	/^f01000e6:	e8 97 0a 00 00       	call   f0100b82 <monitor>$/;"	l
f01000eb	obj/kern/kernel.asm	/^f01000eb:	eb f2                	jmp    f01000df <_panic+0x5a>$/;"	l
f01000ed	obj/kern/kernel.asm	/^f01000ed <mp_main>:$/;"	l
f01000ed	obj/kern/kernel.asm	/^f01000ed:	55                   	push   %ebp$/;"	l
f01000ee	obj/kern/kernel.asm	/^f01000ee:	89 e5                	mov    %esp,%ebp$/;"	l
f01000f0	obj/kern/kernel.asm	/^f01000f0:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01000f3	obj/kern/kernel.asm	/^f01000f3:	a1 ec ce 22 f0       	mov    0xf022ceec,%eax$/;"	l
f01000f8	obj/kern/kernel.asm	/^f01000f8:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01000fd	obj/kern/kernel.asm	/^f01000fd:	77 20                	ja     f010011f <mp_main+0x32>$/;"	l
f01000ff	obj/kern/kernel.asm	/^f01000ff:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100103	obj/kern/kernel.asm	/^f0100103:	c7 44 24 08 48 6a 10 	movl   $0xf0106a48,0x8(%esp)$/;"	l
f010010a	obj/kern/kernel.asm	/^f010010a:	f0 $/;"	l
f010010b	obj/kern/kernel.asm	/^f010010b:	c7 44 24 04 7e 00 00 	movl   $0x7e,0x4(%esp)$/;"	l
f0100112	obj/kern/kernel.asm	/^f0100112:	00 $/;"	l
f0100113	obj/kern/kernel.asm	/^f0100113:	c7 04 24 da 69 10 f0 	movl   $0xf01069da,(%esp)$/;"	l
f010011a	obj/kern/kernel.asm	/^f010011a:	e8 66 ff ff ff       	call   f0100085 <_panic>$/;"	l
f010011f	obj/kern/kernel.asm	/^f010011f:	8d 80 00 00 00 10    	lea    0x10000000(%eax),%eax$/;"	l
f0100125	obj/kern/kernel.asm	/^f0100125:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0100128	obj/kern/kernel.asm	/^f0100128:	e8 81 61 00 00       	call   f01062ae <cpunum>$/;"	l
f010012d	obj/kern/kernel.asm	/^f010012d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100131	obj/kern/kernel.asm	/^f0100131:	c7 04 24 e6 69 10 f0 	movl   $0xf01069e6,(%esp)$/;"	l
f0100138	obj/kern/kernel.asm	/^f0100138:	e8 72 41 00 00       	call   f01042af <cprintf>$/;"	l
f010013d	obj/kern/kernel.asm	/^f010013d:	e8 88 61 00 00       	call   f01062ca <lapic_init>$/;"	l
f0100142	obj/kern/kernel.asm	/^f0100142:	e8 09 37 00 00       	call   f0103850 <env_init_percpu>$/;"	l
f0100147	obj/kern/kernel.asm	/^f0100147:	e8 a4 41 00 00       	call   f01042f0 <trap_init_percpu>$/;"	l
f010014c	obj/kern/kernel.asm	/^f010014c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0100150	obj/kern/kernel.asm	/^f0100150:	e8 59 61 00 00       	call   f01062ae <cpunum>$/;"	l
f0100155	obj/kern/kernel.asm	/^f0100155:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0100158	obj/kern/kernel.asm	/^f0100158:	81 c2 24 d0 22 f0    	add    $0xf022d024,%edx$/;"	l
f010015e	obj/kern/kernel.asm	/^f010015e:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100163	obj/kern/kernel.asm	/^f0100163:	f0 87 02             	lock xchg %eax,(%edx)$/;"	l
f0100166	obj/kern/kernel.asm	/^f0100166:	eb fe                	jmp    f0100166 <mp_main+0x79>$/;"	l
f0100168	obj/kern/kernel.asm	/^f0100168 <i386_init>:$/;"	l
f0100168	obj/kern/kernel.asm	/^f0100168:	55                   	push   %ebp$/;"	l
f0100169	obj/kern/kernel.asm	/^f0100169:	89 e5                	mov    %esp,%ebp$/;"	l
f010016b	obj/kern/kernel.asm	/^f010016b:	57                   	push   %edi$/;"	l
f010016c	obj/kern/kernel.asm	/^f010016c:	56                   	push   %esi$/;"	l
f010016d	obj/kern/kernel.asm	/^f010016d:	53                   	push   %ebx$/;"	l
f010016e	obj/kern/kernel.asm	/^f010016e:	81 ec 2c 01 00 00    	sub    $0x12c,%esp$/;"	l
f0100174	obj/kern/kernel.asm	/^f0100174:	c6 45 e7 00          	movb   $0x0,-0x19(%ebp)$/;"	l
f0100178	obj/kern/kernel.asm	/^f0100178:	c6 45 e6 00          	movb   $0x0,-0x1a(%ebp)$/;"	l
f010017c	obj/kern/kernel.asm	/^f010017c:	ba 00 01 00 00       	mov    $0x100,%edx$/;"	l
f0100181	obj/kern/kernel.asm	/^f0100181:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100186	obj/kern/kernel.asm	/^f0100186:	8d bd e6 fe ff ff    	lea    -0x11a(%ebp),%edi$/;"	l
f010018c	obj/kern/kernel.asm	/^f010018c:	66 89 07             	mov    %ax,(%edi)$/;"	l
f010018f	obj/kern/kernel.asm	/^f010018f:	83 c7 02             	add    $0x2,%edi$/;"	l
f0100192	obj/kern/kernel.asm	/^f0100192:	83 ea 02             	sub    $0x2,%edx$/;"	l
f0100195	obj/kern/kernel.asm	/^f0100195:	89 d1                	mov    %edx,%ecx$/;"	l
f0100197	obj/kern/kernel.asm	/^f0100197:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f010019a	obj/kern/kernel.asm	/^f010019a:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
f010019c	obj/kern/kernel.asm	/^f010019c:	f6 c2 02             	test   $0x2,%dl$/;"	l
f010019f	obj/kern/kernel.asm	/^f010019f:	74 06                	je     f01001a7 <i386_init+0x3f>$/;"	l
f01001a1	obj/kern/kernel.asm	/^f01001a1:	66 89 07             	mov    %ax,(%edi)$/;"	l
f01001a4	obj/kern/kernel.asm	/^f01001a4:	83 c7 02             	add    $0x2,%edi$/;"	l
f01001a7	obj/kern/kernel.asm	/^f01001a7:	83 e2 01             	and    $0x1,%edx$/;"	l
f01001aa	obj/kern/kernel.asm	/^f01001aa:	85 d2                	test   %edx,%edx$/;"	l
f01001ac	obj/kern/kernel.asm	/^f01001ac:	74 02                	je     f01001b0 <i386_init+0x48>$/;"	l
f01001ae	obj/kern/kernel.asm	/^f01001ae:	88 07                	mov    %al,(%edi)$/;"	l
f01001b0	obj/kern/kernel.asm	/^f01001b0:	b8 04 e0 26 f0       	mov    $0xf026e004,%eax$/;"	l
f01001b5	obj/kern/kernel.asm	/^f01001b5:	2d c2 bc 22 f0       	sub    $0xf022bcc2,%eax$/;"	l
f01001ba	obj/kern/kernel.asm	/^f01001ba:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01001be	obj/kern/kernel.asm	/^f01001be:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01001c5	obj/kern/kernel.asm	/^f01001c5:	00 $/;"	l
f01001c6	obj/kern/kernel.asm	/^f01001c6:	c7 04 24 c2 bc 22 f0 	movl   $0xf022bcc2,(%esp)$/;"	l
f01001cd	obj/kern/kernel.asm	/^f01001cd:	e8 34 5a 00 00       	call   f0105c06 <memset>$/;"	l
f01001d2	obj/kern/kernel.asm	/^f01001d2:	e8 fe 05 00 00       	call   f01007d5 <cons_init>$/;"	l
f01001d7	obj/kern/kernel.asm	/^f01001d7:	8d 45 e6             	lea    -0x1a(%ebp),%eax$/;"	l
f01001da	obj/kern/kernel.asm	/^f01001da:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01001de	obj/kern/kernel.asm	/^f01001de:	8d 5d e7             	lea    -0x19(%ebp),%ebx$/;"	l
f01001e1	obj/kern/kernel.asm	/^f01001e1:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f01001e5	obj/kern/kernel.asm	/^f01001e5:	c7 44 24 04 ac 1a 00 	movl   $0x1aac,0x4(%esp)$/;"	l
f01001ec	obj/kern/kernel.asm	/^f01001ec:	00 $/;"	l
f01001ed	obj/kern/kernel.asm	/^f01001ed:	c7 04 24 6c 6a 10 f0 	movl   $0xf0106a6c,(%esp)$/;"	l
f01001f4	obj/kern/kernel.asm	/^f01001f4:	e8 b6 40 00 00       	call   f01042af <cprintf>$/;"	l
f01001f9	obj/kern/kernel.asm	/^f01001f9:	0f be 45 e6          	movsbl -0x1a(%ebp),%eax$/;"	l
f01001fd	obj/kern/kernel.asm	/^f01001fd:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100201	obj/kern/kernel.asm	/^f0100201:	0f be 45 e7          	movsbl -0x19(%ebp),%eax$/;"	l
f0100205	obj/kern/kernel.asm	/^f0100205:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100209	obj/kern/kernel.asm	/^f0100209:	c7 04 24 fc 69 10 f0 	movl   $0xf01069fc,(%esp)$/;"	l
f0100210	obj/kern/kernel.asm	/^f0100210:	e8 9a 40 00 00       	call   f01042af <cprintf>$/;"	l
f0100215	obj/kern/kernel.asm	/^f0100215:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010021c	obj/kern/kernel.asm	/^f010021c:	00 $/;"	l
f010021d	obj/kern/kernel.asm	/^f010021d:	c7 04 24 15 6a 10 f0 	movl   $0xf0106a15,(%esp)$/;"	l
f0100224	obj/kern/kernel.asm	/^f0100224:	e8 86 40 00 00       	call   f01042af <cprintf>$/;"	l
f0100229	obj/kern/kernel.asm	/^f0100229:	c7 44 24 08 ff 00 00 	movl   $0xff,0x8(%esp)$/;"	l
f0100230	obj/kern/kernel.asm	/^f0100230:	00 $/;"	l
f0100231	obj/kern/kernel.asm	/^f0100231:	c7 44 24 04 0d 00 00 	movl   $0xd,0x4(%esp)$/;"	l
f0100238	obj/kern/kernel.asm	/^f0100238:	00 $/;"	l
f0100239	obj/kern/kernel.asm	/^f0100239:	8d b5 e6 fe ff ff    	lea    -0x11a(%ebp),%esi$/;"	l
f010023f	obj/kern/kernel.asm	/^f010023f:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0100242	obj/kern/kernel.asm	/^f0100242:	e8 bf 59 00 00       	call   f0105c06 <memset>$/;"	l
f0100247	obj/kern/kernel.asm	/^f0100247:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f010024b	obj/kern/kernel.asm	/^f010024b:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010024f	obj/kern/kernel.asm	/^f010024f:	c7 04 24 13 6a 10 f0 	movl   $0xf0106a13,(%esp)$/;"	l
f0100256	obj/kern/kernel.asm	/^f0100256:	e8 54 40 00 00       	call   f01042af <cprintf>$/;"	l
f010025b	obj/kern/kernel.asm	/^f010025b:	0f be 45 e7          	movsbl -0x19(%ebp),%eax$/;"	l
f010025f	obj/kern/kernel.asm	/^f010025f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100263	obj/kern/kernel.asm	/^f0100263:	c7 04 24 18 6a 10 f0 	movl   $0xf0106a18,(%esp)$/;"	l
f010026a	obj/kern/kernel.asm	/^f010026a:	e8 40 40 00 00       	call   f01042af <cprintf>$/;"	l
f010026f	obj/kern/kernel.asm	/^f010026f:	e8 65 24 00 00       	call   f01026d9 <mem_init>$/;"	l
f0100274	obj/kern/kernel.asm	/^f0100274:	e8 01 36 00 00       	call   f010387a <env_init>$/;"	l
f0100279	obj/kern/kernel.asm	/^f0100279:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010027e	obj/kern/kernel.asm	/^f010027e:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f0100283	obj/kern/kernel.asm	/^f0100283:	b9 74 01 00 00       	mov    $0x174,%ecx$/;"	l
f0100288	obj/kern/kernel.asm	/^f0100288:	0f 30                	wrmsr  $/;"	l
f010028a	obj/kern/kernel.asm	/^f010028a:	b8 00 00 c0 ef       	mov    $0xefc00000,%eax$/;"	l
f010028f	obj/kern/kernel.asm	/^f010028f:	b1 75                	mov    $0x75,%cl$/;"	l
f0100291	obj/kern/kernel.asm	/^f0100291:	0f 30                	wrmsr  $/;"	l
f0100293	obj/kern/kernel.asm	/^f0100293:	b8 9c 4b 10 f0       	mov    $0xf0104b9c,%eax$/;"	l
f0100298	obj/kern/kernel.asm	/^f0100298:	b1 76                	mov    $0x76,%cl$/;"	l
f010029a	obj/kern/kernel.asm	/^f010029a:	0f 30                	wrmsr  $/;"	l
f010029c	obj/kern/kernel.asm	/^f010029c:	e8 ac 40 00 00       	call   f010434d <trap_init>$/;"	l
f01002a1	obj/kern/kernel.asm	/^f01002a1:	e8 24 5d 00 00       	call   f0105fca <mp_init>$/;"	l
f01002a6	obj/kern/kernel.asm	/^f01002a6:	e8 1f 60 00 00       	call   f01062ca <lapic_init>$/;"	l
f01002ab	obj/kern/kernel.asm	/^f01002ab:	90                   	nop$/;"	l
f01002ac	obj/kern/kernel.asm	/^f01002ac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01002b0	obj/kern/kernel.asm	/^f01002b0:	e8 38 3f 00 00       	call   f01041ed <pic_init>$/;"	l
f01002b5	obj/kern/kernel.asm	/^f01002b5:	83 3d e8 ce 22 f0 07 	cmpl   $0x7,0xf022cee8$/;"	l
f01002bc	obj/kern/kernel.asm	/^f01002bc:	77 24                	ja     f01002e2 <i386_init+0x17a>$/;"	l
f01002be	obj/kern/kernel.asm	/^f01002be:	c7 44 24 0c 00 70 00 	movl   $0x7000,0xc(%esp)$/;"	l
f01002c5	obj/kern/kernel.asm	/^f01002c5:	00 $/;"	l
f01002c6	obj/kern/kernel.asm	/^f01002c6:	c7 44 24 08 8c 6a 10 	movl   $0xf0106a8c,0x8(%esp)$/;"	l
f01002cd	obj/kern/kernel.asm	/^f01002cd:	f0 $/;"	l
f01002ce	obj/kern/kernel.asm	/^f01002ce:	c7 44 24 04 67 00 00 	movl   $0x67,0x4(%esp)$/;"	l
f01002d5	obj/kern/kernel.asm	/^f01002d5:	00 $/;"	l
f01002d6	obj/kern/kernel.asm	/^f01002d6:	c7 04 24 da 69 10 f0 	movl   $0xf01069da,(%esp)$/;"	l
f01002dd	obj/kern/kernel.asm	/^f01002dd:	e8 a3 fd ff ff       	call   f0100085 <_panic>$/;"	l
f01002e2	obj/kern/kernel.asm	/^f01002e2:	b8 e6 5e 10 f0       	mov    $0xf0105ee6,%eax$/;"	l
f01002e7	obj/kern/kernel.asm	/^f01002e7:	2d 6c 5e 10 f0       	sub    $0xf0105e6c,%eax$/;"	l
f01002ec	obj/kern/kernel.asm	/^f01002ec:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01002f0	obj/kern/kernel.asm	/^f01002f0:	c7 44 24 04 6c 5e 10 	movl   $0xf0105e6c,0x4(%esp)$/;"	l
f01002f7	obj/kern/kernel.asm	/^f01002f7:	f0 $/;"	l
f01002f8	obj/kern/kernel.asm	/^f01002f8:	c7 04 24 00 70 00 f0 	movl   $0xf0007000,(%esp)$/;"	l
f01002ff	obj/kern/kernel.asm	/^f01002ff:	e8 61 59 00 00       	call   f0105c65 <memmove>$/;"	l
f0100304	obj/kern/kernel.asm	/^f0100304:	6b 05 c4 d3 22 f0 74 	imul   $0x74,0xf022d3c4,%eax$/;"	l
f010030b	obj/kern/kernel.asm	/^f010030b:	05 20 d0 22 f0       	add    $0xf022d020,%eax$/;"	l
f0100310	obj/kern/kernel.asm	/^f0100310:	3d 20 d0 22 f0       	cmp    $0xf022d020,%eax$/;"	l
f0100315	obj/kern/kernel.asm	/^f0100315:	76 65                	jbe    f010037c <i386_init+0x214>$/;"	l
f0100317	obj/kern/kernel.asm	/^f0100317:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f010031c	obj/kern/kernel.asm	/^f010031c:	bb 20 d0 22 f0       	mov    $0xf022d020,%ebx$/;"	l
f0100321	obj/kern/kernel.asm	/^f0100321:	e8 88 5f 00 00       	call   f01062ae <cpunum>$/;"	l
f0100326	obj/kern/kernel.asm	/^f0100326:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0100329	obj/kern/kernel.asm	/^f0100329:	05 20 d0 22 f0       	add    $0xf022d020,%eax$/;"	l
f010032e	obj/kern/kernel.asm	/^f010032e:	39 c3                	cmp    %eax,%ebx$/;"	l
f0100330	obj/kern/kernel.asm	/^f0100330:	74 34                	je     f0100366 <i386_init+0x1fe>$/;"	l
f0100332	obj/kern/kernel.asm	/^f0100332:	89 f0                	mov    %esi,%eax$/;"	l
f0100334	obj/kern/kernel.asm	/^f0100334:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f0100337	obj/kern/kernel.asm	/^f0100337:	69 c0 35 c2 72 4f    	imul   $0x4f72c235,%eax,%eax$/;"	l
f010033d	obj/kern/kernel.asm	/^f010033d:	c1 e0 0f             	shl    $0xf,%eax$/;"	l
f0100340	obj/kern/kernel.asm	/^f0100340:	8d 80 00 60 23 f0    	lea    -0xfdca000(%eax),%eax$/;"	l
f0100346	obj/kern/kernel.asm	/^f0100346:	a3 e4 ce 22 f0       	mov    %eax,0xf022cee4$/;"	l
f010034b	obj/kern/kernel.asm	/^f010034b:	c7 44 24 04 00 70 00 	movl   $0x7000,0x4(%esp)$/;"	l
f0100352	obj/kern/kernel.asm	/^f0100352:	00 $/;"	l
f0100353	obj/kern/kernel.asm	/^f0100353:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100356	obj/kern/kernel.asm	/^f0100356:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100359	obj/kern/kernel.asm	/^f0100359:	e8 d6 60 00 00       	call   f0106434 <lapic_startap>$/;"	l
f010035e	obj/kern/kernel.asm	/^f010035e:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0100361	obj/kern/kernel.asm	/^f0100361:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0100364	obj/kern/kernel.asm	/^f0100364:	75 f8                	jne    f010035e <i386_init+0x1f6>$/;"	l
f0100366	obj/kern/kernel.asm	/^f0100366:	83 c3 74             	add    $0x74,%ebx$/;"	l
f0100369	obj/kern/kernel.asm	/^f0100369:	83 c6 74             	add    $0x74,%esi$/;"	l
f010036c	obj/kern/kernel.asm	/^f010036c:	6b 05 c4 d3 22 f0 74 	imul   $0x74,0xf022d3c4,%eax$/;"	l
f0100373	obj/kern/kernel.asm	/^f0100373:	05 20 d0 22 f0       	add    $0xf022d020,%eax$/;"	l
f0100378	obj/kern/kernel.asm	/^f0100378:	39 c3                	cmp    %eax,%ebx$/;"	l
f010037a	obj/kern/kernel.asm	/^f010037a:	72 a5                	jb     f0100321 <i386_init+0x1b9>$/;"	l
f010037c	obj/kern/kernel.asm	/^f010037c:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100381	obj/kern/kernel.asm	/^f0100381:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0100388	obj/kern/kernel.asm	/^f0100388:	00 $/;"	l
f0100389	obj/kern/kernel.asm	/^f0100389:	c7 44 24 04 52 89 00 	movl   $0x8952,0x4(%esp)$/;"	l
f0100390	obj/kern/kernel.asm	/^f0100390:	00 $/;"	l
f0100391	obj/kern/kernel.asm	/^f0100391:	c7 04 24 62 97 19 f0 	movl   $0xf0199762,(%esp)$/;"	l
f0100398	obj/kern/kernel.asm	/^f0100398:	e8 3c 3c 00 00       	call   f0103fd9 <env_create>$/;"	l
f010039d	obj/kern/kernel.asm	/^f010039d:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01003a0	obj/kern/kernel.asm	/^f01003a0:	83 fb 08             	cmp    $0x8,%ebx$/;"	l
f01003a3	obj/kern/kernel.asm	/^f01003a3:	75 dc                	jne    f0100381 <i386_init+0x219>$/;"	l
f01003a5	obj/kern/kernel.asm	/^f01003a5:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01003ac	obj/kern/kernel.asm	/^f01003ac:	00 $/;"	l
f01003ad	obj/kern/kernel.asm	/^f01003ad:	c7 44 24 04 15 8a 00 	movl   $0x8a15,0x4(%esp)$/;"	l
f01003b4	obj/kern/kernel.asm	/^f01003b4:	00 $/;"	l
f01003b5	obj/kern/kernel.asm	/^f01003b5:	c7 04 24 ad 32 22 f0 	movl   $0xf02232ad,(%esp)$/;"	l
f01003bc	obj/kern/kernel.asm	/^f01003bc:	e8 18 3c 00 00       	call   f0103fd9 <env_create>$/;"	l
f01003c1	obj/kern/kernel.asm	/^f01003c1:	e8 2a 48 00 00       	call   f0104bf0 <sched_yield>$/;"	l
f01003d0	obj/kern/kernel.asm	/^f01003d0 <delay>:$/;"	l
f01003d0	obj/kern/kernel.asm	/^f01003d0:	55                   	push   %ebp$/;"	l
f01003d1	obj/kern/kernel.asm	/^f01003d1:	89 e5                	mov    %esp,%ebp$/;"	l
f01003d3	obj/kern/kernel.asm	/^f01003d3:	ba 84 00 00 00       	mov    $0x84,%edx$/;"	l
f01003d8	obj/kern/kernel.asm	/^f01003d8:	ec                   	in     (%dx),%al$/;"	l
f01003d9	obj/kern/kernel.asm	/^f01003d9:	ec                   	in     (%dx),%al$/;"	l
f01003da	obj/kern/kernel.asm	/^f01003da:	ec                   	in     (%dx),%al$/;"	l
f01003db	obj/kern/kernel.asm	/^f01003db:	ec                   	in     (%dx),%al$/;"	l
f01003dc	obj/kern/kernel.asm	/^f01003dc:	5d                   	pop    %ebp$/;"	l
f01003dd	obj/kern/kernel.asm	/^f01003dd:	c3                   	ret    $/;"	l
f01003de	obj/kern/kernel.asm	/^f01003de <serial_proc_data>:$/;"	l
f01003de	obj/kern/kernel.asm	/^f01003de:	55                   	push   %ebp$/;"	l
f01003df	obj/kern/kernel.asm	/^f01003df:	89 e5                	mov    %esp,%ebp$/;"	l
f01003e1	obj/kern/kernel.asm	/^f01003e1:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f01003e6	obj/kern/kernel.asm	/^f01003e6:	ec                   	in     (%dx),%al$/;"	l
f01003e7	obj/kern/kernel.asm	/^f01003e7:	89 c2                	mov    %eax,%edx$/;"	l
f01003e9	obj/kern/kernel.asm	/^f01003e9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01003ee	obj/kern/kernel.asm	/^f01003ee:	f6 c2 01             	test   $0x1,%dl$/;"	l
f01003f1	obj/kern/kernel.asm	/^f01003f1:	74 09                	je     f01003fc <serial_proc_data+0x1e>$/;"	l
f01003f3	obj/kern/kernel.asm	/^f01003f3:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f01003f8	obj/kern/kernel.asm	/^f01003f8:	ec                   	in     (%dx),%al$/;"	l
f01003f9	obj/kern/kernel.asm	/^f01003f9:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01003fc	obj/kern/kernel.asm	/^f01003fc:	5d                   	pop    %ebp$/;"	l
f01003fd	obj/kern/kernel.asm	/^f01003fd:	c3                   	ret    $/;"	l
f01003fe	obj/kern/kernel.asm	/^f01003fe <cons_intr>:$/;"	l
f01003fe	obj/kern/kernel.asm	/^f01003fe:	55                   	push   %ebp$/;"	l
f01003ff	obj/kern/kernel.asm	/^f01003ff:	89 e5                	mov    %esp,%ebp$/;"	l
f0100401	obj/kern/kernel.asm	/^f0100401:	57                   	push   %edi$/;"	l
f0100402	obj/kern/kernel.asm	/^f0100402:	56                   	push   %esi$/;"	l
f0100403	obj/kern/kernel.asm	/^f0100403:	53                   	push   %ebx$/;"	l
f0100404	obj/kern/kernel.asm	/^f0100404:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100407	obj/kern/kernel.asm	/^f0100407:	89 c6                	mov    %eax,%esi$/;"	l
f0100409	obj/kern/kernel.asm	/^f0100409:	bb 24 c2 22 f0       	mov    $0xf022c224,%ebx$/;"	l
f010040e	obj/kern/kernel.asm	/^f010040e:	bf 20 c0 22 f0       	mov    $0xf022c020,%edi$/;"	l
f0100413	obj/kern/kernel.asm	/^f0100413:	eb 1e                	jmp    f0100433 <cons_intr+0x35>$/;"	l
f0100415	obj/kern/kernel.asm	/^f0100415:	85 c0                	test   %eax,%eax$/;"	l
f0100417	obj/kern/kernel.asm	/^f0100417:	74 1a                	je     f0100433 <cons_intr+0x35>$/;"	l
f0100419	obj/kern/kernel.asm	/^f0100419:	8b 13                	mov    (%ebx),%edx$/;"	l
f010041b	obj/kern/kernel.asm	/^f010041b:	88 04 17             	mov    %al,(%edi,%edx,1)$/;"	l
f010041e	obj/kern/kernel.asm	/^f010041e:	8d 42 01             	lea    0x1(%edx),%eax$/;"	l
f0100421	obj/kern/kernel.asm	/^f0100421:	3d 00 02 00 00       	cmp    $0x200,%eax$/;"	l
f0100426	obj/kern/kernel.asm	/^f0100426:	0f 94 c2             	sete   %dl$/;"	l
f0100429	obj/kern/kernel.asm	/^f0100429:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f010042c	obj/kern/kernel.asm	/^f010042c:	83 ea 01             	sub    $0x1,%edx$/;"	l
f010042f	obj/kern/kernel.asm	/^f010042f:	21 d0                	and    %edx,%eax$/;"	l
f0100431	obj/kern/kernel.asm	/^f0100431:	89 03                	mov    %eax,(%ebx)$/;"	l
f0100433	obj/kern/kernel.asm	/^f0100433:	ff d6                	call   *%esi$/;"	l
f0100435	obj/kern/kernel.asm	/^f0100435:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0100438	obj/kern/kernel.asm	/^f0100438:	75 db                	jne    f0100415 <cons_intr+0x17>$/;"	l
f010043a	obj/kern/kernel.asm	/^f010043a:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010043d	obj/kern/kernel.asm	/^f010043d:	5b                   	pop    %ebx$/;"	l
f010043e	obj/kern/kernel.asm	/^f010043e:	5e                   	pop    %esi$/;"	l
f010043f	obj/kern/kernel.asm	/^f010043f:	5f                   	pop    %edi$/;"	l
f0100440	obj/kern/kernel.asm	/^f0100440:	5d                   	pop    %ebp$/;"	l
f0100441	obj/kern/kernel.asm	/^f0100441:	c3                   	ret    $/;"	l
f0100442	obj/kern/kernel.asm	/^f0100442 <kbd_intr>:$/;"	l
f0100442	obj/kern/kernel.asm	/^f0100442:	55                   	push   %ebp$/;"	l
f0100443	obj/kern/kernel.asm	/^f0100443:	89 e5                	mov    %esp,%ebp$/;"	l
f0100445	obj/kern/kernel.asm	/^f0100445:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100448	obj/kern/kernel.asm	/^f0100448:	b8 da 06 10 f0       	mov    $0xf01006da,%eax$/;"	l
f010044d	obj/kern/kernel.asm	/^f010044d:	e8 ac ff ff ff       	call   f01003fe <cons_intr>$/;"	l
f0100452	obj/kern/kernel.asm	/^f0100452:	c9                   	leave  $/;"	l
f0100453	obj/kern/kernel.asm	/^f0100453:	c3                   	ret    $/;"	l
f0100454	obj/kern/kernel.asm	/^f0100454 <serial_intr>:$/;"	l
f0100454	obj/kern/kernel.asm	/^f0100454:	55                   	push   %ebp$/;"	l
f0100455	obj/kern/kernel.asm	/^f0100455:	89 e5                	mov    %esp,%ebp$/;"	l
f0100457	obj/kern/kernel.asm	/^f0100457:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010045a	obj/kern/kernel.asm	/^f010045a:	83 3d 04 c0 22 f0 00 	cmpl   $0x0,0xf022c004$/;"	l
f0100461	obj/kern/kernel.asm	/^f0100461:	74 0a                	je     f010046d <serial_intr+0x19>$/;"	l
f0100463	obj/kern/kernel.asm	/^f0100463:	b8 de 03 10 f0       	mov    $0xf01003de,%eax$/;"	l
f0100468	obj/kern/kernel.asm	/^f0100468:	e8 91 ff ff ff       	call   f01003fe <cons_intr>$/;"	l
f010046d	obj/kern/kernel.asm	/^f010046d:	c9                   	leave  $/;"	l
f010046e	obj/kern/kernel.asm	/^f010046e:	c3                   	ret    $/;"	l
f010046f	obj/kern/kernel.asm	/^f010046f <cons_getc>:$/;"	l
f010046f	obj/kern/kernel.asm	/^f010046f:	55                   	push   %ebp$/;"	l
f0100470	obj/kern/kernel.asm	/^f0100470:	89 e5                	mov    %esp,%ebp$/;"	l
f0100472	obj/kern/kernel.asm	/^f0100472:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100475	obj/kern/kernel.asm	/^f0100475:	e8 da ff ff ff       	call   f0100454 <serial_intr>$/;"	l
f010047a	obj/kern/kernel.asm	/^f010047a:	e8 c3 ff ff ff       	call   f0100442 <kbd_intr>$/;"	l
f010047f	obj/kern/kernel.asm	/^f010047f:	8b 15 20 c2 22 f0    	mov    0xf022c220,%edx$/;"	l
f0100485	obj/kern/kernel.asm	/^f0100485:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010048a	obj/kern/kernel.asm	/^f010048a:	3b 15 24 c2 22 f0    	cmp    0xf022c224,%edx$/;"	l
f0100490	obj/kern/kernel.asm	/^f0100490:	74 21                	je     f01004b3 <cons_getc+0x44>$/;"	l
f0100492	obj/kern/kernel.asm	/^f0100492:	0f b6 82 20 c0 22 f0 	movzbl -0xfdd3fe0(%edx),%eax$/;"	l
f0100499	obj/kern/kernel.asm	/^f0100499:	83 c2 01             	add    $0x1,%edx$/;"	l
f010049c	obj/kern/kernel.asm	/^f010049c:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f01004a2	obj/kern/kernel.asm	/^f01004a2:	0f 94 c1             	sete   %cl$/;"	l
f01004a5	obj/kern/kernel.asm	/^f01004a5:	0f b6 c9             	movzbl %cl,%ecx$/;"	l
f01004a8	obj/kern/kernel.asm	/^f01004a8:	83 e9 01             	sub    $0x1,%ecx$/;"	l
f01004ab	obj/kern/kernel.asm	/^f01004ab:	21 ca                	and    %ecx,%edx$/;"	l
f01004ad	obj/kern/kernel.asm	/^f01004ad:	89 15 20 c2 22 f0    	mov    %edx,0xf022c220$/;"	l
f01004b3	obj/kern/kernel.asm	/^f01004b3:	c9                   	leave  $/;"	l
f01004b4	obj/kern/kernel.asm	/^f01004b4:	c3                   	ret    $/;"	l
f01004b5	obj/kern/kernel.asm	/^f01004b5 <getchar>:$/;"	l
f01004b5	obj/kern/kernel.asm	/^f01004b5:	55                   	push   %ebp$/;"	l
f01004b6	obj/kern/kernel.asm	/^f01004b6:	89 e5                	mov    %esp,%ebp$/;"	l
f01004b8	obj/kern/kernel.asm	/^f01004b8:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01004bb	obj/kern/kernel.asm	/^f01004bb:	e8 af ff ff ff       	call   f010046f <cons_getc>$/;"	l
f01004c0	obj/kern/kernel.asm	/^f01004c0:	85 c0                	test   %eax,%eax$/;"	l
f01004c2	obj/kern/kernel.asm	/^f01004c2:	74 f7                	je     f01004bb <getchar+0x6>$/;"	l
f01004c4	obj/kern/kernel.asm	/^f01004c4:	c9                   	leave  $/;"	l
f01004c5	obj/kern/kernel.asm	/^f01004c5:	c3                   	ret    $/;"	l
f01004c6	obj/kern/kernel.asm	/^f01004c6 <iscons>:$/;"	l
f01004c6	obj/kern/kernel.asm	/^f01004c6:	55                   	push   %ebp$/;"	l
f01004c7	obj/kern/kernel.asm	/^f01004c7:	89 e5                	mov    %esp,%ebp$/;"	l
f01004c9	obj/kern/kernel.asm	/^f01004c9:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01004ce	obj/kern/kernel.asm	/^f01004ce:	5d                   	pop    %ebp$/;"	l
f01004cf	obj/kern/kernel.asm	/^f01004cf:	c3                   	ret    $/;"	l
f01004d0	obj/kern/kernel.asm	/^f01004d0 <cons_putc>:$/;"	l
f01004d0	obj/kern/kernel.asm	/^f01004d0:	55                   	push   %ebp$/;"	l
f01004d1	obj/kern/kernel.asm	/^f01004d1:	89 e5                	mov    %esp,%ebp$/;"	l
f01004d3	obj/kern/kernel.asm	/^f01004d3:	57                   	push   %edi$/;"	l
f01004d4	obj/kern/kernel.asm	/^f01004d4:	56                   	push   %esi$/;"	l
f01004d5	obj/kern/kernel.asm	/^f01004d5:	53                   	push   %ebx$/;"	l
f01004d6	obj/kern/kernel.asm	/^f01004d6:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f01004d9	obj/kern/kernel.asm	/^f01004d9:	89 c7                	mov    %eax,%edi$/;"	l
f01004db	obj/kern/kernel.asm	/^f01004db:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f01004e0	obj/kern/kernel.asm	/^f01004e0:	ec                   	in     (%dx),%al$/;"	l
f01004e1	obj/kern/kernel.asm	/^f01004e1:	a8 20                	test   $0x20,%al$/;"	l
f01004e3	obj/kern/kernel.asm	/^f01004e3:	75 21                	jne    f0100506 <cons_putc+0x36>$/;"	l
f01004e5	obj/kern/kernel.asm	/^f01004e5:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01004ea	obj/kern/kernel.asm	/^f01004ea:	be fd 03 00 00       	mov    $0x3fd,%esi$/;"	l
f01004ef	obj/kern/kernel.asm	/^f01004ef:	e8 dc fe ff ff       	call   f01003d0 <delay>$/;"	l
f01004f4	obj/kern/kernel.asm	/^f01004f4:	89 f2                	mov    %esi,%edx$/;"	l
f01004f6	obj/kern/kernel.asm	/^f01004f6:	ec                   	in     (%dx),%al$/;"	l
f01004f7	obj/kern/kernel.asm	/^f01004f7:	a8 20                	test   $0x20,%al$/;"	l
f01004f9	obj/kern/kernel.asm	/^f01004f9:	75 0b                	jne    f0100506 <cons_putc+0x36>$/;"	l
f01004fb	obj/kern/kernel.asm	/^f01004fb:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01004fe	obj/kern/kernel.asm	/^f01004fe:	81 fb 00 32 00 00    	cmp    $0x3200,%ebx$/;"	l
f0100504	obj/kern/kernel.asm	/^f0100504:	75 e9                	jne    f01004ef <cons_putc+0x1f>$/;"	l
f0100506	obj/kern/kernel.asm	/^f0100506:	89 fa                	mov    %edi,%edx$/;"	l
f0100508	obj/kern/kernel.asm	/^f0100508:	89 f8                	mov    %edi,%eax$/;"	l
f010050a	obj/kern/kernel.asm	/^f010050a:	88 55 e7             	mov    %dl,-0x19(%ebp)$/;"	l
f010050d	obj/kern/kernel.asm	/^f010050d:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f0100512	obj/kern/kernel.asm	/^f0100512:	ee                   	out    %al,(%dx)$/;"	l
f0100513	obj/kern/kernel.asm	/^f0100513:	b2 79                	mov    $0x79,%dl$/;"	l
f0100515	obj/kern/kernel.asm	/^f0100515:	ec                   	in     (%dx),%al$/;"	l
f0100516	obj/kern/kernel.asm	/^f0100516:	84 c0                	test   %al,%al$/;"	l
f0100518	obj/kern/kernel.asm	/^f0100518:	78 21                	js     f010053b <cons_putc+0x6b>$/;"	l
f010051a	obj/kern/kernel.asm	/^f010051a:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010051f	obj/kern/kernel.asm	/^f010051f:	be 79 03 00 00       	mov    $0x379,%esi$/;"	l
f0100524	obj/kern/kernel.asm	/^f0100524:	e8 a7 fe ff ff       	call   f01003d0 <delay>$/;"	l
f0100529	obj/kern/kernel.asm	/^f0100529:	89 f2                	mov    %esi,%edx$/;"	l
f010052b	obj/kern/kernel.asm	/^f010052b:	ec                   	in     (%dx),%al$/;"	l
f010052c	obj/kern/kernel.asm	/^f010052c:	84 c0                	test   %al,%al$/;"	l
f010052e	obj/kern/kernel.asm	/^f010052e:	78 0b                	js     f010053b <cons_putc+0x6b>$/;"	l
f0100530	obj/kern/kernel.asm	/^f0100530:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100533	obj/kern/kernel.asm	/^f0100533:	81 fb 00 32 00 00    	cmp    $0x3200,%ebx$/;"	l
f0100539	obj/kern/kernel.asm	/^f0100539:	75 e9                	jne    f0100524 <cons_putc+0x54>$/;"	l
f010053b	obj/kern/kernel.asm	/^f010053b:	ba 78 03 00 00       	mov    $0x378,%edx$/;"	l
f0100540	obj/kern/kernel.asm	/^f0100540:	0f b6 45 e7          	movzbl -0x19(%ebp),%eax$/;"	l
f0100544	obj/kern/kernel.asm	/^f0100544:	ee                   	out    %al,(%dx)$/;"	l
f0100545	obj/kern/kernel.asm	/^f0100545:	b2 7a                	mov    $0x7a,%dl$/;"	l
f0100547	obj/kern/kernel.asm	/^f0100547:	b8 0d 00 00 00       	mov    $0xd,%eax$/;"	l
f010054c	obj/kern/kernel.asm	/^f010054c:	ee                   	out    %al,(%dx)$/;"	l
f010054d	obj/kern/kernel.asm	/^f010054d:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f0100552	obj/kern/kernel.asm	/^f0100552:	ee                   	out    %al,(%dx)$/;"	l
f0100553	obj/kern/kernel.asm	/^f0100553:	f7 c7 00 ff ff ff    	test   $0xffffff00,%edi$/;"	l
f0100559	obj/kern/kernel.asm	/^f0100559:	75 06                	jne    f0100561 <cons_putc+0x91>$/;"	l
f010055b	obj/kern/kernel.asm	/^f010055b:	81 cf 00 07 00 00    	or     $0x700,%edi$/;"	l
f0100561	obj/kern/kernel.asm	/^f0100561:	89 f8                	mov    %edi,%eax$/;"	l
f0100563	obj/kern/kernel.asm	/^f0100563:	25 ff 00 00 00       	and    $0xff,%eax$/;"	l
f0100568	obj/kern/kernel.asm	/^f0100568:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f010056b	obj/kern/kernel.asm	/^f010056b:	0f 84 83 00 00 00    	je     f01005f4 <cons_putc+0x124>$/;"	l
f0100571	obj/kern/kernel.asm	/^f0100571:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0100574	obj/kern/kernel.asm	/^f0100574:	7f 0c                	jg     f0100582 <cons_putc+0xb2>$/;"	l
f0100576	obj/kern/kernel.asm	/^f0100576:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f0100579	obj/kern/kernel.asm	/^f0100579:	0f 85 a9 00 00 00    	jne    f0100628 <cons_putc+0x158>$/;"	l
f010057f	obj/kern/kernel.asm	/^f010057f:	90                   	nop$/;"	l
f0100580	obj/kern/kernel.asm	/^f0100580:	eb 18                	jmp    f010059a <cons_putc+0xca>$/;"	l
f0100582	obj/kern/kernel.asm	/^f0100582:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f0100585	obj/kern/kernel.asm	/^f0100585:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0100588	obj/kern/kernel.asm	/^f0100588:	74 40                	je     f01005ca <cons_putc+0xfa>$/;"	l
f010058a	obj/kern/kernel.asm	/^f010058a:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
f010058d	obj/kern/kernel.asm	/^f010058d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0100590	obj/kern/kernel.asm	/^f0100590:	0f 85 92 00 00 00    	jne    f0100628 <cons_putc+0x158>$/;"	l
f0100596	obj/kern/kernel.asm	/^f0100596:	66 90                	xchg   %ax,%ax$/;"	l
f0100598	obj/kern/kernel.asm	/^f0100598:	eb 38                	jmp    f01005d2 <cons_putc+0x102>$/;"	l
f010059a	obj/kern/kernel.asm	/^f010059a:	0f b7 05 10 c0 22 f0 	movzwl 0xf022c010,%eax$/;"	l
f01005a1	obj/kern/kernel.asm	/^f01005a1:	66 85 c0             	test   %ax,%ax$/;"	l
f01005a4	obj/kern/kernel.asm	/^f01005a4:	0f 84 e8 00 00 00    	je     f0100692 <cons_putc+0x1c2>$/;"	l
f01005aa	obj/kern/kernel.asm	/^f01005aa:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01005ad	obj/kern/kernel.asm	/^f01005ad:	66 a3 10 c0 22 f0    	mov    %ax,0xf022c010$/;"	l
f01005b3	obj/kern/kernel.asm	/^f01005b3:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f01005b6	obj/kern/kernel.asm	/^f01005b6:	66 81 e7 00 ff       	and    $0xff00,%di$/;"	l
f01005bb	obj/kern/kernel.asm	/^f01005bb:	83 cf 20             	or     $0x20,%edi$/;"	l
f01005be	obj/kern/kernel.asm	/^f01005be:	8b 15 0c c0 22 f0    	mov    0xf022c00c,%edx$/;"	l
f01005c4	obj/kern/kernel.asm	/^f01005c4:	66 89 3c 42          	mov    %di,(%edx,%eax,2)$/;"	l
f01005c8	obj/kern/kernel.asm	/^f01005c8:	eb 7b                	jmp    f0100645 <cons_putc+0x175>$/;"	l
f01005ca	obj/kern/kernel.asm	/^f01005ca:	66 83 05 10 c0 22 f0 	addw   $0x50,0xf022c010$/;"	l
f01005d1	obj/kern/kernel.asm	/^f01005d1:	50 $/;"	l
f01005d2	obj/kern/kernel.asm	/^f01005d2:	0f b7 05 10 c0 22 f0 	movzwl 0xf022c010,%eax$/;"	l
f01005d9	obj/kern/kernel.asm	/^f01005d9:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eax$/;"	l
f01005df	obj/kern/kernel.asm	/^f01005df:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01005e2	obj/kern/kernel.asm	/^f01005e2:	66 c1 e8 06          	shr    $0x6,%ax$/;"	l
f01005e6	obj/kern/kernel.asm	/^f01005e6:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f01005e9	obj/kern/kernel.asm	/^f01005e9:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f01005ec	obj/kern/kernel.asm	/^f01005ec:	66 a3 10 c0 22 f0    	mov    %ax,0xf022c010$/;"	l
f01005f2	obj/kern/kernel.asm	/^f01005f2:	eb 51                	jmp    f0100645 <cons_putc+0x175>$/;"	l
f01005f4	obj/kern/kernel.asm	/^f01005f4:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01005f9	obj/kern/kernel.asm	/^f01005f9:	e8 d2 fe ff ff       	call   f01004d0 <cons_putc>$/;"	l
f01005fe	obj/kern/kernel.asm	/^f01005fe:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100603	obj/kern/kernel.asm	/^f0100603:	e8 c8 fe ff ff       	call   f01004d0 <cons_putc>$/;"	l
f0100608	obj/kern/kernel.asm	/^f0100608:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010060d	obj/kern/kernel.asm	/^f010060d:	e8 be fe ff ff       	call   f01004d0 <cons_putc>$/;"	l
f0100612	obj/kern/kernel.asm	/^f0100612:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100617	obj/kern/kernel.asm	/^f0100617:	e8 b4 fe ff ff       	call   f01004d0 <cons_putc>$/;"	l
f010061c	obj/kern/kernel.asm	/^f010061c:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100621	obj/kern/kernel.asm	/^f0100621:	e8 aa fe ff ff       	call   f01004d0 <cons_putc>$/;"	l
f0100626	obj/kern/kernel.asm	/^f0100626:	eb 1d                	jmp    f0100645 <cons_putc+0x175>$/;"	l
f0100628	obj/kern/kernel.asm	/^f0100628:	0f b7 05 10 c0 22 f0 	movzwl 0xf022c010,%eax$/;"	l
f010062f	obj/kern/kernel.asm	/^f010062f:	0f b7 c8             	movzwl %ax,%ecx$/;"	l
f0100632	obj/kern/kernel.asm	/^f0100632:	8b 15 0c c0 22 f0    	mov    0xf022c00c,%edx$/;"	l
f0100638	obj/kern/kernel.asm	/^f0100638:	66 89 3c 4a          	mov    %di,(%edx,%ecx,2)$/;"	l
f010063c	obj/kern/kernel.asm	/^f010063c:	83 c0 01             	add    $0x1,%eax$/;"	l
f010063f	obj/kern/kernel.asm	/^f010063f:	66 a3 10 c0 22 f0    	mov    %ax,0xf022c010$/;"	l
f0100645	obj/kern/kernel.asm	/^f0100645:	66 81 3d 10 c0 22 f0 	cmpw   $0x7cf,0xf022c010$/;"	l
f010064c	obj/kern/kernel.asm	/^f010064c:	cf 07 $/;"	l
f010064e	obj/kern/kernel.asm	/^f010064e:	76 42                	jbe    f0100692 <cons_putc+0x1c2>$/;"	l
f0100650	obj/kern/kernel.asm	/^f0100650:	a1 0c c0 22 f0       	mov    0xf022c00c,%eax$/;"	l
f0100655	obj/kern/kernel.asm	/^f0100655:	c7 44 24 08 00 0f 00 	movl   $0xf00,0x8(%esp)$/;"	l
f010065c	obj/kern/kernel.asm	/^f010065c:	00 $/;"	l
f010065d	obj/kern/kernel.asm	/^f010065d:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
f0100663	obj/kern/kernel.asm	/^f0100663:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0100667	obj/kern/kernel.asm	/^f0100667:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010066a	obj/kern/kernel.asm	/^f010066a:	e8 f6 55 00 00       	call   f0105c65 <memmove>$/;"	l
f010066f	obj/kern/kernel.asm	/^f010066f:	8b 15 0c c0 22 f0    	mov    0xf022c00c,%edx$/;"	l
f0100675	obj/kern/kernel.asm	/^f0100675:	b8 80 07 00 00       	mov    $0x780,%eax$/;"	l
f010067a	obj/kern/kernel.asm	/^f010067a:	66 c7 04 42 20 07    	movw   $0x720,(%edx,%eax,2)$/;"	l
f0100680	obj/kern/kernel.asm	/^f0100680:	83 c0 01             	add    $0x1,%eax$/;"	l
f0100683	obj/kern/kernel.asm	/^f0100683:	3d d0 07 00 00       	cmp    $0x7d0,%eax$/;"	l
f0100688	obj/kern/kernel.asm	/^f0100688:	75 f0                	jne    f010067a <cons_putc+0x1aa>$/;"	l
f010068a	obj/kern/kernel.asm	/^f010068a:	66 83 2d 10 c0 22 f0 	subw   $0x50,0xf022c010$/;"	l
f0100691	obj/kern/kernel.asm	/^f0100691:	50 $/;"	l
f0100692	obj/kern/kernel.asm	/^f0100692:	8b 0d 08 c0 22 f0    	mov    0xf022c008,%ecx$/;"	l
f0100698	obj/kern/kernel.asm	/^f0100698:	89 cb                	mov    %ecx,%ebx$/;"	l
f010069a	obj/kern/kernel.asm	/^f010069a:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f010069f	obj/kern/kernel.asm	/^f010069f:	89 ca                	mov    %ecx,%edx$/;"	l
f01006a1	obj/kern/kernel.asm	/^f01006a1:	ee                   	out    %al,(%dx)$/;"	l
f01006a2	obj/kern/kernel.asm	/^f01006a2:	0f b7 35 10 c0 22 f0 	movzwl 0xf022c010,%esi$/;"	l
f01006a9	obj/kern/kernel.asm	/^f01006a9:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01006ac	obj/kern/kernel.asm	/^f01006ac:	89 f0                	mov    %esi,%eax$/;"	l
f01006ae	obj/kern/kernel.asm	/^f01006ae:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f01006b2	obj/kern/kernel.asm	/^f01006b2:	89 ca                	mov    %ecx,%edx$/;"	l
f01006b4	obj/kern/kernel.asm	/^f01006b4:	ee                   	out    %al,(%dx)$/;"	l
f01006b5	obj/kern/kernel.asm	/^f01006b5:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f01006ba	obj/kern/kernel.asm	/^f01006ba:	89 da                	mov    %ebx,%edx$/;"	l
f01006bc	obj/kern/kernel.asm	/^f01006bc:	ee                   	out    %al,(%dx)$/;"	l
f01006bd	obj/kern/kernel.asm	/^f01006bd:	89 f0                	mov    %esi,%eax$/;"	l
f01006bf	obj/kern/kernel.asm	/^f01006bf:	89 ca                	mov    %ecx,%edx$/;"	l
f01006c1	obj/kern/kernel.asm	/^f01006c1:	ee                   	out    %al,(%dx)$/;"	l
f01006c2	obj/kern/kernel.asm	/^f01006c2:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f01006c5	obj/kern/kernel.asm	/^f01006c5:	5b                   	pop    %ebx$/;"	l
f01006c6	obj/kern/kernel.asm	/^f01006c6:	5e                   	pop    %esi$/;"	l
f01006c7	obj/kern/kernel.asm	/^f01006c7:	5f                   	pop    %edi$/;"	l
f01006c8	obj/kern/kernel.asm	/^f01006c8:	5d                   	pop    %ebp$/;"	l
f01006c9	obj/kern/kernel.asm	/^f01006c9:	c3                   	ret    $/;"	l
f01006ca	obj/kern/kernel.asm	/^f01006ca <cputchar>:$/;"	l
f01006ca	obj/kern/kernel.asm	/^f01006ca:	55                   	push   %ebp$/;"	l
f01006cb	obj/kern/kernel.asm	/^f01006cb:	89 e5                	mov    %esp,%ebp$/;"	l
f01006cd	obj/kern/kernel.asm	/^f01006cd:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01006d0	obj/kern/kernel.asm	/^f01006d0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01006d3	obj/kern/kernel.asm	/^f01006d3:	e8 f8 fd ff ff       	call   f01004d0 <cons_putc>$/;"	l
f01006d8	obj/kern/kernel.asm	/^f01006d8:	c9                   	leave  $/;"	l
f01006d9	obj/kern/kernel.asm	/^f01006d9:	c3                   	ret    $/;"	l
f01006da	obj/kern/kernel.asm	/^f01006da <kbd_proc_data>:$/;"	l
f01006da	obj/kern/kernel.asm	/^f01006da:	55                   	push   %ebp$/;"	l
f01006db	obj/kern/kernel.asm	/^f01006db:	89 e5                	mov    %esp,%ebp$/;"	l
f01006dd	obj/kern/kernel.asm	/^f01006dd:	53                   	push   %ebx$/;"	l
f01006de	obj/kern/kernel.asm	/^f01006de:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01006e1	obj/kern/kernel.asm	/^f01006e1:	ba 64 00 00 00       	mov    $0x64,%edx$/;"	l
f01006e6	obj/kern/kernel.asm	/^f01006e6:	ec                   	in     (%dx),%al$/;"	l
f01006e7	obj/kern/kernel.asm	/^f01006e7:	bb ff ff ff ff       	mov    $0xffffffff,%ebx$/;"	l
f01006ec	obj/kern/kernel.asm	/^f01006ec:	a8 01                	test   $0x1,%al$/;"	l
f01006ee	obj/kern/kernel.asm	/^f01006ee:	0f 84 d9 00 00 00    	je     f01007cd <kbd_proc_data+0xf3>$/;"	l
f01006f4	obj/kern/kernel.asm	/^f01006f4:	b2 60                	mov    $0x60,%dl$/;"	l
f01006f6	obj/kern/kernel.asm	/^f01006f6:	ec                   	in     (%dx),%al$/;"	l
f01006f7	obj/kern/kernel.asm	/^f01006f7:	3c e0                	cmp    $0xe0,%al$/;"	l
f01006f9	obj/kern/kernel.asm	/^f01006f9:	75 11                	jne    f010070c <kbd_proc_data+0x32>$/;"	l
f01006fb	obj/kern/kernel.asm	/^f01006fb:	83 0d 00 c0 22 f0 40 	orl    $0x40,0xf022c000$/;"	l
f0100702	obj/kern/kernel.asm	/^f0100702:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100707	obj/kern/kernel.asm	/^f0100707:	e9 c1 00 00 00       	jmp    f01007cd <kbd_proc_data+0xf3>$/;"	l
f010070c	obj/kern/kernel.asm	/^f010070c:	84 c0                	test   %al,%al$/;"	l
f010070e	obj/kern/kernel.asm	/^f010070e:	79 32                	jns    f0100742 <kbd_proc_data+0x68>$/;"	l
f0100710	obj/kern/kernel.asm	/^f0100710:	8b 15 00 c0 22 f0    	mov    0xf022c000,%edx$/;"	l
f0100716	obj/kern/kernel.asm	/^f0100716:	f6 c2 40             	test   $0x40,%dl$/;"	l
f0100719	obj/kern/kernel.asm	/^f0100719:	75 03                	jne    f010071e <kbd_proc_data+0x44>$/;"	l
f010071b	obj/kern/kernel.asm	/^f010071b:	83 e0 7f             	and    $0x7f,%eax$/;"	l
f010071e	obj/kern/kernel.asm	/^f010071e:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100721	obj/kern/kernel.asm	/^f0100721:	0f b6 80 e0 6a 10 f0 	movzbl -0xfef9520(%eax),%eax$/;"	l
f0100728	obj/kern/kernel.asm	/^f0100728:	83 c8 40             	or     $0x40,%eax$/;"	l
f010072b	obj/kern/kernel.asm	/^f010072b:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010072e	obj/kern/kernel.asm	/^f010072e:	f7 d0                	not    %eax$/;"	l
f0100730	obj/kern/kernel.asm	/^f0100730:	21 c2                	and    %eax,%edx$/;"	l
f0100732	obj/kern/kernel.asm	/^f0100732:	89 15 00 c0 22 f0    	mov    %edx,0xf022c000$/;"	l
f0100738	obj/kern/kernel.asm	/^f0100738:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010073d	obj/kern/kernel.asm	/^f010073d:	e9 8b 00 00 00       	jmp    f01007cd <kbd_proc_data+0xf3>$/;"	l
f0100742	obj/kern/kernel.asm	/^f0100742:	8b 15 00 c0 22 f0    	mov    0xf022c000,%edx$/;"	l
f0100748	obj/kern/kernel.asm	/^f0100748:	f6 c2 40             	test   $0x40,%dl$/;"	l
f010074b	obj/kern/kernel.asm	/^f010074b:	74 0c                	je     f0100759 <kbd_proc_data+0x7f>$/;"	l
f010074d	obj/kern/kernel.asm	/^f010074d:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f0100750	obj/kern/kernel.asm	/^f0100750:	83 e2 bf             	and    $0xffffffbf,%edx$/;"	l
f0100753	obj/kern/kernel.asm	/^f0100753:	89 15 00 c0 22 f0    	mov    %edx,0xf022c000$/;"	l
f0100759	obj/kern/kernel.asm	/^f0100759:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010075c	obj/kern/kernel.asm	/^f010075c:	0f b6 90 e0 6a 10 f0 	movzbl -0xfef9520(%eax),%edx$/;"	l
f0100763	obj/kern/kernel.asm	/^f0100763:	0b 15 00 c0 22 f0    	or     0xf022c000,%edx$/;"	l
f0100769	obj/kern/kernel.asm	/^f0100769:	0f b6 88 e0 6b 10 f0 	movzbl -0xfef9420(%eax),%ecx$/;"	l
f0100770	obj/kern/kernel.asm	/^f0100770:	31 ca                	xor    %ecx,%edx$/;"	l
f0100772	obj/kern/kernel.asm	/^f0100772:	89 15 00 c0 22 f0    	mov    %edx,0xf022c000$/;"	l
f0100778	obj/kern/kernel.asm	/^f0100778:	89 d1                	mov    %edx,%ecx$/;"	l
f010077a	obj/kern/kernel.asm	/^f010077a:	83 e1 03             	and    $0x3,%ecx$/;"	l
f010077d	obj/kern/kernel.asm	/^f010077d:	8b 0c 8d e0 6c 10 f0 	mov    -0xfef9320(,%ecx,4),%ecx$/;"	l
f0100784	obj/kern/kernel.asm	/^f0100784:	0f b6 1c 01          	movzbl (%ecx,%eax,1),%ebx$/;"	l
f0100788	obj/kern/kernel.asm	/^f0100788:	f6 c2 08             	test   $0x8,%dl$/;"	l
f010078b	obj/kern/kernel.asm	/^f010078b:	74 1a                	je     f01007a7 <kbd_proc_data+0xcd>$/;"	l
f010078d	obj/kern/kernel.asm	/^f010078d:	89 d9                	mov    %ebx,%ecx$/;"	l
f010078f	obj/kern/kernel.asm	/^f010078f:	8d 43 9f             	lea    -0x61(%ebx),%eax$/;"	l
f0100792	obj/kern/kernel.asm	/^f0100792:	83 f8 19             	cmp    $0x19,%eax$/;"	l
f0100795	obj/kern/kernel.asm	/^f0100795:	77 05                	ja     f010079c <kbd_proc_data+0xc2>$/;"	l
f0100797	obj/kern/kernel.asm	/^f0100797:	83 eb 20             	sub    $0x20,%ebx$/;"	l
f010079a	obj/kern/kernel.asm	/^f010079a:	eb 0b                	jmp    f01007a7 <kbd_proc_data+0xcd>$/;"	l
f010079c	obj/kern/kernel.asm	/^f010079c:	83 e9 41             	sub    $0x41,%ecx$/;"	l
f010079f	obj/kern/kernel.asm	/^f010079f:	83 f9 19             	cmp    $0x19,%ecx$/;"	l
f01007a2	obj/kern/kernel.asm	/^f01007a2:	77 03                	ja     f01007a7 <kbd_proc_data+0xcd>$/;"	l
f01007a4	obj/kern/kernel.asm	/^f01007a4:	83 c3 20             	add    $0x20,%ebx$/;"	l
f01007a7	obj/kern/kernel.asm	/^f01007a7:	f7 d2                	not    %edx$/;"	l
f01007a9	obj/kern/kernel.asm	/^f01007a9:	f6 c2 06             	test   $0x6,%dl$/;"	l
f01007ac	obj/kern/kernel.asm	/^f01007ac:	75 1f                	jne    f01007cd <kbd_proc_data+0xf3>$/;"	l
f01007ae	obj/kern/kernel.asm	/^f01007ae:	81 fb e9 00 00 00    	cmp    $0xe9,%ebx$/;"	l
f01007b4	obj/kern/kernel.asm	/^f01007b4:	75 17                	jne    f01007cd <kbd_proc_data+0xf3>$/;"	l
f01007b6	obj/kern/kernel.asm	/^f01007b6:	c7 04 24 af 6a 10 f0 	movl   $0xf0106aaf,(%esp)$/;"	l
f01007bd	obj/kern/kernel.asm	/^f01007bd:	e8 ed 3a 00 00       	call   f01042af <cprintf>$/;"	l
f01007c2	obj/kern/kernel.asm	/^f01007c2:	ba 92 00 00 00       	mov    $0x92,%edx$/;"	l
f01007c7	obj/kern/kernel.asm	/^f01007c7:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f01007cc	obj/kern/kernel.asm	/^f01007cc:	ee                   	out    %al,(%dx)$/;"	l
f01007cd	obj/kern/kernel.asm	/^f01007cd:	89 d8                	mov    %ebx,%eax$/;"	l
f01007cf	obj/kern/kernel.asm	/^f01007cf:	83 c4 14             	add    $0x14,%esp$/;"	l
f01007d2	obj/kern/kernel.asm	/^f01007d2:	5b                   	pop    %ebx$/;"	l
f01007d3	obj/kern/kernel.asm	/^f01007d3:	5d                   	pop    %ebp$/;"	l
f01007d4	obj/kern/kernel.asm	/^f01007d4:	c3                   	ret    $/;"	l
f01007d5	obj/kern/kernel.asm	/^f01007d5 <cons_init>:$/;"	l
f01007d5	obj/kern/kernel.asm	/^f01007d5:	55                   	push   %ebp$/;"	l
f01007d6	obj/kern/kernel.asm	/^f01007d6:	89 e5                	mov    %esp,%ebp$/;"	l
f01007d8	obj/kern/kernel.asm	/^f01007d8:	57                   	push   %edi$/;"	l
f01007d9	obj/kern/kernel.asm	/^f01007d9:	56                   	push   %esi$/;"	l
f01007da	obj/kern/kernel.asm	/^f01007da:	53                   	push   %ebx$/;"	l
f01007db	obj/kern/kernel.asm	/^f01007db:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01007de	obj/kern/kernel.asm	/^f01007de:	b8 00 80 0b f0       	mov    $0xf00b8000,%eax$/;"	l
f01007e3	obj/kern/kernel.asm	/^f01007e3:	0f b7 10             	movzwl (%eax),%edx$/;"	l
f01007e6	obj/kern/kernel.asm	/^f01007e6:	66 c7 00 5a a5       	movw   $0xa55a,(%eax)$/;"	l
f01007eb	obj/kern/kernel.asm	/^f01007eb:	0f b7 00             	movzwl (%eax),%eax$/;"	l
f01007ee	obj/kern/kernel.asm	/^f01007ee:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
f01007f2	obj/kern/kernel.asm	/^f01007f2:	74 11                	je     f0100805 <cons_init+0x30>$/;"	l
f01007f4	obj/kern/kernel.asm	/^f01007f4:	c7 05 08 c0 22 f0 b4 	movl   $0x3b4,0xf022c008$/;"	l
f01007fb	obj/kern/kernel.asm	/^f01007fb:	03 00 00 $/;"	l
f01007fe	obj/kern/kernel.asm	/^f01007fe:	be 00 00 0b f0       	mov    $0xf00b0000,%esi$/;"	l
f0100803	obj/kern/kernel.asm	/^f0100803:	eb 16                	jmp    f010081b <cons_init+0x46>$/;"	l
f0100805	obj/kern/kernel.asm	/^f0100805:	66 89 15 00 80 0b f0 	mov    %dx,0xf00b8000$/;"	l
f010080c	obj/kern/kernel.asm	/^f010080c:	c7 05 08 c0 22 f0 d4 	movl   $0x3d4,0xf022c008$/;"	l
f0100813	obj/kern/kernel.asm	/^f0100813:	03 00 00 $/;"	l
f0100816	obj/kern/kernel.asm	/^f0100816:	be 00 80 0b f0       	mov    $0xf00b8000,%esi$/;"	l
f010081b	obj/kern/kernel.asm	/^f010081b:	8b 0d 08 c0 22 f0    	mov    0xf022c008,%ecx$/;"	l
f0100821	obj/kern/kernel.asm	/^f0100821:	89 cb                	mov    %ecx,%ebx$/;"	l
f0100823	obj/kern/kernel.asm	/^f0100823:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f0100828	obj/kern/kernel.asm	/^f0100828:	89 ca                	mov    %ecx,%edx$/;"	l
f010082a	obj/kern/kernel.asm	/^f010082a:	ee                   	out    %al,(%dx)$/;"	l
f010082b	obj/kern/kernel.asm	/^f010082b:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010082e	obj/kern/kernel.asm	/^f010082e:	89 ca                	mov    %ecx,%edx$/;"	l
f0100830	obj/kern/kernel.asm	/^f0100830:	ec                   	in     (%dx),%al$/;"	l
f0100831	obj/kern/kernel.asm	/^f0100831:	0f b6 f8             	movzbl %al,%edi$/;"	l
f0100834	obj/kern/kernel.asm	/^f0100834:	c1 e7 08             	shl    $0x8,%edi$/;"	l
f0100837	obj/kern/kernel.asm	/^f0100837:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f010083c	obj/kern/kernel.asm	/^f010083c:	89 da                	mov    %ebx,%edx$/;"	l
f010083e	obj/kern/kernel.asm	/^f010083e:	ee                   	out    %al,(%dx)$/;"	l
f010083f	obj/kern/kernel.asm	/^f010083f:	89 ca                	mov    %ecx,%edx$/;"	l
f0100841	obj/kern/kernel.asm	/^f0100841:	ec                   	in     (%dx),%al$/;"	l
f0100842	obj/kern/kernel.asm	/^f0100842:	89 35 0c c0 22 f0    	mov    %esi,0xf022c00c$/;"	l
f0100848	obj/kern/kernel.asm	/^f0100848:	0f b6 c8             	movzbl %al,%ecx$/;"	l
f010084b	obj/kern/kernel.asm	/^f010084b:	09 cf                	or     %ecx,%edi$/;"	l
f010084d	obj/kern/kernel.asm	/^f010084d:	66 89 3d 10 c0 22 f0 	mov    %di,0xf022c010$/;"	l
f0100854	obj/kern/kernel.asm	/^f0100854:	e8 e9 fb ff ff       	call   f0100442 <kbd_intr>$/;"	l
f0100859	obj/kern/kernel.asm	/^f0100859:	0f b7 05 70 13 12 f0 	movzwl 0xf0121370,%eax$/;"	l
f0100860	obj/kern/kernel.asm	/^f0100860:	25 fd ff 00 00       	and    $0xfffd,%eax$/;"	l
f0100865	obj/kern/kernel.asm	/^f0100865:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100868	obj/kern/kernel.asm	/^f0100868:	e8 0f 39 00 00       	call   f010417c <irq_setmask_8259A>$/;"	l
f010086d	obj/kern/kernel.asm	/^f010086d:	bb fa 03 00 00       	mov    $0x3fa,%ebx$/;"	l
f0100872	obj/kern/kernel.asm	/^f0100872:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100877	obj/kern/kernel.asm	/^f0100877:	89 da                	mov    %ebx,%edx$/;"	l
f0100879	obj/kern/kernel.asm	/^f0100879:	ee                   	out    %al,(%dx)$/;"	l
f010087a	obj/kern/kernel.asm	/^f010087a:	b2 fb                	mov    $0xfb,%dl$/;"	l
f010087c	obj/kern/kernel.asm	/^f010087c:	b8 80 ff ff ff       	mov    $0xffffff80,%eax$/;"	l
f0100881	obj/kern/kernel.asm	/^f0100881:	ee                   	out    %al,(%dx)$/;"	l
f0100882	obj/kern/kernel.asm	/^f0100882:	b9 f8 03 00 00       	mov    $0x3f8,%ecx$/;"	l
f0100887	obj/kern/kernel.asm	/^f0100887:	b8 0c 00 00 00       	mov    $0xc,%eax$/;"	l
f010088c	obj/kern/kernel.asm	/^f010088c:	89 ca                	mov    %ecx,%edx$/;"	l
f010088e	obj/kern/kernel.asm	/^f010088e:	ee                   	out    %al,(%dx)$/;"	l
f010088f	obj/kern/kernel.asm	/^f010088f:	b2 f9                	mov    $0xf9,%dl$/;"	l
f0100891	obj/kern/kernel.asm	/^f0100891:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100896	obj/kern/kernel.asm	/^f0100896:	ee                   	out    %al,(%dx)$/;"	l
f0100897	obj/kern/kernel.asm	/^f0100897:	b2 fb                	mov    $0xfb,%dl$/;"	l
f0100899	obj/kern/kernel.asm	/^f0100899:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f010089e	obj/kern/kernel.asm	/^f010089e:	ee                   	out    %al,(%dx)$/;"	l
f010089f	obj/kern/kernel.asm	/^f010089f:	b2 fc                	mov    $0xfc,%dl$/;"	l
f01008a1	obj/kern/kernel.asm	/^f01008a1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01008a6	obj/kern/kernel.asm	/^f01008a6:	ee                   	out    %al,(%dx)$/;"	l
f01008a7	obj/kern/kernel.asm	/^f01008a7:	b2 f9                	mov    $0xf9,%dl$/;"	l
f01008a9	obj/kern/kernel.asm	/^f01008a9:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01008ae	obj/kern/kernel.asm	/^f01008ae:	ee                   	out    %al,(%dx)$/;"	l
f01008af	obj/kern/kernel.asm	/^f01008af:	b2 fd                	mov    $0xfd,%dl$/;"	l
f01008b1	obj/kern/kernel.asm	/^f01008b1:	ec                   	in     (%dx),%al$/;"	l
f01008b2	obj/kern/kernel.asm	/^f01008b2:	3c ff                	cmp    $0xff,%al$/;"	l
f01008b4	obj/kern/kernel.asm	/^f01008b4:	0f 95 c0             	setne  %al$/;"	l
f01008b7	obj/kern/kernel.asm	/^f01008b7:	0f b6 f0             	movzbl %al,%esi$/;"	l
f01008ba	obj/kern/kernel.asm	/^f01008ba:	89 35 04 c0 22 f0    	mov    %esi,0xf022c004$/;"	l
f01008c0	obj/kern/kernel.asm	/^f01008c0:	89 da                	mov    %ebx,%edx$/;"	l
f01008c2	obj/kern/kernel.asm	/^f01008c2:	ec                   	in     (%dx),%al$/;"	l
f01008c3	obj/kern/kernel.asm	/^f01008c3:	89 ca                	mov    %ecx,%edx$/;"	l
f01008c5	obj/kern/kernel.asm	/^f01008c5:	ec                   	in     (%dx),%al$/;"	l
f01008c6	obj/kern/kernel.asm	/^f01008c6:	85 f6                	test   %esi,%esi$/;"	l
f01008c8	obj/kern/kernel.asm	/^f01008c8:	75 0c                	jne    f01008d6 <cons_init+0x101>$/;"	l
f01008ca	obj/kern/kernel.asm	/^f01008ca:	c7 04 24 bb 6a 10 f0 	movl   $0xf0106abb,(%esp)$/;"	l
f01008d1	obj/kern/kernel.asm	/^f01008d1:	e8 d9 39 00 00       	call   f01042af <cprintf>$/;"	l
f01008d6	obj/kern/kernel.asm	/^f01008d6:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01008d9	obj/kern/kernel.asm	/^f01008d9:	5b                   	pop    %ebx$/;"	l
f01008da	obj/kern/kernel.asm	/^f01008da:	5e                   	pop    %esi$/;"	l
f01008db	obj/kern/kernel.asm	/^f01008db:	5f                   	pop    %edi$/;"	l
f01008dc	obj/kern/kernel.asm	/^f01008dc:	5d                   	pop    %ebp$/;"	l
f01008dd	obj/kern/kernel.asm	/^f01008dd:	c3                   	ret    $/;"	l
f01008e0	obj/kern/kernel.asm	/^f01008e0 <read_eip>:$/;"	l
f01008e0	obj/kern/kernel.asm	/^f01008e0:	55                   	push   %ebp$/;"	l
f01008e1	obj/kern/kernel.asm	/^f01008e1:	89 e5                	mov    %esp,%ebp$/;"	l
f01008e3	obj/kern/kernel.asm	/^f01008e3:	8b 45 04             	mov    0x4(%ebp),%eax$/;"	l
f01008e6	obj/kern/kernel.asm	/^f01008e6:	5d                   	pop    %ebp$/;"	l
f01008e7	obj/kern/kernel.asm	/^f01008e7:	c3                   	ret    $/;"	l
f01008e8	obj/kern/kernel.asm	/^f01008e8 <start_overflow>:$/;"	l
f01008e8	obj/kern/kernel.asm	/^f01008e8:	55                   	push   %ebp$/;"	l
f01008e9	obj/kern/kernel.asm	/^f01008e9:	89 e5                	mov    %esp,%ebp$/;"	l
f01008eb	obj/kern/kernel.asm	/^f01008eb:	57                   	push   %edi$/;"	l
f01008ec	obj/kern/kernel.asm	/^f01008ec:	56                   	push   %esi$/;"	l
f01008ed	obj/kern/kernel.asm	/^f01008ed:	53                   	push   %ebx$/;"	l
f01008ee	obj/kern/kernel.asm	/^f01008ee:	81 ec 2c 01 00 00    	sub    $0x12c,%esp$/;"	l
f01008f4	obj/kern/kernel.asm	/^f01008f4:	8d bd e8 fe ff ff    	lea    -0x118(%ebp),%edi$/;"	l
f01008fa	obj/kern/kernel.asm	/^f01008fa:	b9 40 00 00 00       	mov    $0x40,%ecx$/;"	l
f01008ff	obj/kern/kernel.asm	/^f01008ff:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100904	obj/kern/kernel.asm	/^f0100904:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
f0100906	obj/kern/kernel.asm	/^f0100906:	c6 85 e8 fe ff ff 55 	movb   $0x55,-0x118(%ebp)$/;"	l
f010090d	obj/kern/kernel.asm	/^f010090d:	c6 85 e9 fe ff ff 89 	movb   $0x89,-0x117(%ebp)$/;"	l
f0100914	obj/kern/kernel.asm	/^f0100914:	c6 85 ea fe ff ff e5 	movb   $0xe5,-0x116(%ebp)$/;"	l
f010091b	obj/kern/kernel.asm	/^f010091b:	8d 95 e8 fe ff ff    	lea    -0x118(%ebp),%edx$/;"	l
f0100921	obj/kern/kernel.asm	/^f0100921:	c6 04 02 31          	movb   $0x31,(%edx,%eax,1)$/;"	l
f0100925	obj/kern/kernel.asm	/^f0100925:	83 c0 01             	add    $0x1,%eax$/;"	l
f0100928	obj/kern/kernel.asm	/^f0100928:	3d 00 01 00 00       	cmp    $0x100,%eax$/;"	l
f010092d	obj/kern/kernel.asm	/^f010092d:	75 f2                	jne    f0100921 <start_overflow+0x39>$/;"	l
f010092f	obj/kern/kernel.asm	/^f010092f:	89 e8                	mov    %ebp,%eax$/;"	l
f0100931	obj/kern/kernel.asm	/^f0100931:	89 c7                	mov    %eax,%edi$/;"	l
f0100933	obj/kern/kernel.asm	/^f0100933:	8b 45 04             	mov    0x4(%ebp),%eax$/;"	l
f0100936	obj/kern/kernel.asm	/^f0100936:	89 85 e4 fe ff ff    	mov    %eax,-0x11c(%ebp)$/;"	l
f010093c	obj/kern/kernel.asm	/^f010093c:	8d b5 e8 fe ff ff    	lea    -0x118(%ebp),%esi$/;"	l
f0100942	obj/kern/kernel.asm	/^f0100942:	89 f3                	mov    %esi,%ebx$/;"	l
f0100944	obj/kern/kernel.asm	/^f0100944:	81 e3 ff 00 00 00    	and    $0xff,%ebx$/;"	l
f010094a	obj/kern/kernel.asm	/^f010094a:	c6 84 1d e8 fe ff ff 	movb   $0x0,-0x118(%ebp,%ebx,1)$/;"	l
f0100951	obj/kern/kernel.asm	/^f0100951:	00 $/;"	l
f0100952	obj/kern/kernel.asm	/^f0100952:	8d 47 04             	lea    0x4(%edi),%eax$/;"	l
f0100955	obj/kern/kernel.asm	/^f0100955:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100959	obj/kern/kernel.asm	/^f0100959:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010095d	obj/kern/kernel.asm	/^f010095d:	c7 04 24 13 6a 10 f0 	movl   $0xf0106a13,(%esp)$/;"	l
f0100964	obj/kern/kernel.asm	/^f0100964:	e8 46 39 00 00       	call   f01042af <cprintf>$/;"	l
f0100969	obj/kern/kernel.asm	/^f0100969:	8d 47 05             	lea    0x5(%edi),%eax$/;"	l
f010096c	obj/kern/kernel.asm	/^f010096c:	c6 84 1d e8 fe ff ff 	movb   $0x31,-0x118(%ebp,%ebx,1)$/;"	l
f0100973	obj/kern/kernel.asm	/^f0100973:	31 $/;"	l
f0100974	obj/kern/kernel.asm	/^f0100974:	89 f2                	mov    %esi,%edx$/;"	l
f0100976	obj/kern/kernel.asm	/^f0100976:	0f b6 de             	movzbl %dh,%ebx$/;"	l
f0100979	obj/kern/kernel.asm	/^f0100979:	c6 84 1d e8 fe ff ff 	movb   $0x0,-0x118(%ebp,%ebx,1)$/;"	l
f0100980	obj/kern/kernel.asm	/^f0100980:	00 $/;"	l
f0100981	obj/kern/kernel.asm	/^f0100981:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100985	obj/kern/kernel.asm	/^f0100985:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0100989	obj/kern/kernel.asm	/^f0100989:	c7 04 24 13 6a 10 f0 	movl   $0xf0106a13,(%esp)$/;"	l
f0100990	obj/kern/kernel.asm	/^f0100990:	e8 1a 39 00 00       	call   f01042af <cprintf>$/;"	l
f0100995	obj/kern/kernel.asm	/^f0100995:	c6 84 1d e8 fe ff ff 	movb   $0x31,-0x118(%ebp,%ebx,1)$/;"	l
f010099c	obj/kern/kernel.asm	/^f010099c:	31 $/;"	l
f010099d	obj/kern/kernel.asm	/^f010099d:	89 f3                	mov    %esi,%ebx$/;"	l
f010099f	obj/kern/kernel.asm	/^f010099f:	c1 eb 10             	shr    $0x10,%ebx$/;"	l
f01009a2	obj/kern/kernel.asm	/^f01009a2:	81 e3 ff 00 00 00    	and    $0xff,%ebx$/;"	l
f01009a8	obj/kern/kernel.asm	/^f01009a8:	c6 84 1d e8 fe ff ff 	movb   $0x0,-0x118(%ebp,%ebx,1)$/;"	l
f01009af	obj/kern/kernel.asm	/^f01009af:	00 $/;"	l
f01009b0	obj/kern/kernel.asm	/^f01009b0:	8d 47 06             	lea    0x6(%edi),%eax$/;"	l
f01009b3	obj/kern/kernel.asm	/^f01009b3:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01009b7	obj/kern/kernel.asm	/^f01009b7:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01009bb	obj/kern/kernel.asm	/^f01009bb:	c7 04 24 13 6a 10 f0 	movl   $0xf0106a13,(%esp)$/;"	l
f01009c2	obj/kern/kernel.asm	/^f01009c2:	e8 e8 38 00 00       	call   f01042af <cprintf>$/;"	l
f01009c7	obj/kern/kernel.asm	/^f01009c7:	c6 84 1d e8 fe ff ff 	movb   $0x31,-0x118(%ebp,%ebx,1)$/;"	l
f01009ce	obj/kern/kernel.asm	/^f01009ce:	31 $/;"	l
f01009cf	obj/kern/kernel.asm	/^f01009cf:	89 f0                	mov    %esi,%eax$/;"	l
f01009d1	obj/kern/kernel.asm	/^f01009d1:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f01009d4	obj/kern/kernel.asm	/^f01009d4:	c6 84 05 e8 fe ff ff 	movb   $0x0,-0x118(%ebp,%eax,1)$/;"	l
f01009db	obj/kern/kernel.asm	/^f01009db:	00 $/;"	l
f01009dc	obj/kern/kernel.asm	/^f01009dc:	83 c7 07             	add    $0x7,%edi$/;"	l
f01009df	obj/kern/kernel.asm	/^f01009df:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f01009e3	obj/kern/kernel.asm	/^f01009e3:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01009e7	obj/kern/kernel.asm	/^f01009e7:	c7 04 24 13 6a 10 f0 	movl   $0xf0106a13,(%esp)$/;"	l
f01009ee	obj/kern/kernel.asm	/^f01009ee:	e8 bc 38 00 00       	call   f01042af <cprintf>$/;"	l
f01009f3	obj/kern/kernel.asm	/^f01009f3:	c6 85 e8 fe ff ff 68 	movb   $0x68,-0x118(%ebp)$/;"	l
f01009fa	obj/kern/kernel.asm	/^f01009fa:	8b 85 e4 fe ff ff    	mov    -0x11c(%ebp),%eax$/;"	l
f0100a00	obj/kern/kernel.asm	/^f0100a00:	89 46 01             	mov    %eax,0x1(%esi)$/;"	l
f0100a03	obj/kern/kernel.asm	/^f0100a03:	c6 85 ed fe ff ff 68 	movb   $0x68,-0x113(%ebp)$/;"	l
f0100a0a	obj/kern/kernel.asm	/^f0100a0a:	c7 46 06 56 0a 10 f0 	movl   $0xf0100a56,0x6(%esi)$/;"	l
f0100a11	obj/kern/kernel.asm	/^f0100a11:	c6 85 f2 fe ff ff c3 	movb   $0xc3,-0x10e(%ebp)$/;"	l
f0100a18	obj/kern/kernel.asm	/^f0100a18:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0100a1c	obj/kern/kernel.asm	/^f0100a1c:	c7 04 24 20 6d 10 f0 	movl   $0xf0106d20,(%esp)$/;"	l
f0100a23	obj/kern/kernel.asm	/^f0100a23:	e8 87 38 00 00       	call   f01042af <cprintf>$/;"	l
f0100a28	obj/kern/kernel.asm	/^f0100a28:	8b 95 e4 fe ff ff    	mov    -0x11c(%ebp),%edx$/;"	l
f0100a2e	obj/kern/kernel.asm	/^f0100a2e:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0100a32	obj/kern/kernel.asm	/^f0100a32:	c7 04 24 7f 84 10 f0 	movl   $0xf010847f,(%esp)$/;"	l
f0100a39	obj/kern/kernel.asm	/^f0100a39:	e8 71 38 00 00       	call   f01042af <cprintf>$/;"	l
f0100a3e	obj/kern/kernel.asm	/^f0100a3e:	81 c4 2c 01 00 00    	add    $0x12c,%esp$/;"	l
f0100a44	obj/kern/kernel.asm	/^f0100a44:	5b                   	pop    %ebx$/;"	l
f0100a45	obj/kern/kernel.asm	/^f0100a45:	5e                   	pop    %esi$/;"	l
f0100a46	obj/kern/kernel.asm	/^f0100a46:	5f                   	pop    %edi$/;"	l
f0100a47	obj/kern/kernel.asm	/^f0100a47:	5d                   	pop    %ebp$/;"	l
f0100a48	obj/kern/kernel.asm	/^f0100a48:	c3                   	ret    $/;"	l
f0100a49	obj/kern/kernel.asm	/^f0100a49 <overflow_me>:$/;"	l
f0100a49	obj/kern/kernel.asm	/^f0100a49:	55                   	push   %ebp$/;"	l
f0100a4a	obj/kern/kernel.asm	/^f0100a4a:	89 e5                	mov    %esp,%ebp$/;"	l
f0100a4c	obj/kern/kernel.asm	/^f0100a4c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100a4f	obj/kern/kernel.asm	/^f0100a4f:	e8 94 fe ff ff       	call   f01008e8 <start_overflow>$/;"	l
f0100a54	obj/kern/kernel.asm	/^f0100a54:	c9                   	leave  $/;"	l
f0100a55	obj/kern/kernel.asm	/^f0100a55:	c3                   	ret    $/;"	l
f0100a56	obj/kern/kernel.asm	/^f0100a56 <do_overflow>:$/;"	l
f0100a56	obj/kern/kernel.asm	/^f0100a56:	55                   	push   %ebp$/;"	l
f0100a57	obj/kern/kernel.asm	/^f0100a57:	89 e5                	mov    %esp,%ebp$/;"	l
f0100a59	obj/kern/kernel.asm	/^f0100a59:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100a5c	obj/kern/kernel.asm	/^f0100a5c:	c7 04 24 f0 6c 10 f0 	movl   $0xf0106cf0,(%esp)$/;"	l
f0100a63	obj/kern/kernel.asm	/^f0100a63:	e8 47 38 00 00       	call   f01042af <cprintf>$/;"	l
f0100a68	obj/kern/kernel.asm	/^f0100a68:	c9                   	leave  $/;"	l
f0100a69	obj/kern/kernel.asm	/^f0100a69:	c3                   	ret    $/;"	l
f0100a6a	obj/kern/kernel.asm	/^f0100a6a <mon_kerninfo>:$/;"	l
f0100a6a	obj/kern/kernel.asm	/^f0100a6a:	55                   	push   %ebp$/;"	l
f0100a6b	obj/kern/kernel.asm	/^f0100a6b:	89 e5                	mov    %esp,%ebp$/;"	l
f0100a6d	obj/kern/kernel.asm	/^f0100a6d:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100a70	obj/kern/kernel.asm	/^f0100a70:	c7 04 24 02 6d 10 f0 	movl   $0xf0106d02,(%esp)$/;"	l
f0100a77	obj/kern/kernel.asm	/^f0100a77:	e8 33 38 00 00       	call   f01042af <cprintf>$/;"	l
f0100a7c	obj/kern/kernel.asm	/^f0100a7c:	c7 44 24 08 0c 00 10 	movl   $0x10000c,0x8(%esp)$/;"	l
f0100a83	obj/kern/kernel.asm	/^f0100a83:	00 $/;"	l
f0100a84	obj/kern/kernel.asm	/^f0100a84:	c7 44 24 04 0c 00 10 	movl   $0xf010000c,0x4(%esp)$/;"	l
f0100a8b	obj/kern/kernel.asm	/^f0100a8b:	f0 $/;"	l
f0100a8c	obj/kern/kernel.asm	/^f0100a8c:	c7 04 24 d0 6d 10 f0 	movl   $0xf0106dd0,(%esp)$/;"	l
f0100a93	obj/kern/kernel.asm	/^f0100a93:	e8 17 38 00 00       	call   f01042af <cprintf>$/;"	l
f0100a98	obj/kern/kernel.asm	/^f0100a98:	c7 44 24 08 b5 69 10 	movl   $0x1069b5,0x8(%esp)$/;"	l
f0100a9f	obj/kern/kernel.asm	/^f0100a9f:	00 $/;"	l
f0100aa0	obj/kern/kernel.asm	/^f0100aa0:	c7 44 24 04 b5 69 10 	movl   $0xf01069b5,0x4(%esp)$/;"	l
f0100aa7	obj/kern/kernel.asm	/^f0100aa7:	f0 $/;"	l
f0100aa8	obj/kern/kernel.asm	/^f0100aa8:	c7 04 24 f4 6d 10 f0 	movl   $0xf0106df4,(%esp)$/;"	l
f0100aaf	obj/kern/kernel.asm	/^f0100aaf:	e8 fb 37 00 00       	call   f01042af <cprintf>$/;"	l
f0100ab4	obj/kern/kernel.asm	/^f0100ab4:	c7 44 24 08 c2 bc 22 	movl   $0x22bcc2,0x8(%esp)$/;"	l
f0100abb	obj/kern/kernel.asm	/^f0100abb:	00 $/;"	l
f0100abc	obj/kern/kernel.asm	/^f0100abc:	c7 44 24 04 c2 bc 22 	movl   $0xf022bcc2,0x4(%esp)$/;"	l
f0100ac3	obj/kern/kernel.asm	/^f0100ac3:	f0 $/;"	l
f0100ac4	obj/kern/kernel.asm	/^f0100ac4:	c7 04 24 18 6e 10 f0 	movl   $0xf0106e18,(%esp)$/;"	l
f0100acb	obj/kern/kernel.asm	/^f0100acb:	e8 df 37 00 00       	call   f01042af <cprintf>$/;"	l
f0100ad0	obj/kern/kernel.asm	/^f0100ad0:	c7 44 24 08 04 e0 26 	movl   $0x26e004,0x8(%esp)$/;"	l
f0100ad7	obj/kern/kernel.asm	/^f0100ad7:	00 $/;"	l
f0100ad8	obj/kern/kernel.asm	/^f0100ad8:	c7 44 24 04 04 e0 26 	movl   $0xf026e004,0x4(%esp)$/;"	l
f0100adf	obj/kern/kernel.asm	/^f0100adf:	f0 $/;"	l
f0100ae0	obj/kern/kernel.asm	/^f0100ae0:	c7 04 24 3c 6e 10 f0 	movl   $0xf0106e3c,(%esp)$/;"	l
f0100ae7	obj/kern/kernel.asm	/^f0100ae7:	e8 c3 37 00 00       	call   f01042af <cprintf>$/;"	l
f0100aec	obj/kern/kernel.asm	/^f0100aec:	b8 03 e4 26 f0       	mov    $0xf026e403,%eax$/;"	l
f0100af1	obj/kern/kernel.asm	/^f0100af1:	2d 0c 00 10 f0       	sub    $0xf010000c,%eax$/;"	l
f0100af6	obj/kern/kernel.asm	/^f0100af6:	89 c2                	mov    %eax,%edx$/;"	l
f0100af8	obj/kern/kernel.asm	/^f0100af8:	c1 fa 1f             	sar    $0x1f,%edx$/;"	l
f0100afb	obj/kern/kernel.asm	/^f0100afb:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f0100afe	obj/kern/kernel.asm	/^f0100afe:	8d 04 02             	lea    (%edx,%eax,1),%eax$/;"	l
f0100b01	obj/kern/kernel.asm	/^f0100b01:	c1 f8 0a             	sar    $0xa,%eax$/;"	l
f0100b04	obj/kern/kernel.asm	/^f0100b04:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100b08	obj/kern/kernel.asm	/^f0100b08:	c7 04 24 60 6e 10 f0 	movl   $0xf0106e60,(%esp)$/;"	l
f0100b0f	obj/kern/kernel.asm	/^f0100b0f:	e8 9b 37 00 00       	call   f01042af <cprintf>$/;"	l
f0100b14	obj/kern/kernel.asm	/^f0100b14:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100b19	obj/kern/kernel.asm	/^f0100b19:	c9                   	leave  $/;"	l
f0100b1a	obj/kern/kernel.asm	/^f0100b1a:	c3                   	ret    $/;"	l
f0100b1b	obj/kern/kernel.asm	/^f0100b1b <mon_help>:$/;"	l
f0100b1b	obj/kern/kernel.asm	/^f0100b1b:	55                   	push   %ebp$/;"	l
f0100b1c	obj/kern/kernel.asm	/^f0100b1c:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b1e	obj/kern/kernel.asm	/^f0100b1e:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100b21	obj/kern/kernel.asm	/^f0100b21:	a1 44 6f 10 f0       	mov    0xf0106f44,%eax$/;"	l
f0100b26	obj/kern/kernel.asm	/^f0100b26:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100b2a	obj/kern/kernel.asm	/^f0100b2a:	a1 40 6f 10 f0       	mov    0xf0106f40,%eax$/;"	l
f0100b2f	obj/kern/kernel.asm	/^f0100b2f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100b33	obj/kern/kernel.asm	/^f0100b33:	c7 04 24 1b 6d 10 f0 	movl   $0xf0106d1b,(%esp)$/;"	l
f0100b3a	obj/kern/kernel.asm	/^f0100b3a:	e8 70 37 00 00       	call   f01042af <cprintf>$/;"	l
f0100b3f	obj/kern/kernel.asm	/^f0100b3f:	a1 50 6f 10 f0       	mov    0xf0106f50,%eax$/;"	l
f0100b44	obj/kern/kernel.asm	/^f0100b44:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100b48	obj/kern/kernel.asm	/^f0100b48:	a1 4c 6f 10 f0       	mov    0xf0106f4c,%eax$/;"	l
f0100b4d	obj/kern/kernel.asm	/^f0100b4d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100b51	obj/kern/kernel.asm	/^f0100b51:	c7 04 24 1b 6d 10 f0 	movl   $0xf0106d1b,(%esp)$/;"	l
f0100b58	obj/kern/kernel.asm	/^f0100b58:	e8 52 37 00 00       	call   f01042af <cprintf>$/;"	l
f0100b5d	obj/kern/kernel.asm	/^f0100b5d:	a1 5c 6f 10 f0       	mov    0xf0106f5c,%eax$/;"	l
f0100b62	obj/kern/kernel.asm	/^f0100b62:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100b66	obj/kern/kernel.asm	/^f0100b66:	a1 58 6f 10 f0       	mov    0xf0106f58,%eax$/;"	l
f0100b6b	obj/kern/kernel.asm	/^f0100b6b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100b6f	obj/kern/kernel.asm	/^f0100b6f:	c7 04 24 1b 6d 10 f0 	movl   $0xf0106d1b,(%esp)$/;"	l
f0100b76	obj/kern/kernel.asm	/^f0100b76:	e8 34 37 00 00       	call   f01042af <cprintf>$/;"	l
f0100b7b	obj/kern/kernel.asm	/^f0100b7b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100b80	obj/kern/kernel.asm	/^f0100b80:	c9                   	leave  $/;"	l
f0100b81	obj/kern/kernel.asm	/^f0100b81:	c3                   	ret    $/;"	l
f0100b82	obj/kern/kernel.asm	/^f0100b82 <monitor>:$/;"	l
f0100b82	obj/kern/kernel.asm	/^f0100b82:	55                   	push   %ebp$/;"	l
f0100b83	obj/kern/kernel.asm	/^f0100b83:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b85	obj/kern/kernel.asm	/^f0100b85:	57                   	push   %edi$/;"	l
f0100b86	obj/kern/kernel.asm	/^f0100b86:	56                   	push   %esi$/;"	l
f0100b87	obj/kern/kernel.asm	/^f0100b87:	53                   	push   %ebx$/;"	l
f0100b88	obj/kern/kernel.asm	/^f0100b88:	83 ec 5c             	sub    $0x5c,%esp$/;"	l
f0100b8b	obj/kern/kernel.asm	/^f0100b8b:	c7 04 24 8c 6e 10 f0 	movl   $0xf0106e8c,(%esp)$/;"	l
f0100b92	obj/kern/kernel.asm	/^f0100b92:	e8 18 37 00 00       	call   f01042af <cprintf>$/;"	l
f0100b97	obj/kern/kernel.asm	/^f0100b97:	c7 04 24 b0 6e 10 f0 	movl   $0xf0106eb0,(%esp)$/;"	l
f0100b9e	obj/kern/kernel.asm	/^f0100b9e:	e8 0c 37 00 00       	call   f01042af <cprintf>$/;"	l
f0100ba3	obj/kern/kernel.asm	/^f0100ba3:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
f0100ba7	obj/kern/kernel.asm	/^f0100ba7:	74 0b                	je     f0100bb4 <monitor+0x32>$/;"	l
f0100ba9	obj/kern/kernel.asm	/^f0100ba9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100bac	obj/kern/kernel.asm	/^f0100bac:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100baf	obj/kern/kernel.asm	/^f0100baf:	e8 7b 3b 00 00       	call   f010472f <print_trapframe>$/;"	l
f0100bb4	obj/kern/kernel.asm	/^f0100bb4:	c7 04 24 24 6d 10 f0 	movl   $0xf0106d24,(%esp)$/;"	l
f0100bbb	obj/kern/kernel.asm	/^f0100bbb:	e8 90 4d 00 00       	call   f0105950 <readline>$/;"	l
f0100bc0	obj/kern/kernel.asm	/^f0100bc0:	89 c3                	mov    %eax,%ebx$/;"	l
f0100bc2	obj/kern/kernel.asm	/^f0100bc2:	85 c0                	test   %eax,%eax$/;"	l
f0100bc4	obj/kern/kernel.asm	/^f0100bc4:	74 ee                	je     f0100bb4 <monitor+0x32>$/;"	l
f0100bc6	obj/kern/kernel.asm	/^f0100bc6:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)$/;"	l
f0100bcd	obj/kern/kernel.asm	/^f0100bcd:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100bd2	obj/kern/kernel.asm	/^f0100bd2:	eb 06                	jmp    f0100bda <monitor+0x58>$/;"	l
f0100bd4	obj/kern/kernel.asm	/^f0100bd4:	c6 03 00             	movb   $0x0,(%ebx)$/;"	l
f0100bd7	obj/kern/kernel.asm	/^f0100bd7:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100bda	obj/kern/kernel.asm	/^f0100bda:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100bdd	obj/kern/kernel.asm	/^f0100bdd:	84 c0                	test   %al,%al$/;"	l
f0100bdf	obj/kern/kernel.asm	/^f0100bdf:	74 6a                	je     f0100c4b <monitor+0xc9>$/;"	l
f0100be1	obj/kern/kernel.asm	/^f0100be1:	0f be c0             	movsbl %al,%eax$/;"	l
f0100be4	obj/kern/kernel.asm	/^f0100be4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100be8	obj/kern/kernel.asm	/^f0100be8:	c7 04 24 28 6d 10 f0 	movl   $0xf0106d28,(%esp)$/;"	l
f0100bef	obj/kern/kernel.asm	/^f0100bef:	e8 b7 4f 00 00       	call   f0105bab <strchr>$/;"	l
f0100bf4	obj/kern/kernel.asm	/^f0100bf4:	85 c0                	test   %eax,%eax$/;"	l
f0100bf6	obj/kern/kernel.asm	/^f0100bf6:	75 dc                	jne    f0100bd4 <monitor+0x52>$/;"	l
f0100bf8	obj/kern/kernel.asm	/^f0100bf8:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f0100bfb	obj/kern/kernel.asm	/^f0100bfb:	74 4e                	je     f0100c4b <monitor+0xc9>$/;"	l
f0100bfd	obj/kern/kernel.asm	/^f0100bfd:	83 fe 0f             	cmp    $0xf,%esi$/;"	l
f0100c00	obj/kern/kernel.asm	/^f0100c00:	75 16                	jne    f0100c18 <monitor+0x96>$/;"	l
f0100c02	obj/kern/kernel.asm	/^f0100c02:	c7 44 24 04 10 00 00 	movl   $0x10,0x4(%esp)$/;"	l
f0100c09	obj/kern/kernel.asm	/^f0100c09:	00 $/;"	l
f0100c0a	obj/kern/kernel.asm	/^f0100c0a:	c7 04 24 2d 6d 10 f0 	movl   $0xf0106d2d,(%esp)$/;"	l
f0100c11	obj/kern/kernel.asm	/^f0100c11:	e8 99 36 00 00       	call   f01042af <cprintf>$/;"	l
f0100c16	obj/kern/kernel.asm	/^f0100c16:	eb 9c                	jmp    f0100bb4 <monitor+0x32>$/;"	l
f0100c18	obj/kern/kernel.asm	/^f0100c18:	89 5c b5 a8          	mov    %ebx,-0x58(%ebp,%esi,4)$/;"	l
f0100c1c	obj/kern/kernel.asm	/^f0100c1c:	83 c6 01             	add    $0x1,%esi$/;"	l
f0100c1f	obj/kern/kernel.asm	/^f0100c1f:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100c22	obj/kern/kernel.asm	/^f0100c22:	84 c0                	test   %al,%al$/;"	l
f0100c24	obj/kern/kernel.asm	/^f0100c24:	75 0c                	jne    f0100c32 <monitor+0xb0>$/;"	l
f0100c26	obj/kern/kernel.asm	/^f0100c26:	eb b2                	jmp    f0100bda <monitor+0x58>$/;"	l
f0100c28	obj/kern/kernel.asm	/^f0100c28:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100c2b	obj/kern/kernel.asm	/^f0100c2b:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100c2e	obj/kern/kernel.asm	/^f0100c2e:	84 c0                	test   %al,%al$/;"	l
f0100c30	obj/kern/kernel.asm	/^f0100c30:	74 a8                	je     f0100bda <monitor+0x58>$/;"	l
f0100c32	obj/kern/kernel.asm	/^f0100c32:	0f be c0             	movsbl %al,%eax$/;"	l
f0100c35	obj/kern/kernel.asm	/^f0100c35:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100c39	obj/kern/kernel.asm	/^f0100c39:	c7 04 24 28 6d 10 f0 	movl   $0xf0106d28,(%esp)$/;"	l
f0100c40	obj/kern/kernel.asm	/^f0100c40:	e8 66 4f 00 00       	call   f0105bab <strchr>$/;"	l
f0100c45	obj/kern/kernel.asm	/^f0100c45:	85 c0                	test   %eax,%eax$/;"	l
f0100c47	obj/kern/kernel.asm	/^f0100c47:	74 df                	je     f0100c28 <monitor+0xa6>$/;"	l
f0100c49	obj/kern/kernel.asm	/^f0100c49:	eb 8f                	jmp    f0100bda <monitor+0x58>$/;"	l
f0100c4b	obj/kern/kernel.asm	/^f0100c4b:	c7 44 b5 a8 00 00 00 	movl   $0x0,-0x58(%ebp,%esi,4)$/;"	l
f0100c52	obj/kern/kernel.asm	/^f0100c52:	00 $/;"	l
f0100c53	obj/kern/kernel.asm	/^f0100c53:	85 f6                	test   %esi,%esi$/;"	l
f0100c55	obj/kern/kernel.asm	/^f0100c55:	0f 84 59 ff ff ff    	je     f0100bb4 <monitor+0x32>$/;"	l
f0100c5b	obj/kern/kernel.asm	/^f0100c5b:	bb 40 6f 10 f0       	mov    $0xf0106f40,%ebx$/;"	l
f0100c60	obj/kern/kernel.asm	/^f0100c60:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0100c65	obj/kern/kernel.asm	/^f0100c65:	8b 03                	mov    (%ebx),%eax$/;"	l
f0100c67	obj/kern/kernel.asm	/^f0100c67:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100c6b	obj/kern/kernel.asm	/^f0100c6b:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f0100c6e	obj/kern/kernel.asm	/^f0100c6e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100c71	obj/kern/kernel.asm	/^f0100c71:	e8 bf 4e 00 00       	call   f0105b35 <strcmp>$/;"	l
f0100c76	obj/kern/kernel.asm	/^f0100c76:	85 c0                	test   %eax,%eax$/;"	l
f0100c78	obj/kern/kernel.asm	/^f0100c78:	75 23                	jne    f0100c9d <monitor+0x11b>$/;"	l
f0100c7a	obj/kern/kernel.asm	/^f0100c7a:	6b ff 0c             	imul   $0xc,%edi,%edi$/;"	l
f0100c7d	obj/kern/kernel.asm	/^f0100c7d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100c80	obj/kern/kernel.asm	/^f0100c80:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100c84	obj/kern/kernel.asm	/^f0100c84:	8d 45 a8             	lea    -0x58(%ebp),%eax$/;"	l
f0100c87	obj/kern/kernel.asm	/^f0100c87:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100c8b	obj/kern/kernel.asm	/^f0100c8b:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0100c8e	obj/kern/kernel.asm	/^f0100c8e:	ff 97 48 6f 10 f0    	call   *-0xfef90b8(%edi)$/;"	l
f0100c94	obj/kern/kernel.asm	/^f0100c94:	85 c0                	test   %eax,%eax$/;"	l
f0100c96	obj/kern/kernel.asm	/^f0100c96:	78 28                	js     f0100cc0 <monitor+0x13e>$/;"	l
f0100c98	obj/kern/kernel.asm	/^f0100c98:	e9 17 ff ff ff       	jmp    f0100bb4 <monitor+0x32>$/;"	l
f0100c9d	obj/kern/kernel.asm	/^f0100c9d:	83 c7 01             	add    $0x1,%edi$/;"	l
f0100ca0	obj/kern/kernel.asm	/^f0100ca0:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f0100ca3	obj/kern/kernel.asm	/^f0100ca3:	83 ff 03             	cmp    $0x3,%edi$/;"	l
f0100ca6	obj/kern/kernel.asm	/^f0100ca6:	75 bd                	jne    f0100c65 <monitor+0xe3>$/;"	l
f0100ca8	obj/kern/kernel.asm	/^f0100ca8:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f0100cab	obj/kern/kernel.asm	/^f0100cab:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100caf	obj/kern/kernel.asm	/^f0100caf:	c7 04 24 4a 6d 10 f0 	movl   $0xf0106d4a,(%esp)$/;"	l
f0100cb6	obj/kern/kernel.asm	/^f0100cb6:	e8 f4 35 00 00       	call   f01042af <cprintf>$/;"	l
f0100cbb	obj/kern/kernel.asm	/^f0100cbb:	e9 f4 fe ff ff       	jmp    f0100bb4 <monitor+0x32>$/;"	l
f0100cc0	obj/kern/kernel.asm	/^f0100cc0:	83 c4 5c             	add    $0x5c,%esp$/;"	l
f0100cc3	obj/kern/kernel.asm	/^f0100cc3:	5b                   	pop    %ebx$/;"	l
f0100cc4	obj/kern/kernel.asm	/^f0100cc4:	5e                   	pop    %esi$/;"	l
f0100cc5	obj/kern/kernel.asm	/^f0100cc5:	5f                   	pop    %edi$/;"	l
f0100cc6	obj/kern/kernel.asm	/^f0100cc6:	5d                   	pop    %ebp$/;"	l
f0100cc7	obj/kern/kernel.asm	/^f0100cc7:	c3                   	ret    $/;"	l
f0100cc8	obj/kern/kernel.asm	/^f0100cc8 <mon_backtrace>:$/;"	l
f0100cc8	obj/kern/kernel.asm	/^f0100cc8:	55                   	push   %ebp$/;"	l
f0100cc9	obj/kern/kernel.asm	/^f0100cc9:	89 e5                	mov    %esp,%ebp$/;"	l
f0100ccb	obj/kern/kernel.asm	/^f0100ccb:	57                   	push   %edi$/;"	l
f0100ccc	obj/kern/kernel.asm	/^f0100ccc:	56                   	push   %esi$/;"	l
f0100ccd	obj/kern/kernel.asm	/^f0100ccd:	53                   	push   %ebx$/;"	l
f0100cce	obj/kern/kernel.asm	/^f0100cce:	83 ec 5c             	sub    $0x5c,%esp$/;"	l
f0100cd1	obj/kern/kernel.asm	/^f0100cd1:	89 eb                	mov    %ebp,%ebx$/;"	l
f0100cd3	obj/kern/kernel.asm	/^f0100cd3:	e8 08 fc ff ff       	call   f01008e0 <read_eip>$/;"	l
f0100cd8	obj/kern/kernel.asm	/^f0100cd8:	89 c6                	mov    %eax,%esi$/;"	l
f0100cda	obj/kern/kernel.asm	/^f0100cda:	8d 7d d0             	lea    -0x30(%ebp),%edi$/;"	l
f0100cdd	obj/kern/kernel.asm	/^f0100cdd:	8b 43 18             	mov    0x18(%ebx),%eax$/;"	l
f0100ce0	obj/kern/kernel.asm	/^f0100ce0:	89 44 24 1c          	mov    %eax,0x1c(%esp)$/;"	l
f0100ce4	obj/kern/kernel.asm	/^f0100ce4:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f0100ce7	obj/kern/kernel.asm	/^f0100ce7:	89 44 24 18          	mov    %eax,0x18(%esp)$/;"	l
f0100ceb	obj/kern/kernel.asm	/^f0100ceb:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f0100cee	obj/kern/kernel.asm	/^f0100cee:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f0100cf2	obj/kern/kernel.asm	/^f0100cf2:	8b 43 0c             	mov    0xc(%ebx),%eax$/;"	l
f0100cf5	obj/kern/kernel.asm	/^f0100cf5:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0100cf9	obj/kern/kernel.asm	/^f0100cf9:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0100cfc	obj/kern/kernel.asm	/^f0100cfc:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100d00	obj/kern/kernel.asm	/^f0100d00:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f0100d04	obj/kern/kernel.asm	/^f0100d04:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0100d08	obj/kern/kernel.asm	/^f0100d08:	c7 04 24 d8 6e 10 f0 	movl   $0xf0106ed8,(%esp)$/;"	l
f0100d0f	obj/kern/kernel.asm	/^f0100d0f:	e8 9b 35 00 00       	call   f01042af <cprintf>$/;"	l
f0100d14	obj/kern/kernel.asm	/^f0100d14:	8b 03                	mov    (%ebx),%eax$/;"	l
f0100d16	obj/kern/kernel.asm	/^f0100d16:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f0100d19	obj/kern/kernel.asm	/^f0100d19:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0100d1c	obj/kern/kernel.asm	/^f0100d1c:	89 c6                	mov    %eax,%esi$/;"	l
f0100d1e	obj/kern/kernel.asm	/^f0100d1e:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0100d22	obj/kern/kernel.asm	/^f0100d22:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100d25	obj/kern/kernel.asm	/^f0100d25:	e8 c4 42 00 00       	call   f0104fee <debuginfo_eip>$/;"	l
f0100d2a	obj/kern/kernel.asm	/^f0100d2a:	89 f0                	mov    %esi,%eax$/;"	l
f0100d2c	obj/kern/kernel.asm	/^f0100d2c:	2b 45 e0             	sub    -0x20(%ebp),%eax$/;"	l
f0100d2f	obj/kern/kernel.asm	/^f0100d2f:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0100d33	obj/kern/kernel.asm	/^f0100d33:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0100d36	obj/kern/kernel.asm	/^f0100d36:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100d3a	obj/kern/kernel.asm	/^f0100d3a:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0100d3d	obj/kern/kernel.asm	/^f0100d3d:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100d41	obj/kern/kernel.asm	/^f0100d41:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0100d44	obj/kern/kernel.asm	/^f0100d44:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100d48	obj/kern/kernel.asm	/^f0100d48:	c7 04 24 60 6d 10 f0 	movl   $0xf0106d60,(%esp)$/;"	l
f0100d4f	obj/kern/kernel.asm	/^f0100d4f:	e8 5b 35 00 00       	call   f01042af <cprintf>$/;"	l
f0100d54	obj/kern/kernel.asm	/^f0100d54:	8b 5d c4             	mov    -0x3c(%ebp),%ebx$/;"	l
f0100d57	obj/kern/kernel.asm	/^f0100d57:	85 db                	test   %ebx,%ebx$/;"	l
f0100d59	obj/kern/kernel.asm	/^f0100d59:	75 82                	jne    f0100cdd <mon_backtrace+0x15>$/;"	l
f0100d5b	obj/kern/kernel.asm	/^f0100d5b:	e8 e9 fc ff ff       	call   f0100a49 <overflow_me>$/;"	l
f0100d60	obj/kern/kernel.asm	/^f0100d60:	c7 04 24 6e 6d 10 f0 	movl   $0xf0106d6e,(%esp)$/;"	l
f0100d67	obj/kern/kernel.asm	/^f0100d67:	e8 43 35 00 00       	call   f01042af <cprintf>$/;"	l
f0100d6c	obj/kern/kernel.asm	/^f0100d6c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100d71	obj/kern/kernel.asm	/^f0100d71:	83 c4 5c             	add    $0x5c,%esp$/;"	l
f0100d74	obj/kern/kernel.asm	/^f0100d74:	5b                   	pop    %ebx$/;"	l
f0100d75	obj/kern/kernel.asm	/^f0100d75:	5e                   	pop    %esi$/;"	l
f0100d76	obj/kern/kernel.asm	/^f0100d76:	5f                   	pop    %edi$/;"	l
f0100d77	obj/kern/kernel.asm	/^f0100d77:	5d                   	pop    %ebp$/;"	l
f0100d78	obj/kern/kernel.asm	/^f0100d78:	c3                   	ret    $/;"	l
f0100d79	obj/kern/kernel.asm	/^f0100d79:	00 00                	add    %al,(%eax)$/;"	l
f0100d7b	obj/kern/kernel.asm	/^f0100d7b:	00 00                	add    %al,(%eax)$/;"	l
f0100d7d	obj/kern/kernel.asm	/^f0100d7d:	00 00                	add    %al,(%eax)$/;"	l
f0100d80	obj/kern/kernel.asm	/^f0100d80 <boot_alloc>:$/;"	l
f0100d80	obj/kern/kernel.asm	/^f0100d80:	55                   	push   %ebp$/;"	l
f0100d81	obj/kern/kernel.asm	/^f0100d81:	89 e5                	mov    %esp,%ebp$/;"	l
f0100d83	obj/kern/kernel.asm	/^f0100d83:	83 3d 28 c2 22 f0 00 	cmpl   $0x0,0xf022c228$/;"	l
f0100d8a	obj/kern/kernel.asm	/^f0100d8a:	75 11                	jne    f0100d9d <boot_alloc+0x1d>$/;"	l
f0100d8c	obj/kern/kernel.asm	/^f0100d8c:	ba 03 f0 26 f0       	mov    $0xf026f003,%edx$/;"	l
f0100d91	obj/kern/kernel.asm	/^f0100d91:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0100d97	obj/kern/kernel.asm	/^f0100d97:	89 15 28 c2 22 f0    	mov    %edx,0xf022c228$/;"	l
f0100d9d	obj/kern/kernel.asm	/^f0100d9d:	85 c0                	test   %eax,%eax$/;"	l
f0100d9f	obj/kern/kernel.asm	/^f0100d9f:	75 07                	jne    f0100da8 <boot_alloc+0x28>$/;"	l
f0100da1	obj/kern/kernel.asm	/^f0100da1:	a1 28 c2 22 f0       	mov    0xf022c228,%eax$/;"	l
f0100da6	obj/kern/kernel.asm	/^f0100da6:	eb 19                	jmp    f0100dc1 <boot_alloc+0x41>$/;"	l
f0100da8	obj/kern/kernel.asm	/^f0100da8:	8b 15 28 c2 22 f0    	mov    0xf022c228,%edx$/;"	l
f0100dae	obj/kern/kernel.asm	/^f0100dae:	8d 84 02 ff 0f 00 00 	lea    0xfff(%edx,%eax,1),%eax$/;"	l
f0100db5	obj/kern/kernel.asm	/^f0100db5:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100dba	obj/kern/kernel.asm	/^f0100dba:	a3 28 c2 22 f0       	mov    %eax,0xf022c228$/;"	l
f0100dbf	obj/kern/kernel.asm	/^f0100dbf:	89 d0                	mov    %edx,%eax$/;"	l
f0100dc1	obj/kern/kernel.asm	/^f0100dc1:	5d                   	pop    %ebp$/;"	l
f0100dc2	obj/kern/kernel.asm	/^f0100dc2:	c3                   	ret    $/;"	l
f0100dc3	obj/kern/kernel.asm	/^f0100dc3 <page_free_4pages>:$/;"	l
f0100dc3	obj/kern/kernel.asm	/^f0100dc3:	55                   	push   %ebp$/;"	l
f0100dc4	obj/kern/kernel.asm	/^f0100dc4:	89 e5                	mov    %esp,%ebp$/;"	l
f0100dc6	obj/kern/kernel.asm	/^f0100dc6:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0100dc9	obj/kern/kernel.asm	/^f0100dc9:	85 c9                	test   %ecx,%ecx$/;"	l
f0100dcb	obj/kern/kernel.asm	/^f0100dcb:	74 40                	je     f0100e0d <page_free_4pages+0x4a>$/;"	l
f0100dcd	obj/kern/kernel.asm	/^f0100dcd:	89 c8                	mov    %ecx,%eax$/;"	l
f0100dcf	obj/kern/kernel.asm	/^f0100dcf:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0100dd4	obj/kern/kernel.asm	/^f0100dd4:	8b 00                	mov    (%eax),%eax$/;"	l
f0100dd6	obj/kern/kernel.asm	/^f0100dd6:	83 c2 01             	add    $0x1,%edx$/;"	l
f0100dd9	obj/kern/kernel.asm	/^f0100dd9:	83 fa 02             	cmp    $0x2,%edx$/;"	l
f0100ddc	obj/kern/kernel.asm	/^f0100ddc:	77 04                	ja     f0100de2 <page_free_4pages+0x1f>$/;"	l
f0100dde	obj/kern/kernel.asm	/^f0100dde:	85 c0                	test   %eax,%eax$/;"	l
f0100de0	obj/kern/kernel.asm	/^f0100de0:	75 f2                	jne    f0100dd4 <page_free_4pages+0x11>$/;"	l
f0100de2	obj/kern/kernel.asm	/^f0100de2:	85 c0                	test   %eax,%eax$/;"	l
f0100de4	obj/kern/kernel.asm	/^f0100de4:	74 27                	je     f0100e0d <page_free_4pages+0x4a>$/;"	l
f0100de6	obj/kern/kernel.asm	/^f0100de6:	29 c8                	sub    %ecx,%eax$/;"	l
f0100de8	obj/kern/kernel.asm	/^f0100de8:	83 e8 18             	sub    $0x18,%eax$/;"	l
f0100deb	obj/kern/kernel.asm	/^f0100deb:	83 f8 07             	cmp    $0x7,%eax$/;"	l
f0100dee	obj/kern/kernel.asm	/^f0100dee:	77 1d                	ja     f0100e0d <page_free_4pages+0x4a>$/;"	l
f0100df0	obj/kern/kernel.asm	/^f0100df0:	8b 01                	mov    (%ecx),%eax$/;"	l
f0100df2	obj/kern/kernel.asm	/^f0100df2:	8b 51 04             	mov    0x4(%ecx),%edx$/;"	l
f0100df5	obj/kern/kernel.asm	/^f0100df5:	a3 34 c2 22 f0       	mov    %eax,0xf022c234$/;"	l
f0100dfa	obj/kern/kernel.asm	/^f0100dfa:	89 15 38 c2 22 f0    	mov    %edx,0xf022c238$/;"	l
f0100e00	obj/kern/kernel.asm	/^f0100e00:	89 0d 30 c2 22 f0    	mov    %ecx,0xf022c230$/;"	l
f0100e06	obj/kern/kernel.asm	/^f0100e06:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100e0b	obj/kern/kernel.asm	/^f0100e0b:	eb 05                	jmp    f0100e12 <page_free_4pages+0x4f>$/;"	l
f0100e0d	obj/kern/kernel.asm	/^f0100e0d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100e12	obj/kern/kernel.asm	/^f0100e12:	5d                   	pop    %ebp$/;"	l
f0100e13	obj/kern/kernel.asm	/^f0100e13:	c3                   	ret    $/;"	l
f0100e14	obj/kern/kernel.asm	/^f0100e14 <page_free>:$/;"	l
f0100e14	obj/kern/kernel.asm	/^f0100e14:	55                   	push   %ebp$/;"	l
f0100e15	obj/kern/kernel.asm	/^f0100e15:	89 e5                	mov    %esp,%ebp$/;"	l
f0100e17	obj/kern/kernel.asm	/^f0100e17:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100e1a	obj/kern/kernel.asm	/^f0100e1a:	8b 15 30 c2 22 f0    	mov    0xf022c230,%edx$/;"	l
f0100e20	obj/kern/kernel.asm	/^f0100e20:	89 10                	mov    %edx,(%eax)$/;"	l
f0100e22	obj/kern/kernel.asm	/^f0100e22:	a3 30 c2 22 f0       	mov    %eax,0xf022c230$/;"	l
f0100e27	obj/kern/kernel.asm	/^f0100e27:	5d                   	pop    %ebp$/;"	l
f0100e28	obj/kern/kernel.asm	/^f0100e28:	c3                   	ret    $/;"	l
f0100e29	obj/kern/kernel.asm	/^f0100e29 <page_decref>:$/;"	l
f0100e29	obj/kern/kernel.asm	/^f0100e29:	55                   	push   %ebp$/;"	l
f0100e2a	obj/kern/kernel.asm	/^f0100e2a:	89 e5                	mov    %esp,%ebp$/;"	l
f0100e2c	obj/kern/kernel.asm	/^f0100e2c:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100e2f	obj/kern/kernel.asm	/^f0100e2f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100e32	obj/kern/kernel.asm	/^f0100e32:	0f b7 50 04          	movzwl 0x4(%eax),%edx$/;"	l
f0100e36	obj/kern/kernel.asm	/^f0100e36:	83 ea 01             	sub    $0x1,%edx$/;"	l
f0100e39	obj/kern/kernel.asm	/^f0100e39:	66 89 50 04          	mov    %dx,0x4(%eax)$/;"	l
f0100e3d	obj/kern/kernel.asm	/^f0100e3d:	66 85 d2             	test   %dx,%dx$/;"	l
f0100e40	obj/kern/kernel.asm	/^f0100e40:	75 08                	jne    f0100e4a <page_decref+0x21>$/;"	l
f0100e42	obj/kern/kernel.asm	/^f0100e42:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100e45	obj/kern/kernel.asm	/^f0100e45:	e8 ca ff ff ff       	call   f0100e14 <page_free>$/;"	l
f0100e4a	obj/kern/kernel.asm	/^f0100e4a:	c9                   	leave  $/;"	l
f0100e4b	obj/kern/kernel.asm	/^f0100e4b:	c3                   	ret    $/;"	l
f0100e4c	obj/kern/kernel.asm	/^f0100e4c <tlb_invalidate>:$/;"	l
f0100e4c	obj/kern/kernel.asm	/^f0100e4c:	55                   	push   %ebp$/;"	l
f0100e4d	obj/kern/kernel.asm	/^f0100e4d:	89 e5                	mov    %esp,%ebp$/;"	l
f0100e4f	obj/kern/kernel.asm	/^f0100e4f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100e52	obj/kern/kernel.asm	/^f0100e52:	e8 57 54 00 00       	call   f01062ae <cpunum>$/;"	l
f0100e57	obj/kern/kernel.asm	/^f0100e57:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0100e5a	obj/kern/kernel.asm	/^f0100e5a:	83 b8 28 d0 22 f0 00 	cmpl   $0x0,-0xfdd2fd8(%eax)$/;"	l
f0100e61	obj/kern/kernel.asm	/^f0100e61:	74 16                	je     f0100e79 <tlb_invalidate+0x2d>$/;"	l
f0100e63	obj/kern/kernel.asm	/^f0100e63:	e8 46 54 00 00       	call   f01062ae <cpunum>$/;"	l
f0100e68	obj/kern/kernel.asm	/^f0100e68:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0100e6b	obj/kern/kernel.asm	/^f0100e6b:	8b 90 28 d0 22 f0    	mov    -0xfdd2fd8(%eax),%edx$/;"	l
f0100e71	obj/kern/kernel.asm	/^f0100e71:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100e74	obj/kern/kernel.asm	/^f0100e74:	39 42 60             	cmp    %eax,0x60(%edx)$/;"	l
f0100e77	obj/kern/kernel.asm	/^f0100e77:	75 06                	jne    f0100e7f <tlb_invalidate+0x33>$/;"	l
f0100e79	obj/kern/kernel.asm	/^f0100e79:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100e7c	obj/kern/kernel.asm	/^f0100e7c:	0f 01 38             	invlpg (%eax)$/;"	l
f0100e7f	obj/kern/kernel.asm	/^f0100e7f:	c9                   	leave  $/;"	l
f0100e80	obj/kern/kernel.asm	/^f0100e80:	c3                   	ret    $/;"	l
f0100e81	obj/kern/kernel.asm	/^f0100e81 <check_va2pa>:$/;"	l
f0100e81	obj/kern/kernel.asm	/^f0100e81:	55                   	push   %ebp$/;"	l
f0100e82	obj/kern/kernel.asm	/^f0100e82:	89 e5                	mov    %esp,%ebp$/;"	l
f0100e84	obj/kern/kernel.asm	/^f0100e84:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100e87	obj/kern/kernel.asm	/^f0100e87:	89 d1                	mov    %edx,%ecx$/;"	l
f0100e89	obj/kern/kernel.asm	/^f0100e89:	c1 e9 16             	shr    $0x16,%ecx$/;"	l
f0100e8c	obj/kern/kernel.asm	/^f0100e8c:	8b 04 88             	mov    (%eax,%ecx,4),%eax$/;"	l
f0100e8f	obj/kern/kernel.asm	/^f0100e8f:	a8 01                	test   $0x1,%al$/;"	l
f0100e91	obj/kern/kernel.asm	/^f0100e91:	74 4d                	je     f0100ee0 <check_va2pa+0x5f>$/;"	l
f0100e93	obj/kern/kernel.asm	/^f0100e93:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100e98	obj/kern/kernel.asm	/^f0100e98:	89 c1                	mov    %eax,%ecx$/;"	l
f0100e9a	obj/kern/kernel.asm	/^f0100e9a:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0100e9d	obj/kern/kernel.asm	/^f0100e9d:	3b 0d e8 ce 22 f0    	cmp    0xf022cee8,%ecx$/;"	l
f0100ea3	obj/kern/kernel.asm	/^f0100ea3:	72 20                	jb     f0100ec5 <check_va2pa+0x44>$/;"	l
f0100ea5	obj/kern/kernel.asm	/^f0100ea5:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100ea9	obj/kern/kernel.asm	/^f0100ea9:	c7 44 24 08 8c 6a 10 	movl   $0xf0106a8c,0x8(%esp)$/;"	l
f0100eb0	obj/kern/kernel.asm	/^f0100eb0:	f0 $/;"	l
f0100eb1	obj/kern/kernel.asm	/^f0100eb1:	c7 44 24 04 c2 03 00 	movl   $0x3c2,0x4(%esp)$/;"	l
f0100eb8	obj/kern/kernel.asm	/^f0100eb8:	00 $/;"	l
f0100eb9	obj/kern/kernel.asm	/^f0100eb9:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0100ec0	obj/kern/kernel.asm	/^f0100ec0:	e8 c0 f1 ff ff       	call   f0100085 <_panic>$/;"	l
f0100ec5	obj/kern/kernel.asm	/^f0100ec5:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100ec8	obj/kern/kernel.asm	/^f0100ec8:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
f0100ece	obj/kern/kernel.asm	/^f0100ece:	8b 84 90 00 00 00 f0 	mov    -0x10000000(%eax,%edx,4),%eax$/;"	l
f0100ed5	obj/kern/kernel.asm	/^f0100ed5:	a8 01                	test   $0x1,%al$/;"	l
f0100ed7	obj/kern/kernel.asm	/^f0100ed7:	74 07                	je     f0100ee0 <check_va2pa+0x5f>$/;"	l
f0100ed9	obj/kern/kernel.asm	/^f0100ed9:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100ede	obj/kern/kernel.asm	/^f0100ede:	eb 05                	jmp    f0100ee5 <check_va2pa+0x64>$/;"	l
f0100ee0	obj/kern/kernel.asm	/^f0100ee0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100ee5	obj/kern/kernel.asm	/^f0100ee5:	c9                   	leave  $/;"	l
f0100ee6	obj/kern/kernel.asm	/^f0100ee6:	c3                   	ret    $/;"	l
f0100ee7	obj/kern/kernel.asm	/^f0100ee7 <page_init>:$/;"	l
f0100ee7	obj/kern/kernel.asm	/^f0100ee7:	55                   	push   %ebp$/;"	l
f0100ee8	obj/kern/kernel.asm	/^f0100ee8:	89 e5                	mov    %esp,%ebp$/;"	l
f0100eea	obj/kern/kernel.asm	/^f0100eea:	57                   	push   %edi$/;"	l
f0100eeb	obj/kern/kernel.asm	/^f0100eeb:	56                   	push   %esi$/;"	l
f0100eec	obj/kern/kernel.asm	/^f0100eec:	53                   	push   %ebx$/;"	l
f0100eed	obj/kern/kernel.asm	/^f0100eed:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0100ef0	obj/kern/kernel.asm	/^f0100ef0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100ef5	obj/kern/kernel.asm	/^f0100ef5:	e8 86 fe ff ff       	call   f0100d80 <boot_alloc>$/;"	l
f0100efa	obj/kern/kernel.asm	/^f0100efa:	89 c3                	mov    %eax,%ebx$/;"	l
f0100efc	obj/kern/kernel.asm	/^f0100efc:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0100f01	obj/kern/kernel.asm	/^f0100f01:	77 20                	ja     f0100f23 <page_init+0x3c>$/;"	l
f0100f03	obj/kern/kernel.asm	/^f0100f03:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100f07	obj/kern/kernel.asm	/^f0100f07:	c7 44 24 08 48 6a 10 	movl   $0xf0106a48,0x8(%esp)$/;"	l
f0100f0e	obj/kern/kernel.asm	/^f0100f0e:	f0 $/;"	l
f0100f0f	obj/kern/kernel.asm	/^f0100f0f:	c7 44 24 04 3e 01 00 	movl   $0x13e,0x4(%esp)$/;"	l
f0100f16	obj/kern/kernel.asm	/^f0100f16:	00 $/;"	l
f0100f17	obj/kern/kernel.asm	/^f0100f17:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0100f1e	obj/kern/kernel.asm	/^f0100f1e:	e8 62 f1 ff ff       	call   f0100085 <_panic>$/;"	l
f0100f23	obj/kern/kernel.asm	/^f0100f23:	81 c3 00 00 00 10    	add    $0x10000000,%ebx$/;"	l
f0100f29	obj/kern/kernel.asm	/^f0100f29:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f0100f2c	obj/kern/kernel.asm	/^f0100f2c:	c7 05 30 c2 22 f0 00 	movl   $0x0,0xf022c230$/;"	l
f0100f33	obj/kern/kernel.asm	/^f0100f33:	00 00 00 $/;"	l
f0100f36	obj/kern/kernel.asm	/^f0100f36:	a1 f0 ce 22 f0       	mov    0xf022cef0,%eax$/;"	l
f0100f3b	obj/kern/kernel.asm	/^f0100f3b:	66 c7 40 04 01 00    	movw   $0x1,0x4(%eax)$/;"	l
f0100f41	obj/kern/kernel.asm	/^f0100f41:	a1 e8 ce 22 f0       	mov    0xf022cee8,%eax$/;"	l
f0100f46	obj/kern/kernel.asm	/^f0100f46:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
f0100f49	obj/kern/kernel.asm	/^f0100f49:	39 d3                	cmp    %edx,%ebx$/;"	l
f0100f4b	obj/kern/kernel.asm	/^f0100f4b:	77 3a                	ja     f0100f87 <page_init+0xa0>$/;"	l
f0100f4d	obj/kern/kernel.asm	/^f0100f4d:	8d 04 c5 f8 ff ff ff 	lea    -0x8(,%eax,8),%eax$/;"	l
f0100f54	obj/kern/kernel.asm	/^f0100f54:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0100f59	obj/kern/kernel.asm	/^f0100f59:	8b 35 f0 ce 22 f0    	mov    0xf022cef0,%esi$/;"	l
f0100f5f	obj/kern/kernel.asm	/^f0100f5f:	66 c7 44 06 04 00 00 	movw   $0x0,0x4(%esi,%eax,1)$/;"	l
f0100f66	obj/kern/kernel.asm	/^f0100f66:	8b 35 f0 ce 22 f0    	mov    0xf022cef0,%esi$/;"	l
f0100f6c	obj/kern/kernel.asm	/^f0100f6c:	89 0c 06             	mov    %ecx,(%esi,%eax,1)$/;"	l
f0100f6f	obj/kern/kernel.asm	/^f0100f6f:	89 c1                	mov    %eax,%ecx$/;"	l
f0100f71	obj/kern/kernel.asm	/^f0100f71:	03 0d f0 ce 22 f0    	add    0xf022cef0,%ecx$/;"	l
f0100f77	obj/kern/kernel.asm	/^f0100f77:	83 ea 01             	sub    $0x1,%edx$/;"	l
f0100f7a	obj/kern/kernel.asm	/^f0100f7a:	83 e8 08             	sub    $0x8,%eax$/;"	l
f0100f7d	obj/kern/kernel.asm	/^f0100f7d:	39 d3                	cmp    %edx,%ebx$/;"	l
f0100f7f	obj/kern/kernel.asm	/^f0100f7f:	76 d8                	jbe    f0100f59 <page_init+0x72>$/;"	l
f0100f81	obj/kern/kernel.asm	/^f0100f81:	89 0d 30 c2 22 f0    	mov    %ecx,0xf022c230$/;"	l
f0100f87	obj/kern/kernel.asm	/^f0100f87:	8b 15 2c c2 22 f0    	mov    0xf022c22c,%edx$/;"	l
f0100f8d	obj/kern/kernel.asm	/^f0100f8d:	89 d1                	mov    %edx,%ecx$/;"	l
f0100f8f	obj/kern/kernel.asm	/^f0100f8f:	83 e9 01             	sub    $0x1,%ecx$/;"	l
f0100f92	obj/kern/kernel.asm	/^f0100f92:	74 39                	je     f0100fcd <page_init+0xe6>$/;"	l
f0100f94	obj/kern/kernel.asm	/^f0100f94:	8b 35 30 c2 22 f0    	mov    0xf022c230,%esi$/;"	l
f0100f9a	obj/kern/kernel.asm	/^f0100f9a:	8d 04 d5 f8 ff ff ff 	lea    -0x8(,%edx,8),%eax$/;"	l
f0100fa1	obj/kern/kernel.asm	/^f0100fa1:	8b 3d f0 ce 22 f0    	mov    0xf022cef0,%edi$/;"	l
f0100fa7	obj/kern/kernel.asm	/^f0100fa7:	66 c7 44 07 04 00 00 	movw   $0x0,0x4(%edi,%eax,1)$/;"	l
f0100fae	obj/kern/kernel.asm	/^f0100fae:	8b 3d f0 ce 22 f0    	mov    0xf022cef0,%edi$/;"	l
f0100fb4	obj/kern/kernel.asm	/^f0100fb4:	89 34 07             	mov    %esi,(%edi,%eax,1)$/;"	l
f0100fb7	obj/kern/kernel.asm	/^f0100fb7:	89 c6                	mov    %eax,%esi$/;"	l
f0100fb9	obj/kern/kernel.asm	/^f0100fb9:	03 35 f0 ce 22 f0    	add    0xf022cef0,%esi$/;"	l
f0100fbf	obj/kern/kernel.asm	/^f0100fbf:	83 e8 08             	sub    $0x8,%eax$/;"	l
f0100fc2	obj/kern/kernel.asm	/^f0100fc2:	83 e9 01             	sub    $0x1,%ecx$/;"	l
f0100fc5	obj/kern/kernel.asm	/^f0100fc5:	75 da                	jne    f0100fa1 <page_init+0xba>$/;"	l
f0100fc7	obj/kern/kernel.asm	/^f0100fc7:	89 35 30 c2 22 f0    	mov    %esi,0xf022c230$/;"	l
f0100fcd	obj/kern/kernel.asm	/^f0100fcd:	39 d3                	cmp    %edx,%ebx$/;"	l
f0100fcf	obj/kern/kernel.asm	/^f0100fcf:	76 1e                	jbe    f0100fef <page_init+0x108>$/;"	l
f0100fd1	obj/kern/kernel.asm	/^f0100fd1:	8d 04 d5 00 00 00 00 	lea    0x0(,%edx,8),%eax$/;"	l
f0100fd8	obj/kern/kernel.asm	/^f0100fd8:	8b 0d f0 ce 22 f0    	mov    0xf022cef0,%ecx$/;"	l
f0100fde	obj/kern/kernel.asm	/^f0100fde:	66 c7 44 01 04 01 00 	movw   $0x1,0x4(%ecx,%eax,1)$/;"	l
f0100fe5	obj/kern/kernel.asm	/^f0100fe5:	83 c2 01             	add    $0x1,%edx$/;"	l
f0100fe8	obj/kern/kernel.asm	/^f0100fe8:	83 c0 08             	add    $0x8,%eax$/;"	l
f0100feb	obj/kern/kernel.asm	/^f0100feb:	39 d3                	cmp    %edx,%ebx$/;"	l
f0100fed	obj/kern/kernel.asm	/^f0100fed:	77 e9                	ja     f0100fd8 <page_init+0xf1>$/;"	l
f0100fef	obj/kern/kernel.asm	/^f0100fef:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0100ff2	obj/kern/kernel.asm	/^f0100ff2:	5b                   	pop    %ebx$/;"	l
f0100ff3	obj/kern/kernel.asm	/^f0100ff3:	5e                   	pop    %esi$/;"	l
f0100ff4	obj/kern/kernel.asm	/^f0100ff4:	5f                   	pop    %edi$/;"	l
f0100ff5	obj/kern/kernel.asm	/^f0100ff5:	5d                   	pop    %ebp$/;"	l
f0100ff6	obj/kern/kernel.asm	/^f0100ff6:	c3                   	ret    $/;"	l
f0100ff7	obj/kern/kernel.asm	/^f0100ff7 <nvram_read>:$/;"	l
f0100ff7	obj/kern/kernel.asm	/^f0100ff7:	55                   	push   %ebp$/;"	l
f0100ff8	obj/kern/kernel.asm	/^f0100ff8:	89 e5                	mov    %esp,%ebp$/;"	l
f0100ffa	obj/kern/kernel.asm	/^f0100ffa:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100ffd	obj/kern/kernel.asm	/^f0100ffd:	89 5d f8             	mov    %ebx,-0x8(%ebp)$/;"	l
f0101000	obj/kern/kernel.asm	/^f0101000:	89 75 fc             	mov    %esi,-0x4(%ebp)$/;"	l
f0101003	obj/kern/kernel.asm	/^f0101003:	89 c3                	mov    %eax,%ebx$/;"	l
f0101005	obj/kern/kernel.asm	/^f0101005:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101008	obj/kern/kernel.asm	/^f0101008:	e8 47 31 00 00       	call   f0104154 <mc146818_read>$/;"	l
f010100d	obj/kern/kernel.asm	/^f010100d:	89 c6                	mov    %eax,%esi$/;"	l
f010100f	obj/kern/kernel.asm	/^f010100f:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0101012	obj/kern/kernel.asm	/^f0101012:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0101015	obj/kern/kernel.asm	/^f0101015:	e8 3a 31 00 00       	call   f0104154 <mc146818_read>$/;"	l
f010101a	obj/kern/kernel.asm	/^f010101a:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f010101d	obj/kern/kernel.asm	/^f010101d:	09 f0                	or     %esi,%eax$/;"	l
f010101f	obj/kern/kernel.asm	/^f010101f:	8b 5d f8             	mov    -0x8(%ebp),%ebx$/;"	l
f0101022	obj/kern/kernel.asm	/^f0101022:	8b 75 fc             	mov    -0x4(%ebp),%esi$/;"	l
f0101025	obj/kern/kernel.asm	/^f0101025:	89 ec                	mov    %ebp,%esp$/;"	l
f0101027	obj/kern/kernel.asm	/^f0101027:	5d                   	pop    %ebp$/;"	l
f0101028	obj/kern/kernel.asm	/^f0101028:	c3                   	ret    $/;"	l
f0101029	obj/kern/kernel.asm	/^f0101029 <check_page_free_list>:$/;"	l
f0101029	obj/kern/kernel.asm	/^f0101029:	55                   	push   %ebp$/;"	l
f010102a	obj/kern/kernel.asm	/^f010102a:	89 e5                	mov    %esp,%ebp$/;"	l
f010102c	obj/kern/kernel.asm	/^f010102c:	57                   	push   %edi$/;"	l
f010102d	obj/kern/kernel.asm	/^f010102d:	56                   	push   %esi$/;"	l
f010102e	obj/kern/kernel.asm	/^f010102e:	53                   	push   %ebx$/;"	l
f010102f	obj/kern/kernel.asm	/^f010102f:	83 ec 5c             	sub    $0x5c,%esp$/;"	l
f0101032	obj/kern/kernel.asm	/^f0101032:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0101035	obj/kern/kernel.asm	/^f0101035:	19 f6                	sbb    %esi,%esi$/;"	l
f0101037	obj/kern/kernel.asm	/^f0101037:	81 e6 ff 03 00 00    	and    $0x3ff,%esi$/;"	l
f010103d	obj/kern/kernel.asm	/^f010103d:	83 c6 01             	add    $0x1,%esi$/;"	l
f0101040	obj/kern/kernel.asm	/^f0101040:	8b 1d 30 c2 22 f0    	mov    0xf022c230,%ebx$/;"	l
f0101046	obj/kern/kernel.asm	/^f0101046:	85 db                	test   %ebx,%ebx$/;"	l
f0101048	obj/kern/kernel.asm	/^f0101048:	75 1c                	jne    f0101066 <check_page_free_list+0x3d>$/;"	l
f010104a	obj/kern/kernel.asm	/^f010104a:	c7 44 24 08 64 6f 10 	movl   $0xf0106f64,0x8(%esp)$/;"	l
f0101051	obj/kern/kernel.asm	/^f0101051:	f0 $/;"	l
f0101052	obj/kern/kernel.asm	/^f0101052:	c7 44 24 04 f1 02 00 	movl   $0x2f1,0x4(%esp)$/;"	l
f0101059	obj/kern/kernel.asm	/^f0101059:	00 $/;"	l
f010105a	obj/kern/kernel.asm	/^f010105a:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0101061	obj/kern/kernel.asm	/^f0101061:	e8 1f f0 ff ff       	call   f0100085 <_panic>$/;"	l
f0101066	obj/kern/kernel.asm	/^f0101066:	85 c0                	test   %eax,%eax$/;"	l
f0101068	obj/kern/kernel.asm	/^f0101068:	74 52                	je     f01010bc <check_page_free_list+0x93>$/;"	l
f010106a	obj/kern/kernel.asm	/^f010106a:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f010106d	obj/kern/kernel.asm	/^f010106d:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0101070	obj/kern/kernel.asm	/^f0101070:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f0101073	obj/kern/kernel.asm	/^f0101073:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0101076	obj/kern/kernel.asm	/^f0101076:	8b 0d f0 ce 22 f0    	mov    0xf022cef0,%ecx$/;"	l
f010107c	obj/kern/kernel.asm	/^f010107c:	89 d8                	mov    %ebx,%eax$/;"	l
f010107e	obj/kern/kernel.asm	/^f010107e:	29 c8                	sub    %ecx,%eax$/;"	l
f0101080	obj/kern/kernel.asm	/^f0101080:	c1 e0 09             	shl    $0x9,%eax$/;"	l
f0101083	obj/kern/kernel.asm	/^f0101083:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f0101086	obj/kern/kernel.asm	/^f0101086:	39 c6                	cmp    %eax,%esi$/;"	l
f0101088	obj/kern/kernel.asm	/^f0101088:	0f 96 c0             	setbe  %al$/;"	l
f010108b	obj/kern/kernel.asm	/^f010108b:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010108e	obj/kern/kernel.asm	/^f010108e:	8b 54 85 d8          	mov    -0x28(%ebp,%eax,4),%edx$/;"	l
f0101092	obj/kern/kernel.asm	/^f0101092:	89 1a                	mov    %ebx,(%edx)$/;"	l
f0101094	obj/kern/kernel.asm	/^f0101094:	89 5c 85 d8          	mov    %ebx,-0x28(%ebp,%eax,4)$/;"	l
f0101098	obj/kern/kernel.asm	/^f0101098:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f010109a	obj/kern/kernel.asm	/^f010109a:	85 db                	test   %ebx,%ebx$/;"	l
f010109c	obj/kern/kernel.asm	/^f010109c:	75 de                	jne    f010107c <check_page_free_list+0x53>$/;"	l
f010109e	obj/kern/kernel.asm	/^f010109e:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f01010a1	obj/kern/kernel.asm	/^f01010a1:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01010a7	obj/kern/kernel.asm	/^f01010a7:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f01010aa	obj/kern/kernel.asm	/^f01010aa:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f01010ad	obj/kern/kernel.asm	/^f01010ad:	89 10                	mov    %edx,(%eax)$/;"	l
f01010af	obj/kern/kernel.asm	/^f01010af:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f01010b2	obj/kern/kernel.asm	/^f01010b2:	89 1d 30 c2 22 f0    	mov    %ebx,0xf022c230$/;"	l
f01010b8	obj/kern/kernel.asm	/^f01010b8:	85 db                	test   %ebx,%ebx$/;"	l
f01010ba	obj/kern/kernel.asm	/^f01010ba:	74 67                	je     f0101123 <check_page_free_list+0xfa>$/;"	l
f01010bc	obj/kern/kernel.asm	/^f01010bc:	89 d8                	mov    %ebx,%eax$/;"	l
f01010be	obj/kern/kernel.asm	/^f01010be:	2b 05 f0 ce 22 f0    	sub    0xf022cef0,%eax$/;"	l
f01010c4	obj/kern/kernel.asm	/^f01010c4:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01010c7	obj/kern/kernel.asm	/^f01010c7:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01010ca	obj/kern/kernel.asm	/^f01010ca:	89 c2                	mov    %eax,%edx$/;"	l
f01010cc	obj/kern/kernel.asm	/^f01010cc:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f01010cf	obj/kern/kernel.asm	/^f01010cf:	39 d6                	cmp    %edx,%esi$/;"	l
f01010d1	obj/kern/kernel.asm	/^f01010d1:	76 4a                	jbe    f010111d <check_page_free_list+0xf4>$/;"	l
f01010d3	obj/kern/kernel.asm	/^f01010d3:	89 c2                	mov    %eax,%edx$/;"	l
f01010d5	obj/kern/kernel.asm	/^f01010d5:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01010d8	obj/kern/kernel.asm	/^f01010d8:	3b 15 e8 ce 22 f0    	cmp    0xf022cee8,%edx$/;"	l
f01010de	obj/kern/kernel.asm	/^f01010de:	72 20                	jb     f0101100 <check_page_free_list+0xd7>$/;"	l
f01010e0	obj/kern/kernel.asm	/^f01010e0:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01010e4	obj/kern/kernel.asm	/^f01010e4:	c7 44 24 08 8c 6a 10 	movl   $0xf0106a8c,0x8(%esp)$/;"	l
f01010eb	obj/kern/kernel.asm	/^f01010eb:	f0 $/;"	l
f01010ec	obj/kern/kernel.asm	/^f01010ec:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f01010f3	obj/kern/kernel.asm	/^f01010f3:	00 $/;"	l
f01010f4	obj/kern/kernel.asm	/^f01010f4:	c7 04 24 8d 76 10 f0 	movl   $0xf010768d,(%esp)$/;"	l
f01010fb	obj/kern/kernel.asm	/^f01010fb:	e8 85 ef ff ff       	call   f0100085 <_panic>$/;"	l
f0101100	obj/kern/kernel.asm	/^f0101100:	c7 44 24 08 80 00 00 	movl   $0x80,0x8(%esp)$/;"	l
f0101107	obj/kern/kernel.asm	/^f0101107:	00 $/;"	l
f0101108	obj/kern/kernel.asm	/^f0101108:	c7 44 24 04 97 00 00 	movl   $0x97,0x4(%esp)$/;"	l
f010110f	obj/kern/kernel.asm	/^f010110f:	00 $/;"	l
f0101110	obj/kern/kernel.asm	/^f0101110:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101115	obj/kern/kernel.asm	/^f0101115:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101118	obj/kern/kernel.asm	/^f0101118:	e8 e9 4a 00 00       	call   f0105c06 <memset>$/;"	l
f010111d	obj/kern/kernel.asm	/^f010111d:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f010111f	obj/kern/kernel.asm	/^f010111f:	85 db                	test   %ebx,%ebx$/;"	l
f0101121	obj/kern/kernel.asm	/^f0101121:	75 99                	jne    f01010bc <check_page_free_list+0x93>$/;"	l
f0101123	obj/kern/kernel.asm	/^f0101123:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101128	obj/kern/kernel.asm	/^f0101128:	e8 53 fc ff ff       	call   f0100d80 <boot_alloc>$/;"	l
f010112d	obj/kern/kernel.asm	/^f010112d:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f0101130	obj/kern/kernel.asm	/^f0101130:	8b 15 30 c2 22 f0    	mov    0xf022c230,%edx$/;"	l
f0101136	obj/kern/kernel.asm	/^f0101136:	85 d2                	test   %edx,%edx$/;"	l
f0101138	obj/kern/kernel.asm	/^f0101138:	0f 84 3d 02 00 00    	je     f010137b <check_page_free_list+0x352>$/;"	l
f010113e	obj/kern/kernel.asm	/^f010113e:	8b 1d f0 ce 22 f0    	mov    0xf022cef0,%ebx$/;"	l
f0101144	obj/kern/kernel.asm	/^f0101144:	39 da                	cmp    %ebx,%edx$/;"	l
f0101146	obj/kern/kernel.asm	/^f0101146:	72 52                	jb     f010119a <check_page_free_list+0x171>$/;"	l
f0101148	obj/kern/kernel.asm	/^f0101148:	a1 e8 ce 22 f0       	mov    0xf022cee8,%eax$/;"	l
f010114d	obj/kern/kernel.asm	/^f010114d:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f0101150	obj/kern/kernel.asm	/^f0101150:	8d 04 c3             	lea    (%ebx,%eax,8),%eax$/;"	l
f0101153	obj/kern/kernel.asm	/^f0101153:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0101156	obj/kern/kernel.asm	/^f0101156:	39 c2                	cmp    %eax,%edx$/;"	l
f0101158	obj/kern/kernel.asm	/^f0101158:	73 69                	jae    f01011c3 <check_page_free_list+0x19a>$/;"	l
f010115a	obj/kern/kernel.asm	/^f010115a:	89 5d cc             	mov    %ebx,-0x34(%ebp)$/;"	l
f010115d	obj/kern/kernel.asm	/^f010115d:	89 d0                	mov    %edx,%eax$/;"	l
f010115f	obj/kern/kernel.asm	/^f010115f:	29 d8                	sub    %ebx,%eax$/;"	l
f0101161	obj/kern/kernel.asm	/^f0101161:	a8 07                	test   $0x7,%al$/;"	l
f0101163	obj/kern/kernel.asm	/^f0101163:	0f 85 87 00 00 00    	jne    f01011f0 <check_page_free_list+0x1c7>$/;"	l
f0101169	obj/kern/kernel.asm	/^f0101169:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010116c	obj/kern/kernel.asm	/^f010116c:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010116f	obj/kern/kernel.asm	/^f010116f:	85 c0                	test   %eax,%eax$/;"	l
f0101171	obj/kern/kernel.asm	/^f0101171:	0f 84 a7 00 00 00    	je     f010121e <check_page_free_list+0x1f5>$/;"	l
f0101177	obj/kern/kernel.asm	/^f0101177:	3d 00 00 0a 00       	cmp    $0xa0000,%eax$/;"	l
f010117c	obj/kern/kernel.asm	/^f010117c:	0f 84 c7 00 00 00    	je     f0101249 <check_page_free_list+0x220>$/;"	l
f0101182	obj/kern/kernel.asm	/^f0101182:	3d 00 f0 0f 00       	cmp    $0xff000,%eax$/;"	l
f0101187	obj/kern/kernel.asm	/^f0101187:	0f 85 0b 01 00 00    	jne    f0101298 <check_page_free_list+0x26f>$/;"	l
f010118d	obj/kern/kernel.asm	/^f010118d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0101190	obj/kern/kernel.asm	/^f0101190:	e9 df 00 00 00       	jmp    f0101274 <check_page_free_list+0x24b>$/;"	l
f0101195	obj/kern/kernel.asm	/^f0101195:	3b 55 b4             	cmp    -0x4c(%ebp),%edx$/;"	l
f0101198	obj/kern/kernel.asm	/^f0101198:	73 24                	jae    f01011be <check_page_free_list+0x195>$/;"	l
f010119a	obj/kern/kernel.asm	/^f010119a:	c7 44 24 0c 9b 76 10 	movl   $0xf010769b,0xc(%esp)$/;"	l
f01011a1	obj/kern/kernel.asm	/^f01011a1:	f0 $/;"	l
f01011a2	obj/kern/kernel.asm	/^f01011a2:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f01011a9	obj/kern/kernel.asm	/^f01011a9:	f0 $/;"	l
f01011aa	obj/kern/kernel.asm	/^f01011aa:	c7 44 24 04 0c 03 00 	movl   $0x30c,0x4(%esp)$/;"	l
f01011b1	obj/kern/kernel.asm	/^f01011b1:	00 $/;"	l
f01011b2	obj/kern/kernel.asm	/^f01011b2:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f01011b9	obj/kern/kernel.asm	/^f01011b9:	e8 c7 ee ff ff       	call   f0100085 <_panic>$/;"	l
f01011be	obj/kern/kernel.asm	/^f01011be:	3b 55 d0             	cmp    -0x30(%ebp),%edx$/;"	l
f01011c1	obj/kern/kernel.asm	/^f01011c1:	72 24                	jb     f01011e7 <check_page_free_list+0x1be>$/;"	l
f01011c3	obj/kern/kernel.asm	/^f01011c3:	c7 44 24 0c bc 76 10 	movl   $0xf01076bc,0xc(%esp)$/;"	l
f01011ca	obj/kern/kernel.asm	/^f01011ca:	f0 $/;"	l
f01011cb	obj/kern/kernel.asm	/^f01011cb:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f01011d2	obj/kern/kernel.asm	/^f01011d2:	f0 $/;"	l
f01011d3	obj/kern/kernel.asm	/^f01011d3:	c7 44 24 04 0d 03 00 	movl   $0x30d,0x4(%esp)$/;"	l
f01011da	obj/kern/kernel.asm	/^f01011da:	00 $/;"	l
f01011db	obj/kern/kernel.asm	/^f01011db:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f01011e2	obj/kern/kernel.asm	/^f01011e2:	e8 9e ee ff ff       	call   f0100085 <_panic>$/;"	l
f01011e7	obj/kern/kernel.asm	/^f01011e7:	89 d0                	mov    %edx,%eax$/;"	l
f01011e9	obj/kern/kernel.asm	/^f01011e9:	2b 45 cc             	sub    -0x34(%ebp),%eax$/;"	l
f01011ec	obj/kern/kernel.asm	/^f01011ec:	a8 07                	test   $0x7,%al$/;"	l
f01011ee	obj/kern/kernel.asm	/^f01011ee:	74 24                	je     f0101214 <check_page_free_list+0x1eb>$/;"	l
f01011f0	obj/kern/kernel.asm	/^f01011f0:	c7 44 24 0c 88 6f 10 	movl   $0xf0106f88,0xc(%esp)$/;"	l
f01011f7	obj/kern/kernel.asm	/^f01011f7:	f0 $/;"	l
f01011f8	obj/kern/kernel.asm	/^f01011f8:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f01011ff	obj/kern/kernel.asm	/^f01011ff:	f0 $/;"	l
f0101200	obj/kern/kernel.asm	/^f0101200:	c7 44 24 04 0e 03 00 	movl   $0x30e,0x4(%esp)$/;"	l
f0101207	obj/kern/kernel.asm	/^f0101207:	00 $/;"	l
f0101208	obj/kern/kernel.asm	/^f0101208:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f010120f	obj/kern/kernel.asm	/^f010120f:	e8 71 ee ff ff       	call   f0100085 <_panic>$/;"	l
f0101214	obj/kern/kernel.asm	/^f0101214:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101217	obj/kern/kernel.asm	/^f0101217:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010121a	obj/kern/kernel.asm	/^f010121a:	85 c0                	test   %eax,%eax$/;"	l
f010121c	obj/kern/kernel.asm	/^f010121c:	75 24                	jne    f0101242 <check_page_free_list+0x219>$/;"	l
f010121e	obj/kern/kernel.asm	/^f010121e:	c7 44 24 0c d0 76 10 	movl   $0xf01076d0,0xc(%esp)$/;"	l
f0101225	obj/kern/kernel.asm	/^f0101225:	f0 $/;"	l
f0101226	obj/kern/kernel.asm	/^f0101226:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f010122d	obj/kern/kernel.asm	/^f010122d:	f0 $/;"	l
f010122e	obj/kern/kernel.asm	/^f010122e:	c7 44 24 04 11 03 00 	movl   $0x311,0x4(%esp)$/;"	l
f0101235	obj/kern/kernel.asm	/^f0101235:	00 $/;"	l
f0101236	obj/kern/kernel.asm	/^f0101236:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f010123d	obj/kern/kernel.asm	/^f010123d:	e8 43 ee ff ff       	call   f0100085 <_panic>$/;"	l
f0101242	obj/kern/kernel.asm	/^f0101242:	3d 00 00 0a 00       	cmp    $0xa0000,%eax$/;"	l
f0101247	obj/kern/kernel.asm	/^f0101247:	75 24                	jne    f010126d <check_page_free_list+0x244>$/;"	l
f0101249	obj/kern/kernel.asm	/^f0101249:	c7 44 24 0c e1 76 10 	movl   $0xf01076e1,0xc(%esp)$/;"	l
f0101250	obj/kern/kernel.asm	/^f0101250:	f0 $/;"	l
f0101251	obj/kern/kernel.asm	/^f0101251:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0101258	obj/kern/kernel.asm	/^f0101258:	f0 $/;"	l
f0101259	obj/kern/kernel.asm	/^f0101259:	c7 44 24 04 12 03 00 	movl   $0x312,0x4(%esp)$/;"	l
f0101260	obj/kern/kernel.asm	/^f0101260:	00 $/;"	l
f0101261	obj/kern/kernel.asm	/^f0101261:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0101268	obj/kern/kernel.asm	/^f0101268:	e8 18 ee ff ff       	call   f0100085 <_panic>$/;"	l
f010126d	obj/kern/kernel.asm	/^f010126d:	3d 00 f0 0f 00       	cmp    $0xff000,%eax$/;"	l
f0101272	obj/kern/kernel.asm	/^f0101272:	75 31                	jne    f01012a5 <check_page_free_list+0x27c>$/;"	l
f0101274	obj/kern/kernel.asm	/^f0101274:	c7 44 24 0c bc 6f 10 	movl   $0xf0106fbc,0xc(%esp)$/;"	l
f010127b	obj/kern/kernel.asm	/^f010127b:	f0 $/;"	l
f010127c	obj/kern/kernel.asm	/^f010127c:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0101283	obj/kern/kernel.asm	/^f0101283:	f0 $/;"	l
f0101284	obj/kern/kernel.asm	/^f0101284:	c7 44 24 04 13 03 00 	movl   $0x313,0x4(%esp)$/;"	l
f010128b	obj/kern/kernel.asm	/^f010128b:	00 $/;"	l
f010128c	obj/kern/kernel.asm	/^f010128c:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0101293	obj/kern/kernel.asm	/^f0101293:	e8 ed ed ff ff       	call   f0100085 <_panic>$/;"	l
f0101298	obj/kern/kernel.asm	/^f0101298:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f010129d	obj/kern/kernel.asm	/^f010129d:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f01012a2	obj/kern/kernel.asm	/^f01012a2:	89 5d b4             	mov    %ebx,-0x4c(%ebp)$/;"	l
f01012a5	obj/kern/kernel.asm	/^f01012a5:	3d 00 00 10 00       	cmp    $0x100000,%eax$/;"	l
f01012aa	obj/kern/kernel.asm	/^f01012aa:	75 24                	jne    f01012d0 <check_page_free_list+0x2a7>$/;"	l
f01012ac	obj/kern/kernel.asm	/^f01012ac:	c7 44 24 0c fa 76 10 	movl   $0xf01076fa,0xc(%esp)$/;"	l
f01012b3	obj/kern/kernel.asm	/^f01012b3:	f0 $/;"	l
f01012b4	obj/kern/kernel.asm	/^f01012b4:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f01012bb	obj/kern/kernel.asm	/^f01012bb:	f0 $/;"	l
f01012bc	obj/kern/kernel.asm	/^f01012bc:	c7 44 24 04 14 03 00 	movl   $0x314,0x4(%esp)$/;"	l
f01012c3	obj/kern/kernel.asm	/^f01012c3:	00 $/;"	l
f01012c4	obj/kern/kernel.asm	/^f01012c4:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f01012cb	obj/kern/kernel.asm	/^f01012cb:	e8 b5 ed ff ff       	call   f0100085 <_panic>$/;"	l
f01012d0	obj/kern/kernel.asm	/^f01012d0:	89 c1                	mov    %eax,%ecx$/;"	l
f01012d2	obj/kern/kernel.asm	/^f01012d2:	3d ff ff 0f 00       	cmp    $0xfffff,%eax$/;"	l
f01012d7	obj/kern/kernel.asm	/^f01012d7:	76 59                	jbe    f0101332 <check_page_free_list+0x309>$/;"	l
f01012d9	obj/kern/kernel.asm	/^f01012d9:	89 c3                	mov    %eax,%ebx$/;"	l
f01012db	obj/kern/kernel.asm	/^f01012db:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f01012de	obj/kern/kernel.asm	/^f01012de:	39 5d c8             	cmp    %ebx,-0x38(%ebp)$/;"	l
f01012e1	obj/kern/kernel.asm	/^f01012e1:	77 20                	ja     f0101303 <check_page_free_list+0x2da>$/;"	l
f01012e3	obj/kern/kernel.asm	/^f01012e3:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01012e7	obj/kern/kernel.asm	/^f01012e7:	c7 44 24 08 8c 6a 10 	movl   $0xf0106a8c,0x8(%esp)$/;"	l
f01012ee	obj/kern/kernel.asm	/^f01012ee:	f0 $/;"	l
f01012ef	obj/kern/kernel.asm	/^f01012ef:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f01012f6	obj/kern/kernel.asm	/^f01012f6:	00 $/;"	l
f01012f7	obj/kern/kernel.asm	/^f01012f7:	c7 04 24 8d 76 10 f0 	movl   $0xf010768d,(%esp)$/;"	l
f01012fe	obj/kern/kernel.asm	/^f01012fe:	e8 82 ed ff ff       	call   f0100085 <_panic>$/;"	l
f0101303	obj/kern/kernel.asm	/^f0101303:	8d 98 00 00 00 f0    	lea    -0x10000000(%eax),%ebx$/;"	l
f0101309	obj/kern/kernel.asm	/^f0101309:	39 5d c4             	cmp    %ebx,-0x3c(%ebp)$/;"	l
f010130c	obj/kern/kernel.asm	/^f010130c:	76 24                	jbe    f0101332 <check_page_free_list+0x309>$/;"	l
f010130e	obj/kern/kernel.asm	/^f010130e:	c7 44 24 0c e0 6f 10 	movl   $0xf0106fe0,0xc(%esp)$/;"	l
f0101315	obj/kern/kernel.asm	/^f0101315:	f0 $/;"	l
f0101316	obj/kern/kernel.asm	/^f0101316:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f010131d	obj/kern/kernel.asm	/^f010131d:	f0 $/;"	l
f010131e	obj/kern/kernel.asm	/^f010131e:	c7 44 24 04 15 03 00 	movl   $0x315,0x4(%esp)$/;"	l
f0101325	obj/kern/kernel.asm	/^f0101325:	00 $/;"	l
f0101326	obj/kern/kernel.asm	/^f0101326:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f010132d	obj/kern/kernel.asm	/^f010132d:	e8 53 ed ff ff       	call   f0100085 <_panic>$/;"	l
f0101332	obj/kern/kernel.asm	/^f0101332:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f0101337	obj/kern/kernel.asm	/^f0101337:	75 24                	jne    f010135d <check_page_free_list+0x334>$/;"	l
f0101339	obj/kern/kernel.asm	/^f0101339:	c7 44 24 0c 14 77 10 	movl   $0xf0107714,0xc(%esp)$/;"	l
f0101340	obj/kern/kernel.asm	/^f0101340:	f0 $/;"	l
f0101341	obj/kern/kernel.asm	/^f0101341:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0101348	obj/kern/kernel.asm	/^f0101348:	f0 $/;"	l
f0101349	obj/kern/kernel.asm	/^f0101349:	c7 44 24 04 17 03 00 	movl   $0x317,0x4(%esp)$/;"	l
f0101350	obj/kern/kernel.asm	/^f0101350:	00 $/;"	l
f0101351	obj/kern/kernel.asm	/^f0101351:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0101358	obj/kern/kernel.asm	/^f0101358:	e8 28 ed ff ff       	call   f0100085 <_panic>$/;"	l
f010135d	obj/kern/kernel.asm	/^f010135d:	81 f9 ff ff 0f 00    	cmp    $0xfffff,%ecx$/;"	l
f0101363	obj/kern/kernel.asm	/^f0101363:	77 05                	ja     f010136a <check_page_free_list+0x341>$/;"	l
f0101365	obj/kern/kernel.asm	/^f0101365:	83 c7 01             	add    $0x1,%edi$/;"	l
f0101368	obj/kern/kernel.asm	/^f0101368:	eb 03                	jmp    f010136d <check_page_free_list+0x344>$/;"	l
f010136a	obj/kern/kernel.asm	/^f010136a:	83 c6 01             	add    $0x1,%esi$/;"	l
f010136d	obj/kern/kernel.asm	/^f010136d:	8b 12                	mov    (%edx),%edx$/;"	l
f010136f	obj/kern/kernel.asm	/^f010136f:	85 d2                	test   %edx,%edx$/;"	l
f0101371	obj/kern/kernel.asm	/^f0101371:	0f 85 1e fe ff ff    	jne    f0101195 <check_page_free_list+0x16c>$/;"	l
f0101377	obj/kern/kernel.asm	/^f0101377:	85 ff                	test   %edi,%edi$/;"	l
f0101379	obj/kern/kernel.asm	/^f0101379:	7f 24                	jg     f010139f <check_page_free_list+0x376>$/;"	l
f010137b	obj/kern/kernel.asm	/^f010137b:	c7 44 24 0c 31 77 10 	movl   $0xf0107731,0xc(%esp)$/;"	l
f0101382	obj/kern/kernel.asm	/^f0101382:	f0 $/;"	l
f0101383	obj/kern/kernel.asm	/^f0101383:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f010138a	obj/kern/kernel.asm	/^f010138a:	f0 $/;"	l
f010138b	obj/kern/kernel.asm	/^f010138b:	c7 44 24 04 1f 03 00 	movl   $0x31f,0x4(%esp)$/;"	l
f0101392	obj/kern/kernel.asm	/^f0101392:	00 $/;"	l
f0101393	obj/kern/kernel.asm	/^f0101393:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f010139a	obj/kern/kernel.asm	/^f010139a:	e8 e6 ec ff ff       	call   f0100085 <_panic>$/;"	l
f010139f	obj/kern/kernel.asm	/^f010139f:	85 f6                	test   %esi,%esi$/;"	l
f01013a1	obj/kern/kernel.asm	/^f01013a1:	7f 24                	jg     f01013c7 <check_page_free_list+0x39e>$/;"	l
f01013a3	obj/kern/kernel.asm	/^f01013a3:	c7 44 24 0c 43 77 10 	movl   $0xf0107743,0xc(%esp)$/;"	l
f01013aa	obj/kern/kernel.asm	/^f01013aa:	f0 $/;"	l
f01013ab	obj/kern/kernel.asm	/^f01013ab:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f01013b2	obj/kern/kernel.asm	/^f01013b2:	f0 $/;"	l
f01013b3	obj/kern/kernel.asm	/^f01013b3:	c7 44 24 04 20 03 00 	movl   $0x320,0x4(%esp)$/;"	l
f01013ba	obj/kern/kernel.asm	/^f01013ba:	00 $/;"	l
f01013bb	obj/kern/kernel.asm	/^f01013bb:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f01013c2	obj/kern/kernel.asm	/^f01013c2:	e8 be ec ff ff       	call   f0100085 <_panic>$/;"	l
f01013c7	obj/kern/kernel.asm	/^f01013c7:	83 c4 5c             	add    $0x5c,%esp$/;"	l
f01013ca	obj/kern/kernel.asm	/^f01013ca:	5b                   	pop    %ebx$/;"	l
f01013cb	obj/kern/kernel.asm	/^f01013cb:	5e                   	pop    %esi$/;"	l
f01013cc	obj/kern/kernel.asm	/^f01013cc:	5f                   	pop    %edi$/;"	l
f01013cd	obj/kern/kernel.asm	/^f01013cd:	5d                   	pop    %ebp$/;"	l
f01013ce	obj/kern/kernel.asm	/^f01013ce:	c3                   	ret    $/;"	l
f01013cf	obj/kern/kernel.asm	/^f01013cf <page_alloc_4pages>:$/;"	l
f01013cf	obj/kern/kernel.asm	/^f01013cf:	55                   	push   %ebp$/;"	l
f01013d0	obj/kern/kernel.asm	/^f01013d0:	89 e5                	mov    %esp,%ebp$/;"	l
f01013d2	obj/kern/kernel.asm	/^f01013d2:	57                   	push   %edi$/;"	l
f01013d3	obj/kern/kernel.asm	/^f01013d3:	56                   	push   %esi$/;"	l
f01013d4	obj/kern/kernel.asm	/^f01013d4:	53                   	push   %ebx$/;"	l
f01013d5	obj/kern/kernel.asm	/^f01013d5:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01013d8	obj/kern/kernel.asm	/^f01013d8:	a1 30 c2 22 f0       	mov    0xf022c230,%eax$/;"	l
f01013dd	obj/kern/kernel.asm	/^f01013dd:	8b 10                	mov    (%eax),%edx$/;"	l
f01013df	obj/kern/kernel.asm	/^f01013df:	8b 12                	mov    (%edx),%edx$/;"	l
f01013e1	obj/kern/kernel.asm	/^f01013e1:	8b 1a                	mov    (%edx),%ebx$/;"	l
f01013e3	obj/kern/kernel.asm	/^f01013e3:	85 db                	test   %ebx,%ebx$/;"	l
f01013e5	obj/kern/kernel.asm	/^f01013e5:	0f 84 0f 01 00 00    	je     f01014fa <page_alloc_4pages+0x12b>$/;"	l
f01013eb	obj/kern/kernel.asm	/^f01013eb:	89 da                	mov    %ebx,%edx$/;"	l
f01013ed	obj/kern/kernel.asm	/^f01013ed:	29 c2                	sub    %eax,%edx$/;"	l
f01013ef	obj/kern/kernel.asm	/^f01013ef:	83 ea 18             	sub    $0x18,%edx$/;"	l
f01013f2	obj/kern/kernel.asm	/^f01013f2:	89 c6                	mov    %eax,%esi$/;"	l
f01013f4	obj/kern/kernel.asm	/^f01013f4:	83 fa 07             	cmp    $0x7,%edx$/;"	l
f01013f7	obj/kern/kernel.asm	/^f01013f7:	76 18                	jbe    f0101411 <page_alloc_4pages+0x42>$/;"	l
f01013f9	obj/kern/kernel.asm	/^f01013f9:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f01013fb	obj/kern/kernel.asm	/^f01013fb:	8b 36                	mov    (%esi),%esi$/;"	l
f01013fd	obj/kern/kernel.asm	/^f01013fd:	85 db                	test   %ebx,%ebx$/;"	l
f01013ff	obj/kern/kernel.asm	/^f01013ff:	0f 84 f5 00 00 00    	je     f01014fa <page_alloc_4pages+0x12b>$/;"	l
f0101405	obj/kern/kernel.asm	/^f0101405:	89 d8                	mov    %ebx,%eax$/;"	l
f0101407	obj/kern/kernel.asm	/^f0101407:	29 f0                	sub    %esi,%eax$/;"	l
f0101409	obj/kern/kernel.asm	/^f0101409:	83 e8 18             	sub    $0x18,%eax$/;"	l
f010140c	obj/kern/kernel.asm	/^f010140c:	83 f8 07             	cmp    $0x7,%eax$/;"	l
f010140f	obj/kern/kernel.asm	/^f010140f:	77 e8                	ja     f01013f9 <page_alloc_4pages+0x2a>$/;"	l
f0101411	obj/kern/kernel.asm	/^f0101411:	89 f0                	mov    %esi,%eax$/;"	l
f0101413	obj/kern/kernel.asm	/^f0101413:	f6 45 08 01          	testb  $0x1,0x8(%ebp)$/;"	l
f0101417	obj/kern/kernel.asm	/^f0101417:	0f 84 e2 00 00 00    	je     f01014ff <page_alloc_4pages+0x130>$/;"	l
f010141d	obj/kern/kernel.asm	/^f010141d:	89 f7                	mov    %esi,%edi$/;"	l
f010141f	obj/kern/kernel.asm	/^f010141f:	39 f3                	cmp    %esi,%ebx$/;"	l
f0101421	obj/kern/kernel.asm	/^f0101421:	74 7b                	je     f010149e <page_alloc_4pages+0xcf>$/;"	l
f0101423	obj/kern/kernel.asm	/^f0101423:	2b 05 f0 ce 22 f0    	sub    0xf022cef0,%eax$/;"	l
f0101429	obj/kern/kernel.asm	/^f0101429:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010142c	obj/kern/kernel.asm	/^f010142c:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010142f	obj/kern/kernel.asm	/^f010142f:	89 c2                	mov    %eax,%edx$/;"	l
f0101431	obj/kern/kernel.asm	/^f0101431:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101434	obj/kern/kernel.asm	/^f0101434:	3b 15 e8 ce 22 f0    	cmp    0xf022cee8,%edx$/;"	l
f010143a	obj/kern/kernel.asm	/^f010143a:	72 3d                	jb     f0101479 <page_alloc_4pages+0xaa>$/;"	l
f010143c	obj/kern/kernel.asm	/^f010143c:	eb 1b                	jmp    f0101459 <page_alloc_4pages+0x8a>$/;"	l
f010143e	obj/kern/kernel.asm	/^f010143e:	89 f8                	mov    %edi,%eax$/;"	l
f0101440	obj/kern/kernel.asm	/^f0101440:	2b 05 f0 ce 22 f0    	sub    0xf022cef0,%eax$/;"	l
f0101446	obj/kern/kernel.asm	/^f0101446:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101449	obj/kern/kernel.asm	/^f0101449:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010144c	obj/kern/kernel.asm	/^f010144c:	89 c2                	mov    %eax,%edx$/;"	l
f010144e	obj/kern/kernel.asm	/^f010144e:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101451	obj/kern/kernel.asm	/^f0101451:	3b 15 e8 ce 22 f0    	cmp    0xf022cee8,%edx$/;"	l
f0101457	obj/kern/kernel.asm	/^f0101457:	72 22                	jb     f010147b <page_alloc_4pages+0xac>$/;"	l
f0101459	obj/kern/kernel.asm	/^f0101459:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010145d	obj/kern/kernel.asm	/^f010145d:	c7 44 24 08 8c 6a 10 	movl   $0xf0106a8c,0x8(%esp)$/;"	l
f0101464	obj/kern/kernel.asm	/^f0101464:	f0 $/;"	l
f0101465	obj/kern/kernel.asm	/^f0101465:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f010146c	obj/kern/kernel.asm	/^f010146c:	00 $/;"	l
f010146d	obj/kern/kernel.asm	/^f010146d:	c7 04 24 8d 76 10 f0 	movl   $0xf010768d,(%esp)$/;"	l
f0101474	obj/kern/kernel.asm	/^f0101474:	e8 0c ec ff ff       	call   f0100085 <_panic>$/;"	l
f0101479	obj/kern/kernel.asm	/^f0101479:	89 f7                	mov    %esi,%edi$/;"	l
f010147b	obj/kern/kernel.asm	/^f010147b:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101482	obj/kern/kernel.asm	/^f0101482:	00 $/;"	l
f0101483	obj/kern/kernel.asm	/^f0101483:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010148a	obj/kern/kernel.asm	/^f010148a:	00 $/;"	l
f010148b	obj/kern/kernel.asm	/^f010148b:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101490	obj/kern/kernel.asm	/^f0101490:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101493	obj/kern/kernel.asm	/^f0101493:	e8 6e 47 00 00       	call   f0105c06 <memset>$/;"	l
f0101498	obj/kern/kernel.asm	/^f0101498:	8b 3f                	mov    (%edi),%edi$/;"	l
f010149a	obj/kern/kernel.asm	/^f010149a:	39 df                	cmp    %ebx,%edi$/;"	l
f010149c	obj/kern/kernel.asm	/^f010149c:	75 a0                	jne    f010143e <page_alloc_4pages+0x6f>$/;"	l
f010149e	obj/kern/kernel.asm	/^f010149e:	2b 3d f0 ce 22 f0    	sub    0xf022cef0,%edi$/;"	l
f01014a4	obj/kern/kernel.asm	/^f01014a4:	c1 ff 03             	sar    $0x3,%edi$/;"	l
f01014a7	obj/kern/kernel.asm	/^f01014a7:	89 f8                	mov    %edi,%eax$/;"	l
f01014a9	obj/kern/kernel.asm	/^f01014a9:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01014ac	obj/kern/kernel.asm	/^f01014ac:	89 c2                	mov    %eax,%edx$/;"	l
f01014ae	obj/kern/kernel.asm	/^f01014ae:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01014b1	obj/kern/kernel.asm	/^f01014b1:	3b 15 e8 ce 22 f0    	cmp    0xf022cee8,%edx$/;"	l
f01014b7	obj/kern/kernel.asm	/^f01014b7:	72 20                	jb     f01014d9 <page_alloc_4pages+0x10a>$/;"	l
f01014b9	obj/kern/kernel.asm	/^f01014b9:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01014bd	obj/kern/kernel.asm	/^f01014bd:	c7 44 24 08 8c 6a 10 	movl   $0xf0106a8c,0x8(%esp)$/;"	l
f01014c4	obj/kern/kernel.asm	/^f01014c4:	f0 $/;"	l
f01014c5	obj/kern/kernel.asm	/^f01014c5:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f01014cc	obj/kern/kernel.asm	/^f01014cc:	00 $/;"	l
f01014cd	obj/kern/kernel.asm	/^f01014cd:	c7 04 24 8d 76 10 f0 	movl   $0xf010768d,(%esp)$/;"	l
f01014d4	obj/kern/kernel.asm	/^f01014d4:	e8 ac eb ff ff       	call   f0100085 <_panic>$/;"	l
f01014d9	obj/kern/kernel.asm	/^f01014d9:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01014e0	obj/kern/kernel.asm	/^f01014e0:	00 $/;"	l
f01014e1	obj/kern/kernel.asm	/^f01014e1:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01014e8	obj/kern/kernel.asm	/^f01014e8:	00 $/;"	l
f01014e9	obj/kern/kernel.asm	/^f01014e9:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01014ee	obj/kern/kernel.asm	/^f01014ee:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01014f1	obj/kern/kernel.asm	/^f01014f1:	e8 10 47 00 00       	call   f0105c06 <memset>$/;"	l
f01014f6	obj/kern/kernel.asm	/^f01014f6:	89 f0                	mov    %esi,%eax$/;"	l
f01014f8	obj/kern/kernel.asm	/^f01014f8:	eb 05                	jmp    f01014ff <page_alloc_4pages+0x130>$/;"	l
f01014fa	obj/kern/kernel.asm	/^f01014fa:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01014ff	obj/kern/kernel.asm	/^f01014ff:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0101502	obj/kern/kernel.asm	/^f0101502:	5b                   	pop    %ebx$/;"	l
f0101503	obj/kern/kernel.asm	/^f0101503:	5e                   	pop    %esi$/;"	l
f0101504	obj/kern/kernel.asm	/^f0101504:	5f                   	pop    %edi$/;"	l
f0101505	obj/kern/kernel.asm	/^f0101505:	5d                   	pop    %ebp$/;"	l
f0101506	obj/kern/kernel.asm	/^f0101506:	c3                   	ret    $/;"	l
f0101507	obj/kern/kernel.asm	/^f0101507 <page_alloc>:$/;"	l
f0101507	obj/kern/kernel.asm	/^f0101507:	55                   	push   %ebp$/;"	l
f0101508	obj/kern/kernel.asm	/^f0101508:	89 e5                	mov    %esp,%ebp$/;"	l
f010150a	obj/kern/kernel.asm	/^f010150a:	53                   	push   %ebx$/;"	l
f010150b	obj/kern/kernel.asm	/^f010150b:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010150e	obj/kern/kernel.asm	/^f010150e:	8b 1d 30 c2 22 f0    	mov    0xf022c230,%ebx$/;"	l
f0101514	obj/kern/kernel.asm	/^f0101514:	85 db                	test   %ebx,%ebx$/;"	l
f0101516	obj/kern/kernel.asm	/^f0101516:	74 65                	je     f010157d <page_alloc+0x76>$/;"	l
f0101518	obj/kern/kernel.asm	/^f0101518:	8b 03                	mov    (%ebx),%eax$/;"	l
f010151a	obj/kern/kernel.asm	/^f010151a:	a3 30 c2 22 f0       	mov    %eax,0xf022c230$/;"	l
f010151f	obj/kern/kernel.asm	/^f010151f:	f6 45 08 01          	testb  $0x1,0x8(%ebp)$/;"	l
f0101523	obj/kern/kernel.asm	/^f0101523:	74 58                	je     f010157d <page_alloc+0x76>$/;"	l
f0101525	obj/kern/kernel.asm	/^f0101525:	89 d8                	mov    %ebx,%eax$/;"	l
f0101527	obj/kern/kernel.asm	/^f0101527:	2b 05 f0 ce 22 f0    	sub    0xf022cef0,%eax$/;"	l
f010152d	obj/kern/kernel.asm	/^f010152d:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101530	obj/kern/kernel.asm	/^f0101530:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101533	obj/kern/kernel.asm	/^f0101533:	89 c2                	mov    %eax,%edx$/;"	l
f0101535	obj/kern/kernel.asm	/^f0101535:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101538	obj/kern/kernel.asm	/^f0101538:	3b 15 e8 ce 22 f0    	cmp    0xf022cee8,%edx$/;"	l
f010153e	obj/kern/kernel.asm	/^f010153e:	72 20                	jb     f0101560 <page_alloc+0x59>$/;"	l
f0101540	obj/kern/kernel.asm	/^f0101540:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101544	obj/kern/kernel.asm	/^f0101544:	c7 44 24 08 8c 6a 10 	movl   $0xf0106a8c,0x8(%esp)$/;"	l
f010154b	obj/kern/kernel.asm	/^f010154b:	f0 $/;"	l
f010154c	obj/kern/kernel.asm	/^f010154c:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f0101553	obj/kern/kernel.asm	/^f0101553:	00 $/;"	l
f0101554	obj/kern/kernel.asm	/^f0101554:	c7 04 24 8d 76 10 f0 	movl   $0xf010768d,(%esp)$/;"	l
f010155b	obj/kern/kernel.asm	/^f010155b:	e8 25 eb ff ff       	call   f0100085 <_panic>$/;"	l
f0101560	obj/kern/kernel.asm	/^f0101560:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101567	obj/kern/kernel.asm	/^f0101567:	00 $/;"	l
f0101568	obj/kern/kernel.asm	/^f0101568:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010156f	obj/kern/kernel.asm	/^f010156f:	00 $/;"	l
f0101570	obj/kern/kernel.asm	/^f0101570:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101575	obj/kern/kernel.asm	/^f0101575:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101578	obj/kern/kernel.asm	/^f0101578:	e8 89 46 00 00       	call   f0105c06 <memset>$/;"	l
f010157d	obj/kern/kernel.asm	/^f010157d:	89 d8                	mov    %ebx,%eax$/;"	l
f010157f	obj/kern/kernel.asm	/^f010157f:	83 c4 14             	add    $0x14,%esp$/;"	l
f0101582	obj/kern/kernel.asm	/^f0101582:	5b                   	pop    %ebx$/;"	l
f0101583	obj/kern/kernel.asm	/^f0101583:	5d                   	pop    %ebp$/;"	l
f0101584	obj/kern/kernel.asm	/^f0101584:	c3                   	ret    $/;"	l
f0101585	obj/kern/kernel.asm	/^f0101585 <pgdir_walk>:$/;"	l
f0101585	obj/kern/kernel.asm	/^f0101585:	55                   	push   %ebp$/;"	l
f0101586	obj/kern/kernel.asm	/^f0101586:	89 e5                	mov    %esp,%ebp$/;"	l
f0101588	obj/kern/kernel.asm	/^f0101588:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010158b	obj/kern/kernel.asm	/^f010158b:	89 5d f8             	mov    %ebx,-0x8(%ebp)$/;"	l
f010158e	obj/kern/kernel.asm	/^f010158e:	89 75 fc             	mov    %esi,-0x4(%ebp)$/;"	l
f0101591	obj/kern/kernel.asm	/^f0101591:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101594	obj/kern/kernel.asm	/^f0101594:	85 c0                	test   %eax,%eax$/;"	l
f0101596	obj/kern/kernel.asm	/^f0101596:	75 1c                	jne    f01015b4 <pgdir_walk+0x2f>$/;"	l
f0101598	obj/kern/kernel.asm	/^f0101598:	c7 44 24 08 54 77 10 	movl   $0xf0107754,0x8(%esp)$/;"	l
f010159f	obj/kern/kernel.asm	/^f010159f:	f0 $/;"	l
f01015a0	obj/kern/kernel.asm	/^f01015a0:	c7 44 24 04 ec 01 00 	movl   $0x1ec,0x4(%esp)$/;"	l
f01015a7	obj/kern/kernel.asm	/^f01015a7:	00 $/;"	l
f01015a8	obj/kern/kernel.asm	/^f01015a8:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f01015af	obj/kern/kernel.asm	/^f01015af:	e8 d1 ea ff ff       	call   f0100085 <_panic>$/;"	l
f01015b4	obj/kern/kernel.asm	/^f01015b4:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01015b7	obj/kern/kernel.asm	/^f01015b7:	89 da                	mov    %ebx,%edx$/;"	l
f01015b9	obj/kern/kernel.asm	/^f01015b9:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f01015bc	obj/kern/kernel.asm	/^f01015bc:	8d 34 90             	lea    (%eax,%edx,4),%esi$/;"	l
f01015bf	obj/kern/kernel.asm	/^f01015bf:	8b 06                	mov    (%esi),%eax$/;"	l
f01015c1	obj/kern/kernel.asm	/^f01015c1:	a8 01                	test   $0x1,%al$/;"	l
f01015c3	obj/kern/kernel.asm	/^f01015c3:	74 47                	je     f010160c <pgdir_walk+0x87>$/;"	l
f01015c5	obj/kern/kernel.asm	/^f01015c5:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01015ca	obj/kern/kernel.asm	/^f01015ca:	89 c2                	mov    %eax,%edx$/;"	l
f01015cc	obj/kern/kernel.asm	/^f01015cc:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01015cf	obj/kern/kernel.asm	/^f01015cf:	3b 15 e8 ce 22 f0    	cmp    0xf022cee8,%edx$/;"	l
f01015d5	obj/kern/kernel.asm	/^f01015d5:	72 20                	jb     f01015f7 <pgdir_walk+0x72>$/;"	l
f01015d7	obj/kern/kernel.asm	/^f01015d7:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01015db	obj/kern/kernel.asm	/^f01015db:	c7 44 24 08 8c 6a 10 	movl   $0xf0106a8c,0x8(%esp)$/;"	l
f01015e2	obj/kern/kernel.asm	/^f01015e2:	f0 $/;"	l
f01015e3	obj/kern/kernel.asm	/^f01015e3:	c7 44 24 04 f1 01 00 	movl   $0x1f1,0x4(%esp)$/;"	l
f01015ea	obj/kern/kernel.asm	/^f01015ea:	00 $/;"	l
f01015eb	obj/kern/kernel.asm	/^f01015eb:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f01015f2	obj/kern/kernel.asm	/^f01015f2:	e8 8e ea ff ff       	call   f0100085 <_panic>$/;"	l
f01015f7	obj/kern/kernel.asm	/^f01015f7:	c1 eb 0a             	shr    $0xa,%ebx$/;"	l
f01015fa	obj/kern/kernel.asm	/^f01015fa:	81 e3 fc 0f 00 00    	and    $0xffc,%ebx$/;"	l
f0101600	obj/kern/kernel.asm	/^f0101600:	8d 84 18 00 00 00 f0 	lea    -0x10000000(%eax,%ebx,1),%eax$/;"	l
f0101607	obj/kern/kernel.asm	/^f0101607:	e9 80 00 00 00       	jmp    f010168c <pgdir_walk+0x107>$/;"	l
f010160c	obj/kern/kernel.asm	/^f010160c:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f0101610	obj/kern/kernel.asm	/^f0101610:	74 75                	je     f0101687 <pgdir_walk+0x102>$/;"	l
f0101612	obj/kern/kernel.asm	/^f0101612:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0101619	obj/kern/kernel.asm	/^f0101619:	e8 e9 fe ff ff       	call   f0101507 <page_alloc>$/;"	l
f010161e	obj/kern/kernel.asm	/^f010161e:	85 c0                	test   %eax,%eax$/;"	l
f0101620	obj/kern/kernel.asm	/^f0101620:	74 65                	je     f0101687 <pgdir_walk+0x102>$/;"	l
f0101622	obj/kern/kernel.asm	/^f0101622:	66 83 40 04 01       	addw   $0x1,0x4(%eax)$/;"	l
f0101627	obj/kern/kernel.asm	/^f0101627:	89 c2                	mov    %eax,%edx$/;"	l
f0101629	obj/kern/kernel.asm	/^f0101629:	2b 15 f0 ce 22 f0    	sub    0xf022cef0,%edx$/;"	l
f010162f	obj/kern/kernel.asm	/^f010162f:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101632	obj/kern/kernel.asm	/^f0101632:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101635	obj/kern/kernel.asm	/^f0101635:	83 ca 07             	or     $0x7,%edx$/;"	l
f0101638	obj/kern/kernel.asm	/^f0101638:	89 16                	mov    %edx,(%esi)$/;"	l
f010163a	obj/kern/kernel.asm	/^f010163a:	2b 05 f0 ce 22 f0    	sub    0xf022cef0,%eax$/;"	l
f0101640	obj/kern/kernel.asm	/^f0101640:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101643	obj/kern/kernel.asm	/^f0101643:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101646	obj/kern/kernel.asm	/^f0101646:	89 c2                	mov    %eax,%edx$/;"	l
f0101648	obj/kern/kernel.asm	/^f0101648:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010164b	obj/kern/kernel.asm	/^f010164b:	3b 15 e8 ce 22 f0    	cmp    0xf022cee8,%edx$/;"	l
f0101651	obj/kern/kernel.asm	/^f0101651:	72 20                	jb     f0101673 <pgdir_walk+0xee>$/;"	l
f0101653	obj/kern/kernel.asm	/^f0101653:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101657	obj/kern/kernel.asm	/^f0101657:	c7 44 24 08 8c 6a 10 	movl   $0xf0106a8c,0x8(%esp)$/;"	l
f010165e	obj/kern/kernel.asm	/^f010165e:	f0 $/;"	l
f010165f	obj/kern/kernel.asm	/^f010165f:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f0101666	obj/kern/kernel.asm	/^f0101666:	00 $/;"	l
f0101667	obj/kern/kernel.asm	/^f0101667:	c7 04 24 8d 76 10 f0 	movl   $0xf010768d,(%esp)$/;"	l
f010166e	obj/kern/kernel.asm	/^f010166e:	e8 12 ea ff ff       	call   f0100085 <_panic>$/;"	l
f0101673	obj/kern/kernel.asm	/^f0101673:	c1 eb 0a             	shr    $0xa,%ebx$/;"	l
f0101676	obj/kern/kernel.asm	/^f0101676:	89 da                	mov    %ebx,%edx$/;"	l
f0101678	obj/kern/kernel.asm	/^f0101678:	81 e2 fc 0f 00 00    	and    $0xffc,%edx$/;"	l
f010167e	obj/kern/kernel.asm	/^f010167e:	8d 84 10 00 00 00 f0 	lea    -0x10000000(%eax,%edx,1),%eax$/;"	l
f0101685	obj/kern/kernel.asm	/^f0101685:	eb 05                	jmp    f010168c <pgdir_walk+0x107>$/;"	l
f0101687	obj/kern/kernel.asm	/^f0101687:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010168c	obj/kern/kernel.asm	/^f010168c:	8b 5d f8             	mov    -0x8(%ebp),%ebx$/;"	l
f010168f	obj/kern/kernel.asm	/^f010168f:	8b 75 fc             	mov    -0x4(%ebp),%esi$/;"	l
f0101692	obj/kern/kernel.asm	/^f0101692:	89 ec                	mov    %ebp,%esp$/;"	l
f0101694	obj/kern/kernel.asm	/^f0101694:	5d                   	pop    %ebp$/;"	l
f0101695	obj/kern/kernel.asm	/^f0101695:	c3                   	ret    $/;"	l
f0101696	obj/kern/kernel.asm	/^f0101696 <user_mem_check>:$/;"	l
f0101696	obj/kern/kernel.asm	/^f0101696:	55                   	push   %ebp$/;"	l
f0101697	obj/kern/kernel.asm	/^f0101697:	89 e5                	mov    %esp,%ebp$/;"	l
f0101699	obj/kern/kernel.asm	/^f0101699:	57                   	push   %edi$/;"	l
f010169a	obj/kern/kernel.asm	/^f010169a:	56                   	push   %esi$/;"	l
f010169b	obj/kern/kernel.asm	/^f010169b:	53                   	push   %ebx$/;"	l
f010169c	obj/kern/kernel.asm	/^f010169c:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f010169f	obj/kern/kernel.asm	/^f010169f:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01016a2	obj/kern/kernel.asm	/^f01016a2:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01016a5	obj/kern/kernel.asm	/^f01016a5:	89 df                	mov    %ebx,%edi$/;"	l
f01016a7	obj/kern/kernel.asm	/^f01016a7:	03 7d 10             	add    0x10(%ebp),%edi$/;"	l
f01016aa	obj/kern/kernel.asm	/^f01016aa:	81 c7 ff 0f 00 00    	add    $0xfff,%edi$/;"	l
f01016b0	obj/kern/kernel.asm	/^f01016b0:	81 e7 00 f0 ff ff    	and    $0xfffff000,%edi$/;"	l
f01016b6	obj/kern/kernel.asm	/^f01016b6:	39 fb                	cmp    %edi,%ebx$/;"	l
f01016b8	obj/kern/kernel.asm	/^f01016b8:	0f 83 b2 00 00 00    	jae    f0101770 <user_mem_check+0xda>$/;"	l
f01016be	obj/kern/kernel.asm	/^f01016be:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebx$/;"	l
f01016c4	obj/kern/kernel.asm	/^f01016c4:	76 1c                	jbe    f01016e2 <user_mem_check+0x4c>$/;"	l
f01016c6	obj/kern/kernel.asm	/^f01016c6:	eb 0a                	jmp    f01016d2 <user_mem_check+0x3c>$/;"	l
f01016c8	obj/kern/kernel.asm	/^f01016c8:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebx$/;"	l
f01016ce	obj/kern/kernel.asm	/^f01016ce:	66 90                	xchg   %ax,%ax$/;"	l
f01016d0	obj/kern/kernel.asm	/^f01016d0:	76 19                	jbe    f01016eb <user_mem_check+0x55>$/;"	l
f01016d2	obj/kern/kernel.asm	/^f01016d2:	89 1d 3c c2 22 f0    	mov    %ebx,0xf022c23c$/;"	l
f01016d8	obj/kern/kernel.asm	/^f01016d8:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f01016dd	obj/kern/kernel.asm	/^f01016dd:	e9 93 00 00 00       	jmp    f0101775 <user_mem_check+0xdf>$/;"	l
f01016e2	obj/kern/kernel.asm	/^f01016e2:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01016e5	obj/kern/kernel.asm	/^f01016e5:	83 e0 02             	and    $0x2,%eax$/;"	l
f01016e8	obj/kern/kernel.asm	/^f01016e8:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01016eb	obj/kern/kernel.asm	/^f01016eb:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01016f2	obj/kern/kernel.asm	/^f01016f2:	00 $/;"	l
f01016f3	obj/kern/kernel.asm	/^f01016f3:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01016f7	obj/kern/kernel.asm	/^f01016f7:	8b 46 60             	mov    0x60(%esi),%eax$/;"	l
f01016fa	obj/kern/kernel.asm	/^f01016fa:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01016fd	obj/kern/kernel.asm	/^f01016fd:	e8 83 fe ff ff       	call   f0101585 <pgdir_walk>$/;"	l
f0101702	obj/kern/kernel.asm	/^f0101702:	85 c0                	test   %eax,%eax$/;"	l
f0101704	obj/kern/kernel.asm	/^f0101704:	75 0d                	jne    f0101713 <user_mem_check+0x7d>$/;"	l
f0101706	obj/kern/kernel.asm	/^f0101706:	89 1d 3c c2 22 f0    	mov    %ebx,0xf022c23c$/;"	l
f010170c	obj/kern/kernel.asm	/^f010170c:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f0101711	obj/kern/kernel.asm	/^f0101711:	eb 62                	jmp    f0101775 <user_mem_check+0xdf>$/;"	l
f0101713	obj/kern/kernel.asm	/^f0101713:	8b 00                	mov    (%eax),%eax$/;"	l
f0101715	obj/kern/kernel.asm	/^f0101715:	89 c2                	mov    %eax,%edx$/;"	l
f0101717	obj/kern/kernel.asm	/^f0101717:	81 e2 ff 0f 00 00    	and    $0xfff,%edx$/;"	l
f010171d	obj/kern/kernel.asm	/^f010171d:	a8 01                	test   $0x1,%al$/;"	l
f010171f	obj/kern/kernel.asm	/^f010171f:	75 0d                	jne    f010172e <user_mem_check+0x98>$/;"	l
f0101721	obj/kern/kernel.asm	/^f0101721:	89 1d 3c c2 22 f0    	mov    %ebx,0xf022c23c$/;"	l
f0101727	obj/kern/kernel.asm	/^f0101727:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f010172c	obj/kern/kernel.asm	/^f010172c:	eb 47                	jmp    f0101775 <user_mem_check+0xdf>$/;"	l
f010172e	obj/kern/kernel.asm	/^f010172e:	f6 c2 04             	test   $0x4,%dl$/;"	l
f0101731	obj/kern/kernel.asm	/^f0101731:	74 1c                	je     f010174f <user_mem_check+0xb9>$/;"	l
f0101733	obj/kern/kernel.asm	/^f0101733:	f6 c2 02             	test   $0x2,%dl$/;"	l
f0101736	obj/kern/kernel.asm	/^f0101736:	75 24                	jne    f010175c <user_mem_check+0xc6>$/;"	l
f0101738	obj/kern/kernel.asm	/^f0101738:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f010173c	obj/kern/kernel.asm	/^f010173c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0101740	obj/kern/kernel.asm	/^f0101740:	74 1a                	je     f010175c <user_mem_check+0xc6>$/;"	l
f0101742	obj/kern/kernel.asm	/^f0101742:	89 1d 3c c2 22 f0    	mov    %ebx,0xf022c23c$/;"	l
f0101748	obj/kern/kernel.asm	/^f0101748:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f010174d	obj/kern/kernel.asm	/^f010174d:	eb 26                	jmp    f0101775 <user_mem_check+0xdf>$/;"	l
f010174f	obj/kern/kernel.asm	/^f010174f:	89 1d 3c c2 22 f0    	mov    %ebx,0xf022c23c$/;"	l
f0101755	obj/kern/kernel.asm	/^f0101755:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f010175a	obj/kern/kernel.asm	/^f010175a:	eb 19                	jmp    f0101775 <user_mem_check+0xdf>$/;"	l
f010175c	obj/kern/kernel.asm	/^f010175c:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f0101762	obj/kern/kernel.asm	/^f0101762:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0101768	obj/kern/kernel.asm	/^f0101768:	39 df                	cmp    %ebx,%edi$/;"	l
f010176a	obj/kern/kernel.asm	/^f010176a:	0f 87 58 ff ff ff    	ja     f01016c8 <user_mem_check+0x32>$/;"	l
f0101770	obj/kern/kernel.asm	/^f0101770:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101775	obj/kern/kernel.asm	/^f0101775:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0101778	obj/kern/kernel.asm	/^f0101778:	5b                   	pop    %ebx$/;"	l
f0101779	obj/kern/kernel.asm	/^f0101779:	5e                   	pop    %esi$/;"	l
f010177a	obj/kern/kernel.asm	/^f010177a:	5f                   	pop    %edi$/;"	l
f010177b	obj/kern/kernel.asm	/^f010177b:	5d                   	pop    %ebp$/;"	l
f010177c	obj/kern/kernel.asm	/^f010177c:	c3                   	ret    $/;"	l
f010177d	obj/kern/kernel.asm	/^f010177d <user_mem_assert>:$/;"	l
f010177d	obj/kern/kernel.asm	/^f010177d:	55                   	push   %ebp$/;"	l
f010177e	obj/kern/kernel.asm	/^f010177e:	89 e5                	mov    %esp,%ebp$/;"	l
f0101780	obj/kern/kernel.asm	/^f0101780:	53                   	push   %ebx$/;"	l
f0101781	obj/kern/kernel.asm	/^f0101781:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0101784	obj/kern/kernel.asm	/^f0101784:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0101787	obj/kern/kernel.asm	/^f0101787:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010178a	obj/kern/kernel.asm	/^f010178a:	83 c8 04             	or     $0x4,%eax$/;"	l
f010178d	obj/kern/kernel.asm	/^f010178d:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101791	obj/kern/kernel.asm	/^f0101791:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0101794	obj/kern/kernel.asm	/^f0101794:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0101798	obj/kern/kernel.asm	/^f0101798:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010179b	obj/kern/kernel.asm	/^f010179b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010179f	obj/kern/kernel.asm	/^f010179f:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01017a2	obj/kern/kernel.asm	/^f01017a2:	e8 ef fe ff ff       	call   f0101696 <user_mem_check>$/;"	l
f01017a7	obj/kern/kernel.asm	/^f01017a7:	85 c0                	test   %eax,%eax$/;"	l
f01017a9	obj/kern/kernel.asm	/^f01017a9:	79 24                	jns    f01017cf <user_mem_assert+0x52>$/;"	l
f01017ab	obj/kern/kernel.asm	/^f01017ab:	a1 3c c2 22 f0       	mov    0xf022c23c,%eax$/;"	l
f01017b0	obj/kern/kernel.asm	/^f01017b0:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01017b4	obj/kern/kernel.asm	/^f01017b4:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f01017b7	obj/kern/kernel.asm	/^f01017b7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01017bb	obj/kern/kernel.asm	/^f01017bb:	c7 04 24 28 70 10 f0 	movl   $0xf0107028,(%esp)$/;"	l
f01017c2	obj/kern/kernel.asm	/^f01017c2:	e8 e8 2a 00 00       	call   f01042af <cprintf>$/;"	l
f01017c7	obj/kern/kernel.asm	/^f01017c7:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01017ca	obj/kern/kernel.asm	/^f01017ca:	e8 00 25 00 00       	call   f0103ccf <env_destroy>$/;"	l
f01017cf	obj/kern/kernel.asm	/^f01017cf:	83 c4 14             	add    $0x14,%esp$/;"	l
f01017d2	obj/kern/kernel.asm	/^f01017d2:	5b                   	pop    %ebx$/;"	l
f01017d3	obj/kern/kernel.asm	/^f01017d3:	5d                   	pop    %ebp$/;"	l
f01017d4	obj/kern/kernel.asm	/^f01017d4:	c3                   	ret    $/;"	l
f01017d5	obj/kern/kernel.asm	/^f01017d5 <page_lookup>:$/;"	l
f01017d5	obj/kern/kernel.asm	/^f01017d5:	55                   	push   %ebp$/;"	l
f01017d6	obj/kern/kernel.asm	/^f01017d6:	89 e5                	mov    %esp,%ebp$/;"	l
f01017d8	obj/kern/kernel.asm	/^f01017d8:	53                   	push   %ebx$/;"	l
f01017d9	obj/kern/kernel.asm	/^f01017d9:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01017dc	obj/kern/kernel.asm	/^f01017dc:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f01017df	obj/kern/kernel.asm	/^f01017df:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01017e6	obj/kern/kernel.asm	/^f01017e6:	00 $/;"	l
f01017e7	obj/kern/kernel.asm	/^f01017e7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01017ea	obj/kern/kernel.asm	/^f01017ea:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01017ee	obj/kern/kernel.asm	/^f01017ee:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01017f1	obj/kern/kernel.asm	/^f01017f1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01017f4	obj/kern/kernel.asm	/^f01017f4:	e8 8c fd ff ff       	call   f0101585 <pgdir_walk>$/;"	l
f01017f9	obj/kern/kernel.asm	/^f01017f9:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01017fe	obj/kern/kernel.asm	/^f01017fe:	85 c0                	test   %eax,%eax$/;"	l
f0101800	obj/kern/kernel.asm	/^f0101800:	74 38                	je     f010183a <page_lookup+0x65>$/;"	l
f0101802	obj/kern/kernel.asm	/^f0101802:	85 db                	test   %ebx,%ebx$/;"	l
f0101804	obj/kern/kernel.asm	/^f0101804:	74 02                	je     f0101808 <page_lookup+0x33>$/;"	l
f0101806	obj/kern/kernel.asm	/^f0101806:	89 03                	mov    %eax,(%ebx)$/;"	l
f0101808	obj/kern/kernel.asm	/^f0101808:	8b 10                	mov    (%eax),%edx$/;"	l
f010180a	obj/kern/kernel.asm	/^f010180a:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010180d	obj/kern/kernel.asm	/^f010180d:	3b 15 e8 ce 22 f0    	cmp    0xf022cee8,%edx$/;"	l
f0101813	obj/kern/kernel.asm	/^f0101813:	72 1c                	jb     f0101831 <page_lookup+0x5c>$/;"	l
f0101815	obj/kern/kernel.asm	/^f0101815:	c7 44 24 08 60 70 10 	movl   $0xf0107060,0x8(%esp)$/;"	l
f010181c	obj/kern/kernel.asm	/^f010181c:	f0 $/;"	l
f010181d	obj/kern/kernel.asm	/^f010181d:	c7 44 24 04 4f 00 00 	movl   $0x4f,0x4(%esp)$/;"	l
f0101824	obj/kern/kernel.asm	/^f0101824:	00 $/;"	l
f0101825	obj/kern/kernel.asm	/^f0101825:	c7 04 24 8d 76 10 f0 	movl   $0xf010768d,(%esp)$/;"	l
f010182c	obj/kern/kernel.asm	/^f010182c:	e8 54 e8 ff ff       	call   f0100085 <_panic>$/;"	l
f0101831	obj/kern/kernel.asm	/^f0101831:	c1 e2 03             	shl    $0x3,%edx$/;"	l
f0101834	obj/kern/kernel.asm	/^f0101834:	03 15 f0 ce 22 f0    	add    0xf022cef0,%edx$/;"	l
f010183a	obj/kern/kernel.asm	/^f010183a:	89 d0                	mov    %edx,%eax$/;"	l
f010183c	obj/kern/kernel.asm	/^f010183c:	83 c4 14             	add    $0x14,%esp$/;"	l
f010183f	obj/kern/kernel.asm	/^f010183f:	5b                   	pop    %ebx$/;"	l
f0101840	obj/kern/kernel.asm	/^f0101840:	5d                   	pop    %ebp$/;"	l
f0101841	obj/kern/kernel.asm	/^f0101841:	c3                   	ret    $/;"	l
f0101842	obj/kern/kernel.asm	/^f0101842 <page_remove>:$/;"	l
f0101842	obj/kern/kernel.asm	/^f0101842:	55                   	push   %ebp$/;"	l
f0101843	obj/kern/kernel.asm	/^f0101843:	89 e5                	mov    %esp,%ebp$/;"	l
f0101845	obj/kern/kernel.asm	/^f0101845:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0101848	obj/kern/kernel.asm	/^f0101848:	89 5d f8             	mov    %ebx,-0x8(%ebp)$/;"	l
f010184b	obj/kern/kernel.asm	/^f010184b:	89 75 fc             	mov    %esi,-0x4(%ebp)$/;"	l
f010184e	obj/kern/kernel.asm	/^f010184e:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0101851	obj/kern/kernel.asm	/^f0101851:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0101854	obj/kern/kernel.asm	/^f0101854:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0101857	obj/kern/kernel.asm	/^f0101857:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010185b	obj/kern/kernel.asm	/^f010185b:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010185f	obj/kern/kernel.asm	/^f010185f:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101862	obj/kern/kernel.asm	/^f0101862:	e8 6e ff ff ff       	call   f01017d5 <page_lookup>$/;"	l
f0101867	obj/kern/kernel.asm	/^f0101867:	85 c0                	test   %eax,%eax$/;"	l
f0101869	obj/kern/kernel.asm	/^f0101869:	74 1d                	je     f0101888 <page_remove+0x46>$/;"	l
f010186b	obj/kern/kernel.asm	/^f010186b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010186e	obj/kern/kernel.asm	/^f010186e:	e8 b6 f5 ff ff       	call   f0100e29 <page_decref>$/;"	l
f0101873	obj/kern/kernel.asm	/^f0101873:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101876	obj/kern/kernel.asm	/^f0101876:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f010187c	obj/kern/kernel.asm	/^f010187c:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101880	obj/kern/kernel.asm	/^f0101880:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101883	obj/kern/kernel.asm	/^f0101883:	e8 c4 f5 ff ff       	call   f0100e4c <tlb_invalidate>$/;"	l
f0101888	obj/kern/kernel.asm	/^f0101888:	8b 5d f8             	mov    -0x8(%ebp),%ebx$/;"	l
f010188b	obj/kern/kernel.asm	/^f010188b:	8b 75 fc             	mov    -0x4(%ebp),%esi$/;"	l
f010188e	obj/kern/kernel.asm	/^f010188e:	89 ec                	mov    %ebp,%esp$/;"	l
f0101890	obj/kern/kernel.asm	/^f0101890:	5d                   	pop    %ebp$/;"	l
f0101891	obj/kern/kernel.asm	/^f0101891:	c3                   	ret    $/;"	l
f0101892	obj/kern/kernel.asm	/^f0101892 <page_insert>:$/;"	l
f0101892	obj/kern/kernel.asm	/^f0101892:	55                   	push   %ebp$/;"	l
f0101893	obj/kern/kernel.asm	/^f0101893:	89 e5                	mov    %esp,%ebp$/;"	l
f0101895	obj/kern/kernel.asm	/^f0101895:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0101898	obj/kern/kernel.asm	/^f0101898:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f010189b	obj/kern/kernel.asm	/^f010189b:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f010189e	obj/kern/kernel.asm	/^f010189e:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f01018a1	obj/kern/kernel.asm	/^f01018a1:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01018a4	obj/kern/kernel.asm	/^f01018a4:	8b 3d f0 ce 22 f0    	mov    0xf022cef0,%edi$/;"	l
f01018aa	obj/kern/kernel.asm	/^f01018aa:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01018b1	obj/kern/kernel.asm	/^f01018b1:	00 $/;"	l
f01018b2	obj/kern/kernel.asm	/^f01018b2:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01018b5	obj/kern/kernel.asm	/^f01018b5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01018b9	obj/kern/kernel.asm	/^f01018b9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01018bc	obj/kern/kernel.asm	/^f01018bc:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01018bf	obj/kern/kernel.asm	/^f01018bf:	e8 c1 fc ff ff       	call   f0101585 <pgdir_walk>$/;"	l
f01018c4	obj/kern/kernel.asm	/^f01018c4:	89 c3                	mov    %eax,%ebx$/;"	l
f01018c6	obj/kern/kernel.asm	/^f01018c6:	85 c0                	test   %eax,%eax$/;"	l
f01018c8	obj/kern/kernel.asm	/^f01018c8:	75 27                	jne    f01018f1 <page_insert+0x5f>$/;"	l
f01018ca	obj/kern/kernel.asm	/^f01018ca:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01018d1	obj/kern/kernel.asm	/^f01018d1:	00 $/;"	l
f01018d2	obj/kern/kernel.asm	/^f01018d2:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01018d5	obj/kern/kernel.asm	/^f01018d5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01018d9	obj/kern/kernel.asm	/^f01018d9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01018dc	obj/kern/kernel.asm	/^f01018dc:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01018df	obj/kern/kernel.asm	/^f01018df:	e8 a1 fc ff ff       	call   f0101585 <pgdir_walk>$/;"	l
f01018e4	obj/kern/kernel.asm	/^f01018e4:	89 c3                	mov    %eax,%ebx$/;"	l
f01018e6	obj/kern/kernel.asm	/^f01018e6:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f01018eb	obj/kern/kernel.asm	/^f01018eb:	85 db                	test   %ebx,%ebx$/;"	l
f01018ed	obj/kern/kernel.asm	/^f01018ed:	75 19                	jne    f0101908 <page_insert+0x76>$/;"	l
f01018ef	obj/kern/kernel.asm	/^f01018ef:	eb 4a                	jmp    f010193b <page_insert+0xa9>$/;"	l
f01018f1	obj/kern/kernel.asm	/^f01018f1:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f01018f4	obj/kern/kernel.asm	/^f01018f4:	74 12                	je     f0101908 <page_insert+0x76>$/;"	l
f01018f6	obj/kern/kernel.asm	/^f01018f6:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01018f9	obj/kern/kernel.asm	/^f01018f9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01018fd	obj/kern/kernel.asm	/^f01018fd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101900	obj/kern/kernel.asm	/^f0101900:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101903	obj/kern/kernel.asm	/^f0101903:	e8 3a ff ff ff       	call   f0101842 <page_remove>$/;"	l
f0101908	obj/kern/kernel.asm	/^f0101908:	3b 35 30 c2 22 f0    	cmp    0xf022c230,%esi$/;"	l
f010190e	obj/kern/kernel.asm	/^f010190e:	75 07                	jne    f0101917 <page_insert+0x85>$/;"	l
f0101910	obj/kern/kernel.asm	/^f0101910:	8b 06                	mov    (%esi),%eax$/;"	l
f0101912	obj/kern/kernel.asm	/^f0101912:	a3 30 c2 22 f0       	mov    %eax,0xf022c230$/;"	l
f0101917	obj/kern/kernel.asm	/^f0101917:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
f010191a	obj/kern/kernel.asm	/^f010191a:	83 ca 01             	or     $0x1,%edx$/;"	l
f010191d	obj/kern/kernel.asm	/^f010191d:	89 f0                	mov    %esi,%eax$/;"	l
f010191f	obj/kern/kernel.asm	/^f010191f:	29 f8                	sub    %edi,%eax$/;"	l
f0101921	obj/kern/kernel.asm	/^f0101921:	89 c7                	mov    %eax,%edi$/;"	l
f0101923	obj/kern/kernel.asm	/^f0101923:	c1 ff 03             	sar    $0x3,%edi$/;"	l
f0101926	obj/kern/kernel.asm	/^f0101926:	89 f8                	mov    %edi,%eax$/;"	l
f0101928	obj/kern/kernel.asm	/^f0101928:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010192b	obj/kern/kernel.asm	/^f010192b:	89 d7                	mov    %edx,%edi$/;"	l
f010192d	obj/kern/kernel.asm	/^f010192d:	09 c7                	or     %eax,%edi$/;"	l
f010192f	obj/kern/kernel.asm	/^f010192f:	89 3b                	mov    %edi,(%ebx)$/;"	l
f0101931	obj/kern/kernel.asm	/^f0101931:	66 83 46 04 01       	addw   $0x1,0x4(%esi)$/;"	l
f0101936	obj/kern/kernel.asm	/^f0101936:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010193b	obj/kern/kernel.asm	/^f010193b:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f010193e	obj/kern/kernel.asm	/^f010193e:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f0101941	obj/kern/kernel.asm	/^f0101941:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f0101944	obj/kern/kernel.asm	/^f0101944:	89 ec                	mov    %ebp,%esp$/;"	l
f0101946	obj/kern/kernel.asm	/^f0101946:	5d                   	pop    %ebp$/;"	l
f0101947	obj/kern/kernel.asm	/^f0101947:	c3                   	ret    $/;"	l
f0101948	obj/kern/kernel.asm	/^f0101948 <boot_map_region>:$/;"	l
f0101948	obj/kern/kernel.asm	/^f0101948:	55                   	push   %ebp$/;"	l
f0101949	obj/kern/kernel.asm	/^f0101949:	89 e5                	mov    %esp,%ebp$/;"	l
f010194b	obj/kern/kernel.asm	/^f010194b:	57                   	push   %edi$/;"	l
f010194c	obj/kern/kernel.asm	/^f010194c:	56                   	push   %esi$/;"	l
f010194d	obj/kern/kernel.asm	/^f010194d:	53                   	push   %ebx$/;"	l
f010194e	obj/kern/kernel.asm	/^f010194e:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0101951	obj/kern/kernel.asm	/^f0101951:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0101954	obj/kern/kernel.asm	/^f0101954:	89 d3                	mov    %edx,%ebx$/;"	l
f0101956	obj/kern/kernel.asm	/^f0101956:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0101959	obj/kern/kernel.asm	/^f0101959:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f010195c	obj/kern/kernel.asm	/^f010195c:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f010195f	obj/kern/kernel.asm	/^f010195f:	85 c9                	test   %ecx,%ecx$/;"	l
f0101961	obj/kern/kernel.asm	/^f0101961:	74 40                	je     f01019a3 <boot_map_region+0x5b>$/;"	l
f0101963	obj/kern/kernel.asm	/^f0101963:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0101968	obj/kern/kernel.asm	/^f0101968:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010196b	obj/kern/kernel.asm	/^f010196b:	83 c8 01             	or     $0x1,%eax$/;"	l
f010196e	obj/kern/kernel.asm	/^f010196e:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0101971	obj/kern/kernel.asm	/^f0101971:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0101978	obj/kern/kernel.asm	/^f0101978:	00 $/;"	l
f0101979	obj/kern/kernel.asm	/^f0101979:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010197d	obj/kern/kernel.asm	/^f010197d:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0101980	obj/kern/kernel.asm	/^f0101980:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101983	obj/kern/kernel.asm	/^f0101983:	e8 fd fb ff ff       	call   f0101585 <pgdir_walk>$/;"	l
f0101988	obj/kern/kernel.asm	/^f0101988:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f010198b	obj/kern/kernel.asm	/^f010198b:	09 fa                	or     %edi,%edx$/;"	l
f010198d	obj/kern/kernel.asm	/^f010198d:	89 10                	mov    %edx,(%eax)$/;"	l
f010198f	obj/kern/kernel.asm	/^f010198f:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0101995	obj/kern/kernel.asm	/^f0101995:	81 c7 00 10 00 00    	add    $0x1000,%edi$/;"	l
f010199b	obj/kern/kernel.asm	/^f010199b:	83 c6 01             	add    $0x1,%esi$/;"	l
f010199e	obj/kern/kernel.asm	/^f010199e:	39 75 e0             	cmp    %esi,-0x20(%ebp)$/;"	l
f01019a1	obj/kern/kernel.asm	/^f01019a1:	77 ce                	ja     f0101971 <boot_map_region+0x29>$/;"	l
f01019a3	obj/kern/kernel.asm	/^f01019a3:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f01019a6	obj/kern/kernel.asm	/^f01019a6:	5b                   	pop    %ebx$/;"	l
f01019a7	obj/kern/kernel.asm	/^f01019a7:	5e                   	pop    %esi$/;"	l
f01019a8	obj/kern/kernel.asm	/^f01019a8:	5f                   	pop    %edi$/;"	l
f01019a9	obj/kern/kernel.asm	/^f01019a9:	5d                   	pop    %ebp$/;"	l
f01019aa	obj/kern/kernel.asm	/^f01019aa:	c3                   	ret    $/;"	l
f01019ab	obj/kern/kernel.asm	/^f01019ab <check_page>:$/;"	l
f01019ab	obj/kern/kernel.asm	/^f01019ab:	55                   	push   %ebp$/;"	l
f01019ac	obj/kern/kernel.asm	/^f01019ac:	89 e5                	mov    %esp,%ebp$/;"	l
f01019ae	obj/kern/kernel.asm	/^f01019ae:	57                   	push   %edi$/;"	l
f01019af	obj/kern/kernel.asm	/^f01019af:	56                   	push   %esi$/;"	l
f01019b0	obj/kern/kernel.asm	/^f01019b0:	53                   	push   %ebx$/;"	l
f01019b1	obj/kern/kernel.asm	/^f01019b1:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f01019b4	obj/kern/kernel.asm	/^f01019b4:	c7 04 24 62 77 10 f0 	movl   $0xf0107762,(%esp)$/;"	l
f01019bb	obj/kern/kernel.asm	/^f01019bb:	e8 ef 28 00 00       	call   f01042af <cprintf>$/;"	l
f01019c0	obj/kern/kernel.asm	/^f01019c0:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01019c7	obj/kern/kernel.asm	/^f01019c7:	e8 3b fb ff ff       	call   f0101507 <page_alloc>$/;"	l
f01019cc	obj/kern/kernel.asm	/^f01019cc:	89 c6                	mov    %eax,%esi$/;"	l
f01019ce	obj/kern/kernel.asm	/^f01019ce:	85 c0                	test   %eax,%eax$/;"	l
f01019d0	obj/kern/kernel.asm	/^f01019d0:	75 24                	jne    f01019f6 <check_page+0x4b>$/;"	l
f01019d2	obj/kern/kernel.asm	/^f01019d2:	c7 44 24 0c 7a 77 10 	movl   $0xf010777a,0xc(%esp)$/;"	l
f01019d9	obj/kern/kernel.asm	/^f01019d9:	f0 $/;"	l
f01019da	obj/kern/kernel.asm	/^f01019da:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f01019e1	obj/kern/kernel.asm	/^f01019e1:	f0 $/;"	l
f01019e2	obj/kern/kernel.asm	/^f01019e2:	c7 44 24 04 d7 03 00 	movl   $0x3d7,0x4(%esp)$/;"	l
f01019e9	obj/kern/kernel.asm	/^f01019e9:	00 $/;"	l
f01019ea	obj/kern/kernel.asm	/^f01019ea:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f01019f1	obj/kern/kernel.asm	/^f01019f1:	e8 8f e6 ff ff       	call   f0100085 <_panic>$/;"	l
f01019f6	obj/kern/kernel.asm	/^f01019f6:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01019fd	obj/kern/kernel.asm	/^f01019fd:	e8 05 fb ff ff       	call   f0101507 <page_alloc>$/;"	l
f0101a02	obj/kern/kernel.asm	/^f0101a02:	89 c7                	mov    %eax,%edi$/;"	l
f0101a04	obj/kern/kernel.asm	/^f0101a04:	85 c0                	test   %eax,%eax$/;"	l
f0101a06	obj/kern/kernel.asm	/^f0101a06:	75 24                	jne    f0101a2c <check_page+0x81>$/;"	l
f0101a08	obj/kern/kernel.asm	/^f0101a08:	c7 44 24 0c 90 77 10 	movl   $0xf0107790,0xc(%esp)$/;"	l
f0101a0f	obj/kern/kernel.asm	/^f0101a0f:	f0 $/;"	l
f0101a10	obj/kern/kernel.asm	/^f0101a10:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0101a17	obj/kern/kernel.asm	/^f0101a17:	f0 $/;"	l
f0101a18	obj/kern/kernel.asm	/^f0101a18:	c7 44 24 04 d8 03 00 	movl   $0x3d8,0x4(%esp)$/;"	l
f0101a1f	obj/kern/kernel.asm	/^f0101a1f:	00 $/;"	l
f0101a20	obj/kern/kernel.asm	/^f0101a20:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0101a27	obj/kern/kernel.asm	/^f0101a27:	e8 59 e6 ff ff       	call   f0100085 <_panic>$/;"	l
f0101a2c	obj/kern/kernel.asm	/^f0101a2c:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101a33	obj/kern/kernel.asm	/^f0101a33:	e8 cf fa ff ff       	call   f0101507 <page_alloc>$/;"	l
f0101a38	obj/kern/kernel.asm	/^f0101a38:	89 c3                	mov    %eax,%ebx$/;"	l
f0101a3a	obj/kern/kernel.asm	/^f0101a3a:	85 c0                	test   %eax,%eax$/;"	l
f0101a3c	obj/kern/kernel.asm	/^f0101a3c:	75 24                	jne    f0101a62 <check_page+0xb7>$/;"	l
f0101a3e	obj/kern/kernel.asm	/^f0101a3e:	c7 44 24 0c a6 77 10 	movl   $0xf01077a6,0xc(%esp)$/;"	l
f0101a45	obj/kern/kernel.asm	/^f0101a45:	f0 $/;"	l
f0101a46	obj/kern/kernel.asm	/^f0101a46:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0101a4d	obj/kern/kernel.asm	/^f0101a4d:	f0 $/;"	l
f0101a4e	obj/kern/kernel.asm	/^f0101a4e:	c7 44 24 04 d9 03 00 	movl   $0x3d9,0x4(%esp)$/;"	l
f0101a55	obj/kern/kernel.asm	/^f0101a55:	00 $/;"	l
f0101a56	obj/kern/kernel.asm	/^f0101a56:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0101a5d	obj/kern/kernel.asm	/^f0101a5d:	e8 23 e6 ff ff       	call   f0100085 <_panic>$/;"	l
f0101a62	obj/kern/kernel.asm	/^f0101a62:	39 fe                	cmp    %edi,%esi$/;"	l
f0101a64	obj/kern/kernel.asm	/^f0101a64:	75 24                	jne    f0101a8a <check_page+0xdf>$/;"	l
f0101a66	obj/kern/kernel.asm	/^f0101a66:	c7 44 24 0c bc 77 10 	movl   $0xf01077bc,0xc(%esp)$/;"	l
f0101a6d	obj/kern/kernel.asm	/^f0101a6d:	f0 $/;"	l
f0101a6e	obj/kern/kernel.asm	/^f0101a6e:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0101a75	obj/kern/kernel.asm	/^f0101a75:	f0 $/;"	l
f0101a76	obj/kern/kernel.asm	/^f0101a76:	c7 44 24 04 dc 03 00 	movl   $0x3dc,0x4(%esp)$/;"	l
f0101a7d	obj/kern/kernel.asm	/^f0101a7d:	00 $/;"	l
f0101a7e	obj/kern/kernel.asm	/^f0101a7e:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0101a85	obj/kern/kernel.asm	/^f0101a85:	e8 fb e5 ff ff       	call   f0100085 <_panic>$/;"	l
f0101a8a	obj/kern/kernel.asm	/^f0101a8a:	39 c7                	cmp    %eax,%edi$/;"	l
f0101a8c	obj/kern/kernel.asm	/^f0101a8c:	74 04                	je     f0101a92 <check_page+0xe7>$/;"	l
f0101a8e	obj/kern/kernel.asm	/^f0101a8e:	39 c6                	cmp    %eax,%esi$/;"	l
f0101a90	obj/kern/kernel.asm	/^f0101a90:	75 24                	jne    f0101ab6 <check_page+0x10b>$/;"	l
f0101a92	obj/kern/kernel.asm	/^f0101a92:	c7 44 24 0c 80 70 10 	movl   $0xf0107080,0xc(%esp)$/;"	l
f0101a99	obj/kern/kernel.asm	/^f0101a99:	f0 $/;"	l
f0101a9a	obj/kern/kernel.asm	/^f0101a9a:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0101aa1	obj/kern/kernel.asm	/^f0101aa1:	f0 $/;"	l
f0101aa2	obj/kern/kernel.asm	/^f0101aa2:	c7 44 24 04 dd 03 00 	movl   $0x3dd,0x4(%esp)$/;"	l
f0101aa9	obj/kern/kernel.asm	/^f0101aa9:	00 $/;"	l
f0101aaa	obj/kern/kernel.asm	/^f0101aaa:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0101ab1	obj/kern/kernel.asm	/^f0101ab1:	e8 cf e5 ff ff       	call   f0100085 <_panic>$/;"	l
f0101ab6	obj/kern/kernel.asm	/^f0101ab6:	a1 30 c2 22 f0       	mov    0xf022c230,%eax$/;"	l
f0101abb	obj/kern/kernel.asm	/^f0101abb:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f0101abe	obj/kern/kernel.asm	/^f0101abe:	c7 05 30 c2 22 f0 00 	movl   $0x0,0xf022c230$/;"	l
f0101ac5	obj/kern/kernel.asm	/^f0101ac5:	00 00 00 $/;"	l
f0101ac8	obj/kern/kernel.asm	/^f0101ac8:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101acf	obj/kern/kernel.asm	/^f0101acf:	e8 33 fa ff ff       	call   f0101507 <page_alloc>$/;"	l
f0101ad4	obj/kern/kernel.asm	/^f0101ad4:	85 c0                	test   %eax,%eax$/;"	l
f0101ad6	obj/kern/kernel.asm	/^f0101ad6:	74 24                	je     f0101afc <check_page+0x151>$/;"	l
f0101ad8	obj/kern/kernel.asm	/^f0101ad8:	c7 44 24 0c ce 77 10 	movl   $0xf01077ce,0xc(%esp)$/;"	l
f0101adf	obj/kern/kernel.asm	/^f0101adf:	f0 $/;"	l
f0101ae0	obj/kern/kernel.asm	/^f0101ae0:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0101ae7	obj/kern/kernel.asm	/^f0101ae7:	f0 $/;"	l
f0101ae8	obj/kern/kernel.asm	/^f0101ae8:	c7 44 24 04 e4 03 00 	movl   $0x3e4,0x4(%esp)$/;"	l
f0101aef	obj/kern/kernel.asm	/^f0101aef:	00 $/;"	l
f0101af0	obj/kern/kernel.asm	/^f0101af0:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0101af7	obj/kern/kernel.asm	/^f0101af7:	e8 89 e5 ff ff       	call   f0100085 <_panic>$/;"	l
f0101afc	obj/kern/kernel.asm	/^f0101afc:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0101aff	obj/kern/kernel.asm	/^f0101aff:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0101b03	obj/kern/kernel.asm	/^f0101b03:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0101b0a	obj/kern/kernel.asm	/^f0101b0a:	00 $/;"	l
f0101b0b	obj/kern/kernel.asm	/^f0101b0b:	a1 ec ce 22 f0       	mov    0xf022ceec,%eax$/;"	l
f0101b10	obj/kern/kernel.asm	/^f0101b10:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101b13	obj/kern/kernel.asm	/^f0101b13:	e8 bd fc ff ff       	call   f01017d5 <page_lookup>$/;"	l
f0101b18	obj/kern/kernel.asm	/^f0101b18:	85 c0                	test   %eax,%eax$/;"	l
f0101b1a	obj/kern/kernel.asm	/^f0101b1a:	74 24                	je     f0101b40 <check_page+0x195>$/;"	l
f0101b1c	obj/kern/kernel.asm	/^f0101b1c:	c7 44 24 0c a0 70 10 	movl   $0xf01070a0,0xc(%esp)$/;"	l
f0101b23	obj/kern/kernel.asm	/^f0101b23:	f0 $/;"	l
f0101b24	obj/kern/kernel.asm	/^f0101b24:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0101b2b	obj/kern/kernel.asm	/^f0101b2b:	f0 $/;"	l
f0101b2c	obj/kern/kernel.asm	/^f0101b2c:	c7 44 24 04 e7 03 00 	movl   $0x3e7,0x4(%esp)$/;"	l
f0101b33	obj/kern/kernel.asm	/^f0101b33:	00 $/;"	l
f0101b34	obj/kern/kernel.asm	/^f0101b34:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0101b3b	obj/kern/kernel.asm	/^f0101b3b:	e8 45 e5 ff ff       	call   f0100085 <_panic>$/;"	l
f0101b40	obj/kern/kernel.asm	/^f0101b40:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0101b47	obj/kern/kernel.asm	/^f0101b47:	00 $/;"	l
f0101b48	obj/kern/kernel.asm	/^f0101b48:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0101b4f	obj/kern/kernel.asm	/^f0101b4f:	00 $/;"	l
f0101b50	obj/kern/kernel.asm	/^f0101b50:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0101b54	obj/kern/kernel.asm	/^f0101b54:	a1 ec ce 22 f0       	mov    0xf022ceec,%eax$/;"	l
f0101b59	obj/kern/kernel.asm	/^f0101b59:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101b5c	obj/kern/kernel.asm	/^f0101b5c:	e8 31 fd ff ff       	call   f0101892 <page_insert>$/;"	l
f0101b61	obj/kern/kernel.asm	/^f0101b61:	85 c0                	test   %eax,%eax$/;"	l
f0101b63	obj/kern/kernel.asm	/^f0101b63:	78 24                	js     f0101b89 <check_page+0x1de>$/;"	l
f0101b65	obj/kern/kernel.asm	/^f0101b65:	c7 44 24 0c d8 70 10 	movl   $0xf01070d8,0xc(%esp)$/;"	l
f0101b6c	obj/kern/kernel.asm	/^f0101b6c:	f0 $/;"	l
f0101b6d	obj/kern/kernel.asm	/^f0101b6d:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0101b74	obj/kern/kernel.asm	/^f0101b74:	f0 $/;"	l
f0101b75	obj/kern/kernel.asm	/^f0101b75:	c7 44 24 04 ea 03 00 	movl   $0x3ea,0x4(%esp)$/;"	l
f0101b7c	obj/kern/kernel.asm	/^f0101b7c:	00 $/;"	l
f0101b7d	obj/kern/kernel.asm	/^f0101b7d:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0101b84	obj/kern/kernel.asm	/^f0101b84:	e8 fc e4 ff ff       	call   f0100085 <_panic>$/;"	l
f0101b89	obj/kern/kernel.asm	/^f0101b89:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101b8c	obj/kern/kernel.asm	/^f0101b8c:	e8 83 f2 ff ff       	call   f0100e14 <page_free>$/;"	l
f0101b91	obj/kern/kernel.asm	/^f0101b91:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0101b98	obj/kern/kernel.asm	/^f0101b98:	00 $/;"	l
f0101b99	obj/kern/kernel.asm	/^f0101b99:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0101ba0	obj/kern/kernel.asm	/^f0101ba0:	00 $/;"	l
f0101ba1	obj/kern/kernel.asm	/^f0101ba1:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0101ba5	obj/kern/kernel.asm	/^f0101ba5:	a1 ec ce 22 f0       	mov    0xf022ceec,%eax$/;"	l
f0101baa	obj/kern/kernel.asm	/^f0101baa:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101bad	obj/kern/kernel.asm	/^f0101bad:	e8 e0 fc ff ff       	call   f0101892 <page_insert>$/;"	l
f0101bb2	obj/kern/kernel.asm	/^f0101bb2:	85 c0                	test   %eax,%eax$/;"	l
f0101bb4	obj/kern/kernel.asm	/^f0101bb4:	74 24                	je     f0101bda <check_page+0x22f>$/;"	l
f0101bb6	obj/kern/kernel.asm	/^f0101bb6:	c7 44 24 0c 08 71 10 	movl   $0xf0107108,0xc(%esp)$/;"	l
f0101bbd	obj/kern/kernel.asm	/^f0101bbd:	f0 $/;"	l
f0101bbe	obj/kern/kernel.asm	/^f0101bbe:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0101bc5	obj/kern/kernel.asm	/^f0101bc5:	f0 $/;"	l
f0101bc6	obj/kern/kernel.asm	/^f0101bc6:	c7 44 24 04 ee 03 00 	movl   $0x3ee,0x4(%esp)$/;"	l
f0101bcd	obj/kern/kernel.asm	/^f0101bcd:	00 $/;"	l
f0101bce	obj/kern/kernel.asm	/^f0101bce:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0101bd5	obj/kern/kernel.asm	/^f0101bd5:	e8 ab e4 ff ff       	call   f0100085 <_panic>$/;"	l
f0101bda	obj/kern/kernel.asm	/^f0101bda:	a1 ec ce 22 f0       	mov    0xf022ceec,%eax$/;"	l
f0101bdf	obj/kern/kernel.asm	/^f0101bdf:	89 75 d0             	mov    %esi,-0x30(%ebp)$/;"	l
f0101be2	obj/kern/kernel.asm	/^f0101be2:	8b 08                	mov    (%eax),%ecx$/;"	l
f0101be4	obj/kern/kernel.asm	/^f0101be4:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f0101bea	obj/kern/kernel.asm	/^f0101bea:	89 f2                	mov    %esi,%edx$/;"	l
f0101bec	obj/kern/kernel.asm	/^f0101bec:	2b 15 f0 ce 22 f0    	sub    0xf022cef0,%edx$/;"	l
f0101bf2	obj/kern/kernel.asm	/^f0101bf2:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101bf5	obj/kern/kernel.asm	/^f0101bf5:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101bf8	obj/kern/kernel.asm	/^f0101bf8:	39 d1                	cmp    %edx,%ecx$/;"	l
f0101bfa	obj/kern/kernel.asm	/^f0101bfa:	74 24                	je     f0101c20 <check_page+0x275>$/;"	l
f0101bfc	obj/kern/kernel.asm	/^f0101bfc:	c7 44 24 0c 38 71 10 	movl   $0xf0107138,0xc(%esp)$/;"	l
f0101c03	obj/kern/kernel.asm	/^f0101c03:	f0 $/;"	l
f0101c04	obj/kern/kernel.asm	/^f0101c04:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0101c0b	obj/kern/kernel.asm	/^f0101c0b:	f0 $/;"	l
f0101c0c	obj/kern/kernel.asm	/^f0101c0c:	c7 44 24 04 ef 03 00 	movl   $0x3ef,0x4(%esp)$/;"	l
f0101c13	obj/kern/kernel.asm	/^f0101c13:	00 $/;"	l
f0101c14	obj/kern/kernel.asm	/^f0101c14:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0101c1b	obj/kern/kernel.asm	/^f0101c1b:	e8 65 e4 ff ff       	call   f0100085 <_panic>$/;"	l
f0101c20	obj/kern/kernel.asm	/^f0101c20:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101c25	obj/kern/kernel.asm	/^f0101c25:	e8 57 f2 ff ff       	call   f0100e81 <check_va2pa>$/;"	l
f0101c2a	obj/kern/kernel.asm	/^f0101c2a:	89 7d d4             	mov    %edi,-0x2c(%ebp)$/;"	l
f0101c2d	obj/kern/kernel.asm	/^f0101c2d:	89 fa                	mov    %edi,%edx$/;"	l
f0101c2f	obj/kern/kernel.asm	/^f0101c2f:	2b 15 f0 ce 22 f0    	sub    0xf022cef0,%edx$/;"	l
f0101c35	obj/kern/kernel.asm	/^f0101c35:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101c38	obj/kern/kernel.asm	/^f0101c38:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101c3b	obj/kern/kernel.asm	/^f0101c3b:	39 d0                	cmp    %edx,%eax$/;"	l
f0101c3d	obj/kern/kernel.asm	/^f0101c3d:	74 24                	je     f0101c63 <check_page+0x2b8>$/;"	l
f0101c3f	obj/kern/kernel.asm	/^f0101c3f:	c7 44 24 0c 60 71 10 	movl   $0xf0107160,0xc(%esp)$/;"	l
f0101c46	obj/kern/kernel.asm	/^f0101c46:	f0 $/;"	l
f0101c47	obj/kern/kernel.asm	/^f0101c47:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0101c4e	obj/kern/kernel.asm	/^f0101c4e:	f0 $/;"	l
f0101c4f	obj/kern/kernel.asm	/^f0101c4f:	c7 44 24 04 f0 03 00 	movl   $0x3f0,0x4(%esp)$/;"	l
f0101c56	obj/kern/kernel.asm	/^f0101c56:	00 $/;"	l
f0101c57	obj/kern/kernel.asm	/^f0101c57:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0101c5e	obj/kern/kernel.asm	/^f0101c5e:	e8 22 e4 ff ff       	call   f0100085 <_panic>$/;"	l
f0101c63	obj/kern/kernel.asm	/^f0101c63:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f0101c68	obj/kern/kernel.asm	/^f0101c68:	74 24                	je     f0101c8e <check_page+0x2e3>$/;"	l
f0101c6a	obj/kern/kernel.asm	/^f0101c6a:	c7 44 24 0c dd 77 10 	movl   $0xf01077dd,0xc(%esp)$/;"	l
f0101c71	obj/kern/kernel.asm	/^f0101c71:	f0 $/;"	l
f0101c72	obj/kern/kernel.asm	/^f0101c72:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0101c79	obj/kern/kernel.asm	/^f0101c79:	f0 $/;"	l
f0101c7a	obj/kern/kernel.asm	/^f0101c7a:	c7 44 24 04 f1 03 00 	movl   $0x3f1,0x4(%esp)$/;"	l
f0101c81	obj/kern/kernel.asm	/^f0101c81:	00 $/;"	l
f0101c82	obj/kern/kernel.asm	/^f0101c82:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0101c89	obj/kern/kernel.asm	/^f0101c89:	e8 f7 e3 ff ff       	call   f0100085 <_panic>$/;"	l
f0101c8e	obj/kern/kernel.asm	/^f0101c8e:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0101c93	obj/kern/kernel.asm	/^f0101c93:	74 24                	je     f0101cb9 <check_page+0x30e>$/;"	l
f0101c95	obj/kern/kernel.asm	/^f0101c95:	c7 44 24 0c ee 77 10 	movl   $0xf01077ee,0xc(%esp)$/;"	l
f0101c9c	obj/kern/kernel.asm	/^f0101c9c:	f0 $/;"	l
f0101c9d	obj/kern/kernel.asm	/^f0101c9d:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0101ca4	obj/kern/kernel.asm	/^f0101ca4:	f0 $/;"	l
f0101ca5	obj/kern/kernel.asm	/^f0101ca5:	c7 44 24 04 f2 03 00 	movl   $0x3f2,0x4(%esp)$/;"	l
f0101cac	obj/kern/kernel.asm	/^f0101cac:	00 $/;"	l
f0101cad	obj/kern/kernel.asm	/^f0101cad:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0101cb4	obj/kern/kernel.asm	/^f0101cb4:	e8 cc e3 ff ff       	call   f0100085 <_panic>$/;"	l
f0101cb9	obj/kern/kernel.asm	/^f0101cb9:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0101cc0	obj/kern/kernel.asm	/^f0101cc0:	00 $/;"	l
f0101cc1	obj/kern/kernel.asm	/^f0101cc1:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101cc8	obj/kern/kernel.asm	/^f0101cc8:	00 $/;"	l
f0101cc9	obj/kern/kernel.asm	/^f0101cc9:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101ccd	obj/kern/kernel.asm	/^f0101ccd:	a1 ec ce 22 f0       	mov    0xf022ceec,%eax$/;"	l
f0101cd2	obj/kern/kernel.asm	/^f0101cd2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101cd5	obj/kern/kernel.asm	/^f0101cd5:	e8 b8 fb ff ff       	call   f0101892 <page_insert>$/;"	l
f0101cda	obj/kern/kernel.asm	/^f0101cda:	85 c0                	test   %eax,%eax$/;"	l
f0101cdc	obj/kern/kernel.asm	/^f0101cdc:	74 24                	je     f0101d02 <check_page+0x357>$/;"	l
f0101cde	obj/kern/kernel.asm	/^f0101cde:	c7 44 24 0c 90 71 10 	movl   $0xf0107190,0xc(%esp)$/;"	l
f0101ce5	obj/kern/kernel.asm	/^f0101ce5:	f0 $/;"	l
f0101ce6	obj/kern/kernel.asm	/^f0101ce6:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0101ced	obj/kern/kernel.asm	/^f0101ced:	f0 $/;"	l
f0101cee	obj/kern/kernel.asm	/^f0101cee:	c7 44 24 04 f5 03 00 	movl   $0x3f5,0x4(%esp)$/;"	l
f0101cf5	obj/kern/kernel.asm	/^f0101cf5:	00 $/;"	l
f0101cf6	obj/kern/kernel.asm	/^f0101cf6:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0101cfd	obj/kern/kernel.asm	/^f0101cfd:	e8 83 e3 ff ff       	call   f0100085 <_panic>$/;"	l
f0101d02	obj/kern/kernel.asm	/^f0101d02:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101d07	obj/kern/kernel.asm	/^f0101d07:	a1 ec ce 22 f0       	mov    0xf022ceec,%eax$/;"	l
f0101d0c	obj/kern/kernel.asm	/^f0101d0c:	e8 70 f1 ff ff       	call   f0100e81 <check_va2pa>$/;"	l
f0101d11	obj/kern/kernel.asm	/^f0101d11:	89 5d cc             	mov    %ebx,-0x34(%ebp)$/;"	l
f0101d14	obj/kern/kernel.asm	/^f0101d14:	89 da                	mov    %ebx,%edx$/;"	l
f0101d16	obj/kern/kernel.asm	/^f0101d16:	2b 15 f0 ce 22 f0    	sub    0xf022cef0,%edx$/;"	l
f0101d1c	obj/kern/kernel.asm	/^f0101d1c:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101d1f	obj/kern/kernel.asm	/^f0101d1f:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101d22	obj/kern/kernel.asm	/^f0101d22:	39 d0                	cmp    %edx,%eax$/;"	l
f0101d24	obj/kern/kernel.asm	/^f0101d24:	74 24                	je     f0101d4a <check_page+0x39f>$/;"	l
f0101d26	obj/kern/kernel.asm	/^f0101d26:	c7 44 24 0c cc 71 10 	movl   $0xf01071cc,0xc(%esp)$/;"	l
f0101d2d	obj/kern/kernel.asm	/^f0101d2d:	f0 $/;"	l
f0101d2e	obj/kern/kernel.asm	/^f0101d2e:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0101d35	obj/kern/kernel.asm	/^f0101d35:	f0 $/;"	l
f0101d36	obj/kern/kernel.asm	/^f0101d36:	c7 44 24 04 f6 03 00 	movl   $0x3f6,0x4(%esp)$/;"	l
f0101d3d	obj/kern/kernel.asm	/^f0101d3d:	00 $/;"	l
f0101d3e	obj/kern/kernel.asm	/^f0101d3e:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0101d45	obj/kern/kernel.asm	/^f0101d45:	e8 3b e3 ff ff       	call   f0100085 <_panic>$/;"	l
f0101d4a	obj/kern/kernel.asm	/^f0101d4a:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0101d4f	obj/kern/kernel.asm	/^f0101d4f:	74 24                	je     f0101d75 <check_page+0x3ca>$/;"	l
f0101d51	obj/kern/kernel.asm	/^f0101d51:	c7 44 24 0c ff 77 10 	movl   $0xf01077ff,0xc(%esp)$/;"	l
f0101d58	obj/kern/kernel.asm	/^f0101d58:	f0 $/;"	l
f0101d59	obj/kern/kernel.asm	/^f0101d59:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0101d60	obj/kern/kernel.asm	/^f0101d60:	f0 $/;"	l
f0101d61	obj/kern/kernel.asm	/^f0101d61:	c7 44 24 04 f7 03 00 	movl   $0x3f7,0x4(%esp)$/;"	l
f0101d68	obj/kern/kernel.asm	/^f0101d68:	00 $/;"	l
f0101d69	obj/kern/kernel.asm	/^f0101d69:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0101d70	obj/kern/kernel.asm	/^f0101d70:	e8 10 e3 ff ff       	call   f0100085 <_panic>$/;"	l
f0101d75	obj/kern/kernel.asm	/^f0101d75:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101d7c	obj/kern/kernel.asm	/^f0101d7c:	e8 86 f7 ff ff       	call   f0101507 <page_alloc>$/;"	l
f0101d81	obj/kern/kernel.asm	/^f0101d81:	85 c0                	test   %eax,%eax$/;"	l
f0101d83	obj/kern/kernel.asm	/^f0101d83:	74 24                	je     f0101da9 <check_page+0x3fe>$/;"	l
f0101d85	obj/kern/kernel.asm	/^f0101d85:	c7 44 24 0c ce 77 10 	movl   $0xf01077ce,0xc(%esp)$/;"	l
f0101d8c	obj/kern/kernel.asm	/^f0101d8c:	f0 $/;"	l
f0101d8d	obj/kern/kernel.asm	/^f0101d8d:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0101d94	obj/kern/kernel.asm	/^f0101d94:	f0 $/;"	l
f0101d95	obj/kern/kernel.asm	/^f0101d95:	c7 44 24 04 fa 03 00 	movl   $0x3fa,0x4(%esp)$/;"	l
f0101d9c	obj/kern/kernel.asm	/^f0101d9c:	00 $/;"	l
f0101d9d	obj/kern/kernel.asm	/^f0101d9d:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0101da4	obj/kern/kernel.asm	/^f0101da4:	e8 dc e2 ff ff       	call   f0100085 <_panic>$/;"	l
f0101da9	obj/kern/kernel.asm	/^f0101da9:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0101db0	obj/kern/kernel.asm	/^f0101db0:	00 $/;"	l
f0101db1	obj/kern/kernel.asm	/^f0101db1:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101db8	obj/kern/kernel.asm	/^f0101db8:	00 $/;"	l
f0101db9	obj/kern/kernel.asm	/^f0101db9:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101dbd	obj/kern/kernel.asm	/^f0101dbd:	a1 ec ce 22 f0       	mov    0xf022ceec,%eax$/;"	l
f0101dc2	obj/kern/kernel.asm	/^f0101dc2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101dc5	obj/kern/kernel.asm	/^f0101dc5:	e8 c8 fa ff ff       	call   f0101892 <page_insert>$/;"	l
f0101dca	obj/kern/kernel.asm	/^f0101dca:	85 c0                	test   %eax,%eax$/;"	l
f0101dcc	obj/kern/kernel.asm	/^f0101dcc:	74 24                	je     f0101df2 <check_page+0x447>$/;"	l
f0101dce	obj/kern/kernel.asm	/^f0101dce:	c7 44 24 0c 90 71 10 	movl   $0xf0107190,0xc(%esp)$/;"	l
f0101dd5	obj/kern/kernel.asm	/^f0101dd5:	f0 $/;"	l
f0101dd6	obj/kern/kernel.asm	/^f0101dd6:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0101ddd	obj/kern/kernel.asm	/^f0101ddd:	f0 $/;"	l
f0101dde	obj/kern/kernel.asm	/^f0101dde:	c7 44 24 04 fd 03 00 	movl   $0x3fd,0x4(%esp)$/;"	l
f0101de5	obj/kern/kernel.asm	/^f0101de5:	00 $/;"	l
f0101de6	obj/kern/kernel.asm	/^f0101de6:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0101ded	obj/kern/kernel.asm	/^f0101ded:	e8 93 e2 ff ff       	call   f0100085 <_panic>$/;"	l
f0101df2	obj/kern/kernel.asm	/^f0101df2:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101df7	obj/kern/kernel.asm	/^f0101df7:	a1 ec ce 22 f0       	mov    0xf022ceec,%eax$/;"	l
f0101dfc	obj/kern/kernel.asm	/^f0101dfc:	e8 80 f0 ff ff       	call   f0100e81 <check_va2pa>$/;"	l
f0101e01	obj/kern/kernel.asm	/^f0101e01:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
f0101e04	obj/kern/kernel.asm	/^f0101e04:	2b 15 f0 ce 22 f0    	sub    0xf022cef0,%edx$/;"	l
f0101e0a	obj/kern/kernel.asm	/^f0101e0a:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101e0d	obj/kern/kernel.asm	/^f0101e0d:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101e10	obj/kern/kernel.asm	/^f0101e10:	39 d0                	cmp    %edx,%eax$/;"	l
f0101e12	obj/kern/kernel.asm	/^f0101e12:	74 24                	je     f0101e38 <check_page+0x48d>$/;"	l
f0101e14	obj/kern/kernel.asm	/^f0101e14:	c7 44 24 0c cc 71 10 	movl   $0xf01071cc,0xc(%esp)$/;"	l
f0101e1b	obj/kern/kernel.asm	/^f0101e1b:	f0 $/;"	l
f0101e1c	obj/kern/kernel.asm	/^f0101e1c:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0101e23	obj/kern/kernel.asm	/^f0101e23:	f0 $/;"	l
f0101e24	obj/kern/kernel.asm	/^f0101e24:	c7 44 24 04 fe 03 00 	movl   $0x3fe,0x4(%esp)$/;"	l
f0101e2b	obj/kern/kernel.asm	/^f0101e2b:	00 $/;"	l
f0101e2c	obj/kern/kernel.asm	/^f0101e2c:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0101e33	obj/kern/kernel.asm	/^f0101e33:	e8 4d e2 ff ff       	call   f0100085 <_panic>$/;"	l
f0101e38	obj/kern/kernel.asm	/^f0101e38:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0101e3d	obj/kern/kernel.asm	/^f0101e3d:	74 24                	je     f0101e63 <check_page+0x4b8>$/;"	l
f0101e3f	obj/kern/kernel.asm	/^f0101e3f:	c7 44 24 0c ff 77 10 	movl   $0xf01077ff,0xc(%esp)$/;"	l
f0101e46	obj/kern/kernel.asm	/^f0101e46:	f0 $/;"	l
f0101e47	obj/kern/kernel.asm	/^f0101e47:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0101e4e	obj/kern/kernel.asm	/^f0101e4e:	f0 $/;"	l
f0101e4f	obj/kern/kernel.asm	/^f0101e4f:	c7 44 24 04 ff 03 00 	movl   $0x3ff,0x4(%esp)$/;"	l
f0101e56	obj/kern/kernel.asm	/^f0101e56:	00 $/;"	l
f0101e57	obj/kern/kernel.asm	/^f0101e57:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0101e5e	obj/kern/kernel.asm	/^f0101e5e:	e8 22 e2 ff ff       	call   f0100085 <_panic>$/;"	l
f0101e63	obj/kern/kernel.asm	/^f0101e63:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101e6a	obj/kern/kernel.asm	/^f0101e6a:	e8 98 f6 ff ff       	call   f0101507 <page_alloc>$/;"	l
f0101e6f	obj/kern/kernel.asm	/^f0101e6f:	85 c0                	test   %eax,%eax$/;"	l
f0101e71	obj/kern/kernel.asm	/^f0101e71:	74 24                	je     f0101e97 <check_page+0x4ec>$/;"	l
f0101e73	obj/kern/kernel.asm	/^f0101e73:	c7 44 24 0c ce 77 10 	movl   $0xf01077ce,0xc(%esp)$/;"	l
f0101e7a	obj/kern/kernel.asm	/^f0101e7a:	f0 $/;"	l
f0101e7b	obj/kern/kernel.asm	/^f0101e7b:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0101e82	obj/kern/kernel.asm	/^f0101e82:	f0 $/;"	l
f0101e83	obj/kern/kernel.asm	/^f0101e83:	c7 44 24 04 03 04 00 	movl   $0x403,0x4(%esp)$/;"	l
f0101e8a	obj/kern/kernel.asm	/^f0101e8a:	00 $/;"	l
f0101e8b	obj/kern/kernel.asm	/^f0101e8b:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0101e92	obj/kern/kernel.asm	/^f0101e92:	e8 ee e1 ff ff       	call   f0100085 <_panic>$/;"	l
f0101e97	obj/kern/kernel.asm	/^f0101e97:	a1 ec ce 22 f0       	mov    0xf022ceec,%eax$/;"	l
f0101e9c	obj/kern/kernel.asm	/^f0101e9c:	8b 00                	mov    (%eax),%eax$/;"	l
f0101e9e	obj/kern/kernel.asm	/^f0101e9e:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101ea3	obj/kern/kernel.asm	/^f0101ea3:	89 c2                	mov    %eax,%edx$/;"	l
f0101ea5	obj/kern/kernel.asm	/^f0101ea5:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101ea8	obj/kern/kernel.asm	/^f0101ea8:	3b 15 e8 ce 22 f0    	cmp    0xf022cee8,%edx$/;"	l
f0101eae	obj/kern/kernel.asm	/^f0101eae:	72 20                	jb     f0101ed0 <check_page+0x525>$/;"	l
f0101eb0	obj/kern/kernel.asm	/^f0101eb0:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101eb4	obj/kern/kernel.asm	/^f0101eb4:	c7 44 24 08 8c 6a 10 	movl   $0xf0106a8c,0x8(%esp)$/;"	l
f0101ebb	obj/kern/kernel.asm	/^f0101ebb:	f0 $/;"	l
f0101ebc	obj/kern/kernel.asm	/^f0101ebc:	c7 44 24 04 06 04 00 	movl   $0x406,0x4(%esp)$/;"	l
f0101ec3	obj/kern/kernel.asm	/^f0101ec3:	00 $/;"	l
f0101ec4	obj/kern/kernel.asm	/^f0101ec4:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0101ecb	obj/kern/kernel.asm	/^f0101ecb:	e8 b5 e1 ff ff       	call   f0100085 <_panic>$/;"	l
f0101ed0	obj/kern/kernel.asm	/^f0101ed0:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101ed5	obj/kern/kernel.asm	/^f0101ed5:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0101ed8	obj/kern/kernel.asm	/^f0101ed8:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0101edf	obj/kern/kernel.asm	/^f0101edf:	00 $/;"	l
f0101ee0	obj/kern/kernel.asm	/^f0101ee0:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0101ee7	obj/kern/kernel.asm	/^f0101ee7:	00 $/;"	l
f0101ee8	obj/kern/kernel.asm	/^f0101ee8:	a1 ec ce 22 f0       	mov    0xf022ceec,%eax$/;"	l
f0101eed	obj/kern/kernel.asm	/^f0101eed:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101ef0	obj/kern/kernel.asm	/^f0101ef0:	e8 90 f6 ff ff       	call   f0101585 <pgdir_walk>$/;"	l
f0101ef5	obj/kern/kernel.asm	/^f0101ef5:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0101ef8	obj/kern/kernel.asm	/^f0101ef8:	83 c2 04             	add    $0x4,%edx$/;"	l
f0101efb	obj/kern/kernel.asm	/^f0101efb:	39 d0                	cmp    %edx,%eax$/;"	l
f0101efd	obj/kern/kernel.asm	/^f0101efd:	74 24                	je     f0101f23 <check_page+0x578>$/;"	l
f0101eff	obj/kern/kernel.asm	/^f0101eff:	c7 44 24 0c fc 71 10 	movl   $0xf01071fc,0xc(%esp)$/;"	l
f0101f06	obj/kern/kernel.asm	/^f0101f06:	f0 $/;"	l
f0101f07	obj/kern/kernel.asm	/^f0101f07:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0101f0e	obj/kern/kernel.asm	/^f0101f0e:	f0 $/;"	l
f0101f0f	obj/kern/kernel.asm	/^f0101f0f:	c7 44 24 04 07 04 00 	movl   $0x407,0x4(%esp)$/;"	l
f0101f16	obj/kern/kernel.asm	/^f0101f16:	00 $/;"	l
f0101f17	obj/kern/kernel.asm	/^f0101f17:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0101f1e	obj/kern/kernel.asm	/^f0101f1e:	e8 62 e1 ff ff       	call   f0100085 <_panic>$/;"	l
f0101f23	obj/kern/kernel.asm	/^f0101f23:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
f0101f2a	obj/kern/kernel.asm	/^f0101f2a:	00 $/;"	l
f0101f2b	obj/kern/kernel.asm	/^f0101f2b:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101f32	obj/kern/kernel.asm	/^f0101f32:	00 $/;"	l
f0101f33	obj/kern/kernel.asm	/^f0101f33:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101f37	obj/kern/kernel.asm	/^f0101f37:	a1 ec ce 22 f0       	mov    0xf022ceec,%eax$/;"	l
f0101f3c	obj/kern/kernel.asm	/^f0101f3c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101f3f	obj/kern/kernel.asm	/^f0101f3f:	e8 4e f9 ff ff       	call   f0101892 <page_insert>$/;"	l
f0101f44	obj/kern/kernel.asm	/^f0101f44:	85 c0                	test   %eax,%eax$/;"	l
f0101f46	obj/kern/kernel.asm	/^f0101f46:	74 24                	je     f0101f6c <check_page+0x5c1>$/;"	l
f0101f48	obj/kern/kernel.asm	/^f0101f48:	c7 44 24 0c 3c 72 10 	movl   $0xf010723c,0xc(%esp)$/;"	l
f0101f4f	obj/kern/kernel.asm	/^f0101f4f:	f0 $/;"	l
f0101f50	obj/kern/kernel.asm	/^f0101f50:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0101f57	obj/kern/kernel.asm	/^f0101f57:	f0 $/;"	l
f0101f58	obj/kern/kernel.asm	/^f0101f58:	c7 44 24 04 0a 04 00 	movl   $0x40a,0x4(%esp)$/;"	l
f0101f5f	obj/kern/kernel.asm	/^f0101f5f:	00 $/;"	l
f0101f60	obj/kern/kernel.asm	/^f0101f60:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0101f67	obj/kern/kernel.asm	/^f0101f67:	e8 19 e1 ff ff       	call   f0100085 <_panic>$/;"	l
f0101f6c	obj/kern/kernel.asm	/^f0101f6c:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101f71	obj/kern/kernel.asm	/^f0101f71:	a1 ec ce 22 f0       	mov    0xf022ceec,%eax$/;"	l
f0101f76	obj/kern/kernel.asm	/^f0101f76:	e8 06 ef ff ff       	call   f0100e81 <check_va2pa>$/;"	l
f0101f7b	obj/kern/kernel.asm	/^f0101f7b:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
f0101f7e	obj/kern/kernel.asm	/^f0101f7e:	2b 15 f0 ce 22 f0    	sub    0xf022cef0,%edx$/;"	l
f0101f84	obj/kern/kernel.asm	/^f0101f84:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101f87	obj/kern/kernel.asm	/^f0101f87:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101f8a	obj/kern/kernel.asm	/^f0101f8a:	39 d0                	cmp    %edx,%eax$/;"	l
f0101f8c	obj/kern/kernel.asm	/^f0101f8c:	74 24                	je     f0101fb2 <check_page+0x607>$/;"	l
f0101f8e	obj/kern/kernel.asm	/^f0101f8e:	c7 44 24 0c cc 71 10 	movl   $0xf01071cc,0xc(%esp)$/;"	l
f0101f95	obj/kern/kernel.asm	/^f0101f95:	f0 $/;"	l
f0101f96	obj/kern/kernel.asm	/^f0101f96:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0101f9d	obj/kern/kernel.asm	/^f0101f9d:	f0 $/;"	l
f0101f9e	obj/kern/kernel.asm	/^f0101f9e:	c7 44 24 04 0b 04 00 	movl   $0x40b,0x4(%esp)$/;"	l
f0101fa5	obj/kern/kernel.asm	/^f0101fa5:	00 $/;"	l
f0101fa6	obj/kern/kernel.asm	/^f0101fa6:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0101fad	obj/kern/kernel.asm	/^f0101fad:	e8 d3 e0 ff ff       	call   f0100085 <_panic>$/;"	l
f0101fb2	obj/kern/kernel.asm	/^f0101fb2:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0101fb7	obj/kern/kernel.asm	/^f0101fb7:	74 24                	je     f0101fdd <check_page+0x632>$/;"	l
f0101fb9	obj/kern/kernel.asm	/^f0101fb9:	c7 44 24 0c ff 77 10 	movl   $0xf01077ff,0xc(%esp)$/;"	l
f0101fc0	obj/kern/kernel.asm	/^f0101fc0:	f0 $/;"	l
f0101fc1	obj/kern/kernel.asm	/^f0101fc1:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0101fc8	obj/kern/kernel.asm	/^f0101fc8:	f0 $/;"	l
f0101fc9	obj/kern/kernel.asm	/^f0101fc9:	c7 44 24 04 0c 04 00 	movl   $0x40c,0x4(%esp)$/;"	l
f0101fd0	obj/kern/kernel.asm	/^f0101fd0:	00 $/;"	l
f0101fd1	obj/kern/kernel.asm	/^f0101fd1:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0101fd8	obj/kern/kernel.asm	/^f0101fd8:	e8 a8 e0 ff ff       	call   f0100085 <_panic>$/;"	l
f0101fdd	obj/kern/kernel.asm	/^f0101fdd:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0101fe4	obj/kern/kernel.asm	/^f0101fe4:	00 $/;"	l
f0101fe5	obj/kern/kernel.asm	/^f0101fe5:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0101fec	obj/kern/kernel.asm	/^f0101fec:	00 $/;"	l
f0101fed	obj/kern/kernel.asm	/^f0101fed:	a1 ec ce 22 f0       	mov    0xf022ceec,%eax$/;"	l
f0101ff2	obj/kern/kernel.asm	/^f0101ff2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101ff5	obj/kern/kernel.asm	/^f0101ff5:	e8 8b f5 ff ff       	call   f0101585 <pgdir_walk>$/;"	l
f0101ffa	obj/kern/kernel.asm	/^f0101ffa:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0101ffd	obj/kern/kernel.asm	/^f0101ffd:	75 24                	jne    f0102023 <check_page+0x678>$/;"	l
f0101fff	obj/kern/kernel.asm	/^f0101fff:	c7 44 24 0c 7c 72 10 	movl   $0xf010727c,0xc(%esp)$/;"	l
f0102006	obj/kern/kernel.asm	/^f0102006:	f0 $/;"	l
f0102007	obj/kern/kernel.asm	/^f0102007:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f010200e	obj/kern/kernel.asm	/^f010200e:	f0 $/;"	l
f010200f	obj/kern/kernel.asm	/^f010200f:	c7 44 24 04 0d 04 00 	movl   $0x40d,0x4(%esp)$/;"	l
f0102016	obj/kern/kernel.asm	/^f0102016:	00 $/;"	l
f0102017	obj/kern/kernel.asm	/^f0102017:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f010201e	obj/kern/kernel.asm	/^f010201e:	e8 62 e0 ff ff       	call   f0100085 <_panic>$/;"	l
f0102023	obj/kern/kernel.asm	/^f0102023:	a1 ec ce 22 f0       	mov    0xf022ceec,%eax$/;"	l
f0102028	obj/kern/kernel.asm	/^f0102028:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f010202b	obj/kern/kernel.asm	/^f010202b:	75 24                	jne    f0102051 <check_page+0x6a6>$/;"	l
f010202d	obj/kern/kernel.asm	/^f010202d:	c7 44 24 0c 10 78 10 	movl   $0xf0107810,0xc(%esp)$/;"	l
f0102034	obj/kern/kernel.asm	/^f0102034:	f0 $/;"	l
f0102035	obj/kern/kernel.asm	/^f0102035:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f010203c	obj/kern/kernel.asm	/^f010203c:	f0 $/;"	l
f010203d	obj/kern/kernel.asm	/^f010203d:	c7 44 24 04 0e 04 00 	movl   $0x40e,0x4(%esp)$/;"	l
f0102044	obj/kern/kernel.asm	/^f0102044:	00 $/;"	l
f0102045	obj/kern/kernel.asm	/^f0102045:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f010204c	obj/kern/kernel.asm	/^f010204c:	e8 34 e0 ff ff       	call   f0100085 <_panic>$/;"	l
f0102051	obj/kern/kernel.asm	/^f0102051:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0102058	obj/kern/kernel.asm	/^f0102058:	00 $/;"	l
f0102059	obj/kern/kernel.asm	/^f0102059:	c7 44 24 08 00 00 40 	movl   $0x400000,0x8(%esp)$/;"	l
f0102060	obj/kern/kernel.asm	/^f0102060:	00 $/;"	l
f0102061	obj/kern/kernel.asm	/^f0102061:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0102065	obj/kern/kernel.asm	/^f0102065:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102068	obj/kern/kernel.asm	/^f0102068:	e8 25 f8 ff ff       	call   f0101892 <page_insert>$/;"	l
f010206d	obj/kern/kernel.asm	/^f010206d:	85 c0                	test   %eax,%eax$/;"	l
f010206f	obj/kern/kernel.asm	/^f010206f:	78 24                	js     f0102095 <check_page+0x6ea>$/;"	l
f0102071	obj/kern/kernel.asm	/^f0102071:	c7 44 24 0c b0 72 10 	movl   $0xf01072b0,0xc(%esp)$/;"	l
f0102078	obj/kern/kernel.asm	/^f0102078:	f0 $/;"	l
f0102079	obj/kern/kernel.asm	/^f0102079:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0102080	obj/kern/kernel.asm	/^f0102080:	f0 $/;"	l
f0102081	obj/kern/kernel.asm	/^f0102081:	c7 44 24 04 11 04 00 	movl   $0x411,0x4(%esp)$/;"	l
f0102088	obj/kern/kernel.asm	/^f0102088:	00 $/;"	l
f0102089	obj/kern/kernel.asm	/^f0102089:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0102090	obj/kern/kernel.asm	/^f0102090:	e8 f0 df ff ff       	call   f0100085 <_panic>$/;"	l
f0102095	obj/kern/kernel.asm	/^f0102095:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f010209c	obj/kern/kernel.asm	/^f010209c:	00 $/;"	l
f010209d	obj/kern/kernel.asm	/^f010209d:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01020a4	obj/kern/kernel.asm	/^f01020a4:	00 $/;"	l
f01020a5	obj/kern/kernel.asm	/^f01020a5:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01020a9	obj/kern/kernel.asm	/^f01020a9:	a1 ec ce 22 f0       	mov    0xf022ceec,%eax$/;"	l
f01020ae	obj/kern/kernel.asm	/^f01020ae:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01020b1	obj/kern/kernel.asm	/^f01020b1:	e8 dc f7 ff ff       	call   f0101892 <page_insert>$/;"	l
f01020b6	obj/kern/kernel.asm	/^f01020b6:	85 c0                	test   %eax,%eax$/;"	l
f01020b8	obj/kern/kernel.asm	/^f01020b8:	74 24                	je     f01020de <check_page+0x733>$/;"	l
f01020ba	obj/kern/kernel.asm	/^f01020ba:	c7 44 24 0c e8 72 10 	movl   $0xf01072e8,0xc(%esp)$/;"	l
f01020c1	obj/kern/kernel.asm	/^f01020c1:	f0 $/;"	l
f01020c2	obj/kern/kernel.asm	/^f01020c2:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f01020c9	obj/kern/kernel.asm	/^f01020c9:	f0 $/;"	l
f01020ca	obj/kern/kernel.asm	/^f01020ca:	c7 44 24 04 14 04 00 	movl   $0x414,0x4(%esp)$/;"	l
f01020d1	obj/kern/kernel.asm	/^f01020d1:	00 $/;"	l
f01020d2	obj/kern/kernel.asm	/^f01020d2:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f01020d9	obj/kern/kernel.asm	/^f01020d9:	e8 a7 df ff ff       	call   f0100085 <_panic>$/;"	l
f01020de	obj/kern/kernel.asm	/^f01020de:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01020e5	obj/kern/kernel.asm	/^f01020e5:	00 $/;"	l
f01020e6	obj/kern/kernel.asm	/^f01020e6:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f01020ed	obj/kern/kernel.asm	/^f01020ed:	00 $/;"	l
f01020ee	obj/kern/kernel.asm	/^f01020ee:	a1 ec ce 22 f0       	mov    0xf022ceec,%eax$/;"	l
f01020f3	obj/kern/kernel.asm	/^f01020f3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01020f6	obj/kern/kernel.asm	/^f01020f6:	e8 8a f4 ff ff       	call   f0101585 <pgdir_walk>$/;"	l
f01020fb	obj/kern/kernel.asm	/^f01020fb:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f01020fe	obj/kern/kernel.asm	/^f01020fe:	74 24                	je     f0102124 <check_page+0x779>$/;"	l
f0102100	obj/kern/kernel.asm	/^f0102100:	c7 44 24 0c 24 73 10 	movl   $0xf0107324,0xc(%esp)$/;"	l
f0102107	obj/kern/kernel.asm	/^f0102107:	f0 $/;"	l
f0102108	obj/kern/kernel.asm	/^f0102108:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f010210f	obj/kern/kernel.asm	/^f010210f:	f0 $/;"	l
f0102110	obj/kern/kernel.asm	/^f0102110:	c7 44 24 04 15 04 00 	movl   $0x415,0x4(%esp)$/;"	l
f0102117	obj/kern/kernel.asm	/^f0102117:	00 $/;"	l
f0102118	obj/kern/kernel.asm	/^f0102118:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f010211f	obj/kern/kernel.asm	/^f010211f:	e8 61 df ff ff       	call   f0100085 <_panic>$/;"	l
f0102124	obj/kern/kernel.asm	/^f0102124:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102129	obj/kern/kernel.asm	/^f0102129:	a1 ec ce 22 f0       	mov    0xf022ceec,%eax$/;"	l
f010212e	obj/kern/kernel.asm	/^f010212e:	e8 4e ed ff ff       	call   f0100e81 <check_va2pa>$/;"	l
f0102133	obj/kern/kernel.asm	/^f0102133:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0102136	obj/kern/kernel.asm	/^f0102136:	2b 15 f0 ce 22 f0    	sub    0xf022cef0,%edx$/;"	l
f010213c	obj/kern/kernel.asm	/^f010213c:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f010213f	obj/kern/kernel.asm	/^f010213f:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102142	obj/kern/kernel.asm	/^f0102142:	39 d0                	cmp    %edx,%eax$/;"	l
f0102144	obj/kern/kernel.asm	/^f0102144:	74 24                	je     f010216a <check_page+0x7bf>$/;"	l
f0102146	obj/kern/kernel.asm	/^f0102146:	c7 44 24 0c 5c 73 10 	movl   $0xf010735c,0xc(%esp)$/;"	l
f010214d	obj/kern/kernel.asm	/^f010214d:	f0 $/;"	l
f010214e	obj/kern/kernel.asm	/^f010214e:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0102155	obj/kern/kernel.asm	/^f0102155:	f0 $/;"	l
f0102156	obj/kern/kernel.asm	/^f0102156:	c7 44 24 04 18 04 00 	movl   $0x418,0x4(%esp)$/;"	l
f010215d	obj/kern/kernel.asm	/^f010215d:	00 $/;"	l
f010215e	obj/kern/kernel.asm	/^f010215e:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0102165	obj/kern/kernel.asm	/^f0102165:	e8 1b df ff ff       	call   f0100085 <_panic>$/;"	l
f010216a	obj/kern/kernel.asm	/^f010216a:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f010216f	obj/kern/kernel.asm	/^f010216f:	a1 ec ce 22 f0       	mov    0xf022ceec,%eax$/;"	l
f0102174	obj/kern/kernel.asm	/^f0102174:	e8 08 ed ff ff       	call   f0100e81 <check_va2pa>$/;"	l
f0102179	obj/kern/kernel.asm	/^f0102179:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f010217c	obj/kern/kernel.asm	/^f010217c:	2b 15 f0 ce 22 f0    	sub    0xf022cef0,%edx$/;"	l
f0102182	obj/kern/kernel.asm	/^f0102182:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102185	obj/kern/kernel.asm	/^f0102185:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102188	obj/kern/kernel.asm	/^f0102188:	39 d0                	cmp    %edx,%eax$/;"	l
f010218a	obj/kern/kernel.asm	/^f010218a:	74 24                	je     f01021b0 <check_page+0x805>$/;"	l
f010218c	obj/kern/kernel.asm	/^f010218c:	c7 44 24 0c 88 73 10 	movl   $0xf0107388,0xc(%esp)$/;"	l
f0102193	obj/kern/kernel.asm	/^f0102193:	f0 $/;"	l
f0102194	obj/kern/kernel.asm	/^f0102194:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f010219b	obj/kern/kernel.asm	/^f010219b:	f0 $/;"	l
f010219c	obj/kern/kernel.asm	/^f010219c:	c7 44 24 04 19 04 00 	movl   $0x419,0x4(%esp)$/;"	l
f01021a3	obj/kern/kernel.asm	/^f01021a3:	00 $/;"	l
f01021a4	obj/kern/kernel.asm	/^f01021a4:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f01021ab	obj/kern/kernel.asm	/^f01021ab:	e8 d5 de ff ff       	call   f0100085 <_panic>$/;"	l
f01021b0	obj/kern/kernel.asm	/^f01021b0:	66 83 7f 04 02       	cmpw   $0x2,0x4(%edi)$/;"	l
f01021b5	obj/kern/kernel.asm	/^f01021b5:	74 24                	je     f01021db <check_page+0x830>$/;"	l
f01021b7	obj/kern/kernel.asm	/^f01021b7:	c7 44 24 0c 26 78 10 	movl   $0xf0107826,0xc(%esp)$/;"	l
f01021be	obj/kern/kernel.asm	/^f01021be:	f0 $/;"	l
f01021bf	obj/kern/kernel.asm	/^f01021bf:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f01021c6	obj/kern/kernel.asm	/^f01021c6:	f0 $/;"	l
f01021c7	obj/kern/kernel.asm	/^f01021c7:	c7 44 24 04 1b 04 00 	movl   $0x41b,0x4(%esp)$/;"	l
f01021ce	obj/kern/kernel.asm	/^f01021ce:	00 $/;"	l
f01021cf	obj/kern/kernel.asm	/^f01021cf:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f01021d6	obj/kern/kernel.asm	/^f01021d6:	e8 aa de ff ff       	call   f0100085 <_panic>$/;"	l
f01021db	obj/kern/kernel.asm	/^f01021db:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f01021e0	obj/kern/kernel.asm	/^f01021e0:	74 24                	je     f0102206 <check_page+0x85b>$/;"	l
f01021e2	obj/kern/kernel.asm	/^f01021e2:	c7 44 24 0c 37 78 10 	movl   $0xf0107837,0xc(%esp)$/;"	l
f01021e9	obj/kern/kernel.asm	/^f01021e9:	f0 $/;"	l
f01021ea	obj/kern/kernel.asm	/^f01021ea:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f01021f1	obj/kern/kernel.asm	/^f01021f1:	f0 $/;"	l
f01021f2	obj/kern/kernel.asm	/^f01021f2:	c7 44 24 04 1c 04 00 	movl   $0x41c,0x4(%esp)$/;"	l
f01021f9	obj/kern/kernel.asm	/^f01021f9:	00 $/;"	l
f01021fa	obj/kern/kernel.asm	/^f01021fa:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0102201	obj/kern/kernel.asm	/^f0102201:	e8 7f de ff ff       	call   f0100085 <_panic>$/;"	l
f0102206	obj/kern/kernel.asm	/^f0102206:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010220d	obj/kern/kernel.asm	/^f010220d:	e8 f5 f2 ff ff       	call   f0101507 <page_alloc>$/;"	l
f0102212	obj/kern/kernel.asm	/^f0102212:	85 c0                	test   %eax,%eax$/;"	l
f0102214	obj/kern/kernel.asm	/^f0102214:	74 04                	je     f010221a <check_page+0x86f>$/;"	l
f0102216	obj/kern/kernel.asm	/^f0102216:	39 c3                	cmp    %eax,%ebx$/;"	l
f0102218	obj/kern/kernel.asm	/^f0102218:	74 24                	je     f010223e <check_page+0x893>$/;"	l
f010221a	obj/kern/kernel.asm	/^f010221a:	c7 44 24 0c b8 73 10 	movl   $0xf01073b8,0xc(%esp)$/;"	l
f0102221	obj/kern/kernel.asm	/^f0102221:	f0 $/;"	l
f0102222	obj/kern/kernel.asm	/^f0102222:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0102229	obj/kern/kernel.asm	/^f0102229:	f0 $/;"	l
f010222a	obj/kern/kernel.asm	/^f010222a:	c7 44 24 04 1f 04 00 	movl   $0x41f,0x4(%esp)$/;"	l
f0102231	obj/kern/kernel.asm	/^f0102231:	00 $/;"	l
f0102232	obj/kern/kernel.asm	/^f0102232:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0102239	obj/kern/kernel.asm	/^f0102239:	e8 47 de ff ff       	call   f0100085 <_panic>$/;"	l
f010223e	obj/kern/kernel.asm	/^f010223e:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0102245	obj/kern/kernel.asm	/^f0102245:	00 $/;"	l
f0102246	obj/kern/kernel.asm	/^f0102246:	a1 ec ce 22 f0       	mov    0xf022ceec,%eax$/;"	l
f010224b	obj/kern/kernel.asm	/^f010224b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010224e	obj/kern/kernel.asm	/^f010224e:	e8 ef f5 ff ff       	call   f0101842 <page_remove>$/;"	l
f0102253	obj/kern/kernel.asm	/^f0102253:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102258	obj/kern/kernel.asm	/^f0102258:	a1 ec ce 22 f0       	mov    0xf022ceec,%eax$/;"	l
f010225d	obj/kern/kernel.asm	/^f010225d:	e8 1f ec ff ff       	call   f0100e81 <check_va2pa>$/;"	l
f0102262	obj/kern/kernel.asm	/^f0102262:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102265	obj/kern/kernel.asm	/^f0102265:	74 24                	je     f010228b <check_page+0x8e0>$/;"	l
f0102267	obj/kern/kernel.asm	/^f0102267:	c7 44 24 0c dc 73 10 	movl   $0xf01073dc,0xc(%esp)$/;"	l
f010226e	obj/kern/kernel.asm	/^f010226e:	f0 $/;"	l
f010226f	obj/kern/kernel.asm	/^f010226f:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0102276	obj/kern/kernel.asm	/^f0102276:	f0 $/;"	l
f0102277	obj/kern/kernel.asm	/^f0102277:	c7 44 24 04 23 04 00 	movl   $0x423,0x4(%esp)$/;"	l
f010227e	obj/kern/kernel.asm	/^f010227e:	00 $/;"	l
f010227f	obj/kern/kernel.asm	/^f010227f:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0102286	obj/kern/kernel.asm	/^f0102286:	e8 fa dd ff ff       	call   f0100085 <_panic>$/;"	l
f010228b	obj/kern/kernel.asm	/^f010228b:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102290	obj/kern/kernel.asm	/^f0102290:	a1 ec ce 22 f0       	mov    0xf022ceec,%eax$/;"	l
f0102295	obj/kern/kernel.asm	/^f0102295:	e8 e7 eb ff ff       	call   f0100e81 <check_va2pa>$/;"	l
f010229a	obj/kern/kernel.asm	/^f010229a:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f010229d	obj/kern/kernel.asm	/^f010229d:	2b 15 f0 ce 22 f0    	sub    0xf022cef0,%edx$/;"	l
f01022a3	obj/kern/kernel.asm	/^f01022a3:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01022a6	obj/kern/kernel.asm	/^f01022a6:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01022a9	obj/kern/kernel.asm	/^f01022a9:	39 d0                	cmp    %edx,%eax$/;"	l
f01022ab	obj/kern/kernel.asm	/^f01022ab:	74 24                	je     f01022d1 <check_page+0x926>$/;"	l
f01022ad	obj/kern/kernel.asm	/^f01022ad:	c7 44 24 0c 88 73 10 	movl   $0xf0107388,0xc(%esp)$/;"	l
f01022b4	obj/kern/kernel.asm	/^f01022b4:	f0 $/;"	l
f01022b5	obj/kern/kernel.asm	/^f01022b5:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f01022bc	obj/kern/kernel.asm	/^f01022bc:	f0 $/;"	l
f01022bd	obj/kern/kernel.asm	/^f01022bd:	c7 44 24 04 24 04 00 	movl   $0x424,0x4(%esp)$/;"	l
f01022c4	obj/kern/kernel.asm	/^f01022c4:	00 $/;"	l
f01022c5	obj/kern/kernel.asm	/^f01022c5:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f01022cc	obj/kern/kernel.asm	/^f01022cc:	e8 b4 dd ff ff       	call   f0100085 <_panic>$/;"	l
f01022d1	obj/kern/kernel.asm	/^f01022d1:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f01022d6	obj/kern/kernel.asm	/^f01022d6:	74 24                	je     f01022fc <check_page+0x951>$/;"	l
f01022d8	obj/kern/kernel.asm	/^f01022d8:	c7 44 24 0c dd 77 10 	movl   $0xf01077dd,0xc(%esp)$/;"	l
f01022df	obj/kern/kernel.asm	/^f01022df:	f0 $/;"	l
f01022e0	obj/kern/kernel.asm	/^f01022e0:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f01022e7	obj/kern/kernel.asm	/^f01022e7:	f0 $/;"	l
f01022e8	obj/kern/kernel.asm	/^f01022e8:	c7 44 24 04 25 04 00 	movl   $0x425,0x4(%esp)$/;"	l
f01022ef	obj/kern/kernel.asm	/^f01022ef:	00 $/;"	l
f01022f0	obj/kern/kernel.asm	/^f01022f0:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f01022f7	obj/kern/kernel.asm	/^f01022f7:	e8 89 dd ff ff       	call   f0100085 <_panic>$/;"	l
f01022fc	obj/kern/kernel.asm	/^f01022fc:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f0102301	obj/kern/kernel.asm	/^f0102301:	74 24                	je     f0102327 <check_page+0x97c>$/;"	l
f0102303	obj/kern/kernel.asm	/^f0102303:	c7 44 24 0c 37 78 10 	movl   $0xf0107837,0xc(%esp)$/;"	l
f010230a	obj/kern/kernel.asm	/^f010230a:	f0 $/;"	l
f010230b	obj/kern/kernel.asm	/^f010230b:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0102312	obj/kern/kernel.asm	/^f0102312:	f0 $/;"	l
f0102313	obj/kern/kernel.asm	/^f0102313:	c7 44 24 04 26 04 00 	movl   $0x426,0x4(%esp)$/;"	l
f010231a	obj/kern/kernel.asm	/^f010231a:	00 $/;"	l
f010231b	obj/kern/kernel.asm	/^f010231b:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0102322	obj/kern/kernel.asm	/^f0102322:	e8 5e dd ff ff       	call   f0100085 <_panic>$/;"	l
f0102327	obj/kern/kernel.asm	/^f0102327:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f010232e	obj/kern/kernel.asm	/^f010232e:	00 $/;"	l
f010232f	obj/kern/kernel.asm	/^f010232f:	a1 ec ce 22 f0       	mov    0xf022ceec,%eax$/;"	l
f0102334	obj/kern/kernel.asm	/^f0102334:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102337	obj/kern/kernel.asm	/^f0102337:	e8 06 f5 ff ff       	call   f0101842 <page_remove>$/;"	l
f010233c	obj/kern/kernel.asm	/^f010233c:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102341	obj/kern/kernel.asm	/^f0102341:	a1 ec ce 22 f0       	mov    0xf022ceec,%eax$/;"	l
f0102346	obj/kern/kernel.asm	/^f0102346:	e8 36 eb ff ff       	call   f0100e81 <check_va2pa>$/;"	l
f010234b	obj/kern/kernel.asm	/^f010234b:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f010234e	obj/kern/kernel.asm	/^f010234e:	74 24                	je     f0102374 <check_page+0x9c9>$/;"	l
f0102350	obj/kern/kernel.asm	/^f0102350:	c7 44 24 0c dc 73 10 	movl   $0xf01073dc,0xc(%esp)$/;"	l
f0102357	obj/kern/kernel.asm	/^f0102357:	f0 $/;"	l
f0102358	obj/kern/kernel.asm	/^f0102358:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f010235f	obj/kern/kernel.asm	/^f010235f:	f0 $/;"	l
f0102360	obj/kern/kernel.asm	/^f0102360:	c7 44 24 04 2a 04 00 	movl   $0x42a,0x4(%esp)$/;"	l
f0102367	obj/kern/kernel.asm	/^f0102367:	00 $/;"	l
f0102368	obj/kern/kernel.asm	/^f0102368:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f010236f	obj/kern/kernel.asm	/^f010236f:	e8 11 dd ff ff       	call   f0100085 <_panic>$/;"	l
f0102374	obj/kern/kernel.asm	/^f0102374:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102379	obj/kern/kernel.asm	/^f0102379:	a1 ec ce 22 f0       	mov    0xf022ceec,%eax$/;"	l
f010237e	obj/kern/kernel.asm	/^f010237e:	e8 fe ea ff ff       	call   f0100e81 <check_va2pa>$/;"	l
f0102383	obj/kern/kernel.asm	/^f0102383:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102386	obj/kern/kernel.asm	/^f0102386:	74 24                	je     f01023ac <check_page+0xa01>$/;"	l
f0102388	obj/kern/kernel.asm	/^f0102388:	c7 44 24 0c 00 74 10 	movl   $0xf0107400,0xc(%esp)$/;"	l
f010238f	obj/kern/kernel.asm	/^f010238f:	f0 $/;"	l
f0102390	obj/kern/kernel.asm	/^f0102390:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0102397	obj/kern/kernel.asm	/^f0102397:	f0 $/;"	l
f0102398	obj/kern/kernel.asm	/^f0102398:	c7 44 24 04 2b 04 00 	movl   $0x42b,0x4(%esp)$/;"	l
f010239f	obj/kern/kernel.asm	/^f010239f:	00 $/;"	l
f01023a0	obj/kern/kernel.asm	/^f01023a0:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f01023a7	obj/kern/kernel.asm	/^f01023a7:	e8 d9 dc ff ff       	call   f0100085 <_panic>$/;"	l
f01023ac	obj/kern/kernel.asm	/^f01023ac:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f01023b1	obj/kern/kernel.asm	/^f01023b1:	74 24                	je     f01023d7 <check_page+0xa2c>$/;"	l
f01023b3	obj/kern/kernel.asm	/^f01023b3:	c7 44 24 0c 48 78 10 	movl   $0xf0107848,0xc(%esp)$/;"	l
f01023ba	obj/kern/kernel.asm	/^f01023ba:	f0 $/;"	l
f01023bb	obj/kern/kernel.asm	/^f01023bb:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f01023c2	obj/kern/kernel.asm	/^f01023c2:	f0 $/;"	l
f01023c3	obj/kern/kernel.asm	/^f01023c3:	c7 44 24 04 2c 04 00 	movl   $0x42c,0x4(%esp)$/;"	l
f01023ca	obj/kern/kernel.asm	/^f01023ca:	00 $/;"	l
f01023cb	obj/kern/kernel.asm	/^f01023cb:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f01023d2	obj/kern/kernel.asm	/^f01023d2:	e8 ae dc ff ff       	call   f0100085 <_panic>$/;"	l
f01023d7	obj/kern/kernel.asm	/^f01023d7:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f01023dc	obj/kern/kernel.asm	/^f01023dc:	74 24                	je     f0102402 <check_page+0xa57>$/;"	l
f01023de	obj/kern/kernel.asm	/^f01023de:	c7 44 24 0c 37 78 10 	movl   $0xf0107837,0xc(%esp)$/;"	l
f01023e5	obj/kern/kernel.asm	/^f01023e5:	f0 $/;"	l
f01023e6	obj/kern/kernel.asm	/^f01023e6:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f01023ed	obj/kern/kernel.asm	/^f01023ed:	f0 $/;"	l
f01023ee	obj/kern/kernel.asm	/^f01023ee:	c7 44 24 04 2d 04 00 	movl   $0x42d,0x4(%esp)$/;"	l
f01023f5	obj/kern/kernel.asm	/^f01023f5:	00 $/;"	l
f01023f6	obj/kern/kernel.asm	/^f01023f6:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f01023fd	obj/kern/kernel.asm	/^f01023fd:	e8 83 dc ff ff       	call   f0100085 <_panic>$/;"	l
f0102402	obj/kern/kernel.asm	/^f0102402:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102409	obj/kern/kernel.asm	/^f0102409:	e8 f9 f0 ff ff       	call   f0101507 <page_alloc>$/;"	l
f010240e	obj/kern/kernel.asm	/^f010240e:	85 c0                	test   %eax,%eax$/;"	l
f0102410	obj/kern/kernel.asm	/^f0102410:	74 04                	je     f0102416 <check_page+0xa6b>$/;"	l
f0102412	obj/kern/kernel.asm	/^f0102412:	39 c7                	cmp    %eax,%edi$/;"	l
f0102414	obj/kern/kernel.asm	/^f0102414:	74 24                	je     f010243a <check_page+0xa8f>$/;"	l
f0102416	obj/kern/kernel.asm	/^f0102416:	c7 44 24 0c 28 74 10 	movl   $0xf0107428,0xc(%esp)$/;"	l
f010241d	obj/kern/kernel.asm	/^f010241d:	f0 $/;"	l
f010241e	obj/kern/kernel.asm	/^f010241e:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0102425	obj/kern/kernel.asm	/^f0102425:	f0 $/;"	l
f0102426	obj/kern/kernel.asm	/^f0102426:	c7 44 24 04 30 04 00 	movl   $0x430,0x4(%esp)$/;"	l
f010242d	obj/kern/kernel.asm	/^f010242d:	00 $/;"	l
f010242e	obj/kern/kernel.asm	/^f010242e:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0102435	obj/kern/kernel.asm	/^f0102435:	e8 4b dc ff ff       	call   f0100085 <_panic>$/;"	l
f010243a	obj/kern/kernel.asm	/^f010243a:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102441	obj/kern/kernel.asm	/^f0102441:	e8 c1 f0 ff ff       	call   f0101507 <page_alloc>$/;"	l
f0102446	obj/kern/kernel.asm	/^f0102446:	85 c0                	test   %eax,%eax$/;"	l
f0102448	obj/kern/kernel.asm	/^f0102448:	74 24                	je     f010246e <check_page+0xac3>$/;"	l
f010244a	obj/kern/kernel.asm	/^f010244a:	c7 44 24 0c ce 77 10 	movl   $0xf01077ce,0xc(%esp)$/;"	l
f0102451	obj/kern/kernel.asm	/^f0102451:	f0 $/;"	l
f0102452	obj/kern/kernel.asm	/^f0102452:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0102459	obj/kern/kernel.asm	/^f0102459:	f0 $/;"	l
f010245a	obj/kern/kernel.asm	/^f010245a:	c7 44 24 04 33 04 00 	movl   $0x433,0x4(%esp)$/;"	l
f0102461	obj/kern/kernel.asm	/^f0102461:	00 $/;"	l
f0102462	obj/kern/kernel.asm	/^f0102462:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0102469	obj/kern/kernel.asm	/^f0102469:	e8 17 dc ff ff       	call   f0100085 <_panic>$/;"	l
f010246e	obj/kern/kernel.asm	/^f010246e:	a1 ec ce 22 f0       	mov    0xf022ceec,%eax$/;"	l
f0102473	obj/kern/kernel.asm	/^f0102473:	8b 08                	mov    (%eax),%ecx$/;"	l
f0102475	obj/kern/kernel.asm	/^f0102475:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f010247b	obj/kern/kernel.asm	/^f010247b:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f010247e	obj/kern/kernel.asm	/^f010247e:	2b 15 f0 ce 22 f0    	sub    0xf022cef0,%edx$/;"	l
f0102484	obj/kern/kernel.asm	/^f0102484:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102487	obj/kern/kernel.asm	/^f0102487:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010248a	obj/kern/kernel.asm	/^f010248a:	39 d1                	cmp    %edx,%ecx$/;"	l
f010248c	obj/kern/kernel.asm	/^f010248c:	74 24                	je     f01024b2 <check_page+0xb07>$/;"	l
f010248e	obj/kern/kernel.asm	/^f010248e:	c7 44 24 0c 38 71 10 	movl   $0xf0107138,0xc(%esp)$/;"	l
f0102495	obj/kern/kernel.asm	/^f0102495:	f0 $/;"	l
f0102496	obj/kern/kernel.asm	/^f0102496:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f010249d	obj/kern/kernel.asm	/^f010249d:	f0 $/;"	l
f010249e	obj/kern/kernel.asm	/^f010249e:	c7 44 24 04 36 04 00 	movl   $0x436,0x4(%esp)$/;"	l
f01024a5	obj/kern/kernel.asm	/^f01024a5:	00 $/;"	l
f01024a6	obj/kern/kernel.asm	/^f01024a6:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f01024ad	obj/kern/kernel.asm	/^f01024ad:	e8 d3 db ff ff       	call   f0100085 <_panic>$/;"	l
f01024b2	obj/kern/kernel.asm	/^f01024b2:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01024b8	obj/kern/kernel.asm	/^f01024b8:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f01024bd	obj/kern/kernel.asm	/^f01024bd:	74 24                	je     f01024e3 <check_page+0xb38>$/;"	l
f01024bf	obj/kern/kernel.asm	/^f01024bf:	c7 44 24 0c ee 77 10 	movl   $0xf01077ee,0xc(%esp)$/;"	l
f01024c6	obj/kern/kernel.asm	/^f01024c6:	f0 $/;"	l
f01024c7	obj/kern/kernel.asm	/^f01024c7:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f01024ce	obj/kern/kernel.asm	/^f01024ce:	f0 $/;"	l
f01024cf	obj/kern/kernel.asm	/^f01024cf:	c7 44 24 04 38 04 00 	movl   $0x438,0x4(%esp)$/;"	l
f01024d6	obj/kern/kernel.asm	/^f01024d6:	00 $/;"	l
f01024d7	obj/kern/kernel.asm	/^f01024d7:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f01024de	obj/kern/kernel.asm	/^f01024de:	e8 a2 db ff ff       	call   f0100085 <_panic>$/;"	l
f01024e3	obj/kern/kernel.asm	/^f01024e3:	66 c7 46 04 00 00    	movw   $0x0,0x4(%esi)$/;"	l
f01024e9	obj/kern/kernel.asm	/^f01024e9:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01024ec	obj/kern/kernel.asm	/^f01024ec:	e8 23 e9 ff ff       	call   f0100e14 <page_free>$/;"	l
f01024f1	obj/kern/kernel.asm	/^f01024f1:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01024f8	obj/kern/kernel.asm	/^f01024f8:	00 $/;"	l
f01024f9	obj/kern/kernel.asm	/^f01024f9:	c7 44 24 04 00 10 40 	movl   $0x401000,0x4(%esp)$/;"	l
f0102500	obj/kern/kernel.asm	/^f0102500:	00 $/;"	l
f0102501	obj/kern/kernel.asm	/^f0102501:	a1 ec ce 22 f0       	mov    0xf022ceec,%eax$/;"	l
f0102506	obj/kern/kernel.asm	/^f0102506:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102509	obj/kern/kernel.asm	/^f0102509:	e8 77 f0 ff ff       	call   f0101585 <pgdir_walk>$/;"	l
f010250e	obj/kern/kernel.asm	/^f010250e:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102511	obj/kern/kernel.asm	/^f0102511:	8b 0d ec ce 22 f0    	mov    0xf022ceec,%ecx$/;"	l
f0102517	obj/kern/kernel.asm	/^f0102517:	83 c1 04             	add    $0x4,%ecx$/;"	l
f010251a	obj/kern/kernel.asm	/^f010251a:	8b 11                	mov    (%ecx),%edx$/;"	l
f010251c	obj/kern/kernel.asm	/^f010251c:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0102522	obj/kern/kernel.asm	/^f0102522:	89 55 cc             	mov    %edx,-0x34(%ebp)$/;"	l
f0102525	obj/kern/kernel.asm	/^f0102525:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102528	obj/kern/kernel.asm	/^f0102528:	3b 15 e8 ce 22 f0    	cmp    0xf022cee8,%edx$/;"	l
f010252e	obj/kern/kernel.asm	/^f010252e:	72 23                	jb     f0102553 <check_page+0xba8>$/;"	l
f0102530	obj/kern/kernel.asm	/^f0102530:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
f0102533	obj/kern/kernel.asm	/^f0102533:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0102537	obj/kern/kernel.asm	/^f0102537:	c7 44 24 08 8c 6a 10 	movl   $0xf0106a8c,0x8(%esp)$/;"	l
f010253e	obj/kern/kernel.asm	/^f010253e:	f0 $/;"	l
f010253f	obj/kern/kernel.asm	/^f010253f:	c7 44 24 04 3f 04 00 	movl   $0x43f,0x4(%esp)$/;"	l
f0102546	obj/kern/kernel.asm	/^f0102546:	00 $/;"	l
f0102547	obj/kern/kernel.asm	/^f0102547:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f010254e	obj/kern/kernel.asm	/^f010254e:	e8 32 db ff ff       	call   f0100085 <_panic>$/;"	l
f0102553	obj/kern/kernel.asm	/^f0102553:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
f0102556	obj/kern/kernel.asm	/^f0102556:	81 ea fc ff ff 0f    	sub    $0xffffffc,%edx$/;"	l
f010255c	obj/kern/kernel.asm	/^f010255c:	39 d0                	cmp    %edx,%eax$/;"	l
f010255e	obj/kern/kernel.asm	/^f010255e:	74 24                	je     f0102584 <check_page+0xbd9>$/;"	l
f0102560	obj/kern/kernel.asm	/^f0102560:	c7 44 24 0c 59 78 10 	movl   $0xf0107859,0xc(%esp)$/;"	l
f0102567	obj/kern/kernel.asm	/^f0102567:	f0 $/;"	l
f0102568	obj/kern/kernel.asm	/^f0102568:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f010256f	obj/kern/kernel.asm	/^f010256f:	f0 $/;"	l
f0102570	obj/kern/kernel.asm	/^f0102570:	c7 44 24 04 40 04 00 	movl   $0x440,0x4(%esp)$/;"	l
f0102577	obj/kern/kernel.asm	/^f0102577:	00 $/;"	l
f0102578	obj/kern/kernel.asm	/^f0102578:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f010257f	obj/kern/kernel.asm	/^f010257f:	e8 01 db ff ff       	call   f0100085 <_panic>$/;"	l
f0102584	obj/kern/kernel.asm	/^f0102584:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)$/;"	l
f010258a	obj/kern/kernel.asm	/^f010258a:	66 c7 46 04 00 00    	movw   $0x0,0x4(%esi)$/;"	l
f0102590	obj/kern/kernel.asm	/^f0102590:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0102593	obj/kern/kernel.asm	/^f0102593:	2b 05 f0 ce 22 f0    	sub    0xf022cef0,%eax$/;"	l
f0102599	obj/kern/kernel.asm	/^f0102599:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010259c	obj/kern/kernel.asm	/^f010259c:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010259f	obj/kern/kernel.asm	/^f010259f:	89 c2                	mov    %eax,%edx$/;"	l
f01025a1	obj/kern/kernel.asm	/^f01025a1:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01025a4	obj/kern/kernel.asm	/^f01025a4:	3b 15 e8 ce 22 f0    	cmp    0xf022cee8,%edx$/;"	l
f01025aa	obj/kern/kernel.asm	/^f01025aa:	72 20                	jb     f01025cc <check_page+0xc21>$/;"	l
f01025ac	obj/kern/kernel.asm	/^f01025ac:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01025b0	obj/kern/kernel.asm	/^f01025b0:	c7 44 24 08 8c 6a 10 	movl   $0xf0106a8c,0x8(%esp)$/;"	l
f01025b7	obj/kern/kernel.asm	/^f01025b7:	f0 $/;"	l
f01025b8	obj/kern/kernel.asm	/^f01025b8:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f01025bf	obj/kern/kernel.asm	/^f01025bf:	00 $/;"	l
f01025c0	obj/kern/kernel.asm	/^f01025c0:	c7 04 24 8d 76 10 f0 	movl   $0xf010768d,(%esp)$/;"	l
f01025c7	obj/kern/kernel.asm	/^f01025c7:	e8 b9 da ff ff       	call   f0100085 <_panic>$/;"	l
f01025cc	obj/kern/kernel.asm	/^f01025cc:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01025d3	obj/kern/kernel.asm	/^f01025d3:	00 $/;"	l
f01025d4	obj/kern/kernel.asm	/^f01025d4:	c7 44 24 04 ff 00 00 	movl   $0xff,0x4(%esp)$/;"	l
f01025db	obj/kern/kernel.asm	/^f01025db:	00 $/;"	l
f01025dc	obj/kern/kernel.asm	/^f01025dc:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01025e1	obj/kern/kernel.asm	/^f01025e1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01025e4	obj/kern/kernel.asm	/^f01025e4:	e8 1d 36 00 00       	call   f0105c06 <memset>$/;"	l
f01025e9	obj/kern/kernel.asm	/^f01025e9:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01025ec	obj/kern/kernel.asm	/^f01025ec:	e8 23 e8 ff ff       	call   f0100e14 <page_free>$/;"	l
f01025f1	obj/kern/kernel.asm	/^f01025f1:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01025f8	obj/kern/kernel.asm	/^f01025f8:	00 $/;"	l
f01025f9	obj/kern/kernel.asm	/^f01025f9:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0102600	obj/kern/kernel.asm	/^f0102600:	00 $/;"	l
f0102601	obj/kern/kernel.asm	/^f0102601:	a1 ec ce 22 f0       	mov    0xf022ceec,%eax$/;"	l
f0102606	obj/kern/kernel.asm	/^f0102606:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102609	obj/kern/kernel.asm	/^f0102609:	e8 77 ef ff ff       	call   f0101585 <pgdir_walk>$/;"	l
f010260e	obj/kern/kernel.asm	/^f010260e:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f0102611	obj/kern/kernel.asm	/^f0102611:	2b 15 f0 ce 22 f0    	sub    0xf022cef0,%edx$/;"	l
f0102617	obj/kern/kernel.asm	/^f0102617:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f010261a	obj/kern/kernel.asm	/^f010261a:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010261d	obj/kern/kernel.asm	/^f010261d:	89 d0                	mov    %edx,%eax$/;"	l
f010261f	obj/kern/kernel.asm	/^f010261f:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0102622	obj/kern/kernel.asm	/^f0102622:	3b 05 e8 ce 22 f0    	cmp    0xf022cee8,%eax$/;"	l
f0102628	obj/kern/kernel.asm	/^f0102628:	72 20                	jb     f010264a <check_page+0xc9f>$/;"	l
f010262a	obj/kern/kernel.asm	/^f010262a:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f010262e	obj/kern/kernel.asm	/^f010262e:	c7 44 24 08 8c 6a 10 	movl   $0xf0106a8c,0x8(%esp)$/;"	l
f0102635	obj/kern/kernel.asm	/^f0102635:	f0 $/;"	l
f0102636	obj/kern/kernel.asm	/^f0102636:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f010263d	obj/kern/kernel.asm	/^f010263d:	00 $/;"	l
f010263e	obj/kern/kernel.asm	/^f010263e:	c7 04 24 8d 76 10 f0 	movl   $0xf010768d,(%esp)$/;"	l
f0102645	obj/kern/kernel.asm	/^f0102645:	e8 3b da ff ff       	call   f0100085 <_panic>$/;"	l
f010264a	obj/kern/kernel.asm	/^f010264a:	8d 82 00 00 00 f0    	lea    -0x10000000(%edx),%eax$/;"	l
f0102650	obj/kern/kernel.asm	/^f0102650:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102653	obj/kern/kernel.asm	/^f0102653:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f0102656	obj/kern/kernel.asm	/^f0102656:	75 11                	jne    f0102669 <check_page+0xcbe>$/;"	l
f0102658	obj/kern/kernel.asm	/^f0102658:	8d 82 04 00 00 f0    	lea    -0xffffffc(%edx),%eax$/;"	l
f010265e	obj/kern/kernel.asm	/^f010265e:	81 ea 00 f0 ff 0f    	sub    $0xffff000,%edx$/;"	l
f0102664	obj/kern/kernel.asm	/^f0102664:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f0102667	obj/kern/kernel.asm	/^f0102667:	74 24                	je     f010268d <check_page+0xce2>$/;"	l
f0102669	obj/kern/kernel.asm	/^f0102669:	c7 44 24 0c 71 78 10 	movl   $0xf0107871,0xc(%esp)$/;"	l
f0102670	obj/kern/kernel.asm	/^f0102670:	f0 $/;"	l
f0102671	obj/kern/kernel.asm	/^f0102671:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0102678	obj/kern/kernel.asm	/^f0102678:	f0 $/;"	l
f0102679	obj/kern/kernel.asm	/^f0102679:	c7 44 24 04 4a 04 00 	movl   $0x44a,0x4(%esp)$/;"	l
f0102680	obj/kern/kernel.asm	/^f0102680:	00 $/;"	l
f0102681	obj/kern/kernel.asm	/^f0102681:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0102688	obj/kern/kernel.asm	/^f0102688:	e8 f8 d9 ff ff       	call   f0100085 <_panic>$/;"	l
f010268d	obj/kern/kernel.asm	/^f010268d:	83 c0 04             	add    $0x4,%eax$/;"	l
f0102690	obj/kern/kernel.asm	/^f0102690:	39 d0                	cmp    %edx,%eax$/;"	l
f0102692	obj/kern/kernel.asm	/^f0102692:	75 d0                	jne    f0102664 <check_page+0xcb9>$/;"	l
f0102694	obj/kern/kernel.asm	/^f0102694:	a1 ec ce 22 f0       	mov    0xf022ceec,%eax$/;"	l
f0102699	obj/kern/kernel.asm	/^f0102699:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f010269f	obj/kern/kernel.asm	/^f010269f:	66 c7 46 04 00 00    	movw   $0x0,0x4(%esi)$/;"	l
f01026a5	obj/kern/kernel.asm	/^f01026a5:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
f01026a8	obj/kern/kernel.asm	/^f01026a8:	a3 30 c2 22 f0       	mov    %eax,0xf022c230$/;"	l
f01026ad	obj/kern/kernel.asm	/^f01026ad:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01026b0	obj/kern/kernel.asm	/^f01026b0:	e8 5f e7 ff ff       	call   f0100e14 <page_free>$/;"	l
f01026b5	obj/kern/kernel.asm	/^f01026b5:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01026b8	obj/kern/kernel.asm	/^f01026b8:	e8 57 e7 ff ff       	call   f0100e14 <page_free>$/;"	l
f01026bd	obj/kern/kernel.asm	/^f01026bd:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01026c0	obj/kern/kernel.asm	/^f01026c0:	e8 4f e7 ff ff       	call   f0100e14 <page_free>$/;"	l
f01026c5	obj/kern/kernel.asm	/^f01026c5:	c7 04 24 88 78 10 f0 	movl   $0xf0107888,(%esp)$/;"	l
f01026cc	obj/kern/kernel.asm	/^f01026cc:	e8 de 1b 00 00       	call   f01042af <cprintf>$/;"	l
f01026d1	obj/kern/kernel.asm	/^f01026d1:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f01026d4	obj/kern/kernel.asm	/^f01026d4:	5b                   	pop    %ebx$/;"	l
f01026d5	obj/kern/kernel.asm	/^f01026d5:	5e                   	pop    %esi$/;"	l
f01026d6	obj/kern/kernel.asm	/^f01026d6:	5f                   	pop    %edi$/;"	l
f01026d7	obj/kern/kernel.asm	/^f01026d7:	5d                   	pop    %ebp$/;"	l
f01026d8	obj/kern/kernel.asm	/^f01026d8:	c3                   	ret    $/;"	l
f01026d9	obj/kern/kernel.asm	/^f01026d9 <mem_init>:$/;"	l
f01026d9	obj/kern/kernel.asm	/^f01026d9:	55                   	push   %ebp$/;"	l
f01026da	obj/kern/kernel.asm	/^f01026da:	89 e5                	mov    %esp,%ebp$/;"	l
f01026dc	obj/kern/kernel.asm	/^f01026dc:	57                   	push   %edi$/;"	l
f01026dd	obj/kern/kernel.asm	/^f01026dd:	56                   	push   %esi$/;"	l
f01026de	obj/kern/kernel.asm	/^f01026de:	53                   	push   %ebx$/;"	l
f01026df	obj/kern/kernel.asm	/^f01026df:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f01026e2	obj/kern/kernel.asm	/^f01026e2:	b8 15 00 00 00       	mov    $0x15,%eax$/;"	l
f01026e7	obj/kern/kernel.asm	/^f01026e7:	e8 0b e9 ff ff       	call   f0100ff7 <nvram_read>$/;"	l
f01026ec	obj/kern/kernel.asm	/^f01026ec:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f01026ef	obj/kern/kernel.asm	/^f01026ef:	89 c2                	mov    %eax,%edx$/;"	l
f01026f1	obj/kern/kernel.asm	/^f01026f1:	c1 fa 1f             	sar    $0x1f,%edx$/;"	l
f01026f4	obj/kern/kernel.asm	/^f01026f4:	c1 ea 14             	shr    $0x14,%edx$/;"	l
f01026f7	obj/kern/kernel.asm	/^f01026f7:	8d 04 02             	lea    (%edx,%eax,1),%eax$/;"	l
f01026fa	obj/kern/kernel.asm	/^f01026fa:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
f01026fd	obj/kern/kernel.asm	/^f01026fd:	a3 2c c2 22 f0       	mov    %eax,0xf022c22c$/;"	l
f0102702	obj/kern/kernel.asm	/^f0102702:	b8 17 00 00 00       	mov    $0x17,%eax$/;"	l
f0102707	obj/kern/kernel.asm	/^f0102707:	e8 eb e8 ff ff       	call   f0100ff7 <nvram_read>$/;"	l
f010270c	obj/kern/kernel.asm	/^f010270c:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f010270f	obj/kern/kernel.asm	/^f010270f:	89 c2                	mov    %eax,%edx$/;"	l
f0102711	obj/kern/kernel.asm	/^f0102711:	c1 fa 1f             	sar    $0x1f,%edx$/;"	l
f0102714	obj/kern/kernel.asm	/^f0102714:	c1 ea 14             	shr    $0x14,%edx$/;"	l
f0102717	obj/kern/kernel.asm	/^f0102717:	8d 04 02             	lea    (%edx,%eax,1),%eax$/;"	l
f010271a	obj/kern/kernel.asm	/^f010271a:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
f010271d	obj/kern/kernel.asm	/^f010271d:	85 c0                	test   %eax,%eax$/;"	l
f010271f	obj/kern/kernel.asm	/^f010271f:	74 0e                	je     f010272f <mem_init+0x56>$/;"	l
f0102721	obj/kern/kernel.asm	/^f0102721:	8d 90 00 01 00 00    	lea    0x100(%eax),%edx$/;"	l
f0102727	obj/kern/kernel.asm	/^f0102727:	89 15 e8 ce 22 f0    	mov    %edx,0xf022cee8$/;"	l
f010272d	obj/kern/kernel.asm	/^f010272d:	eb 0c                	jmp    f010273b <mem_init+0x62>$/;"	l
f010272f	obj/kern/kernel.asm	/^f010272f:	8b 15 2c c2 22 f0    	mov    0xf022c22c,%edx$/;"	l
f0102735	obj/kern/kernel.asm	/^f0102735:	89 15 e8 ce 22 f0    	mov    %edx,0xf022cee8$/;"	l
f010273b	obj/kern/kernel.asm	/^f010273b:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010273e	obj/kern/kernel.asm	/^f010273e:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f0102741	obj/kern/kernel.asm	/^f0102741:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102745	obj/kern/kernel.asm	/^f0102745:	a1 2c c2 22 f0       	mov    0xf022c22c,%eax$/;"	l
f010274a	obj/kern/kernel.asm	/^f010274a:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010274d	obj/kern/kernel.asm	/^f010274d:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f0102750	obj/kern/kernel.asm	/^f0102750:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0102754	obj/kern/kernel.asm	/^f0102754:	a1 e8 ce 22 f0       	mov    0xf022cee8,%eax$/;"	l
f0102759	obj/kern/kernel.asm	/^f0102759:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010275c	obj/kern/kernel.asm	/^f010275c:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f010275f	obj/kern/kernel.asm	/^f010275f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0102763	obj/kern/kernel.asm	/^f0102763:	c7 04 24 4c 74 10 f0 	movl   $0xf010744c,(%esp)$/;"	l
f010276a	obj/kern/kernel.asm	/^f010276a:	e8 40 1b 00 00       	call   f01042af <cprintf>$/;"	l
f010276f	obj/kern/kernel.asm	/^f010276f:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
f0102774	obj/kern/kernel.asm	/^f0102774:	e8 07 e6 ff ff       	call   f0100d80 <boot_alloc>$/;"	l
f0102779	obj/kern/kernel.asm	/^f0102779:	a3 ec ce 22 f0       	mov    %eax,0xf022ceec$/;"	l
f010277e	obj/kern/kernel.asm	/^f010277e:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0102785	obj/kern/kernel.asm	/^f0102785:	00 $/;"	l
f0102786	obj/kern/kernel.asm	/^f0102786:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010278d	obj/kern/kernel.asm	/^f010278d:	00 $/;"	l
f010278e	obj/kern/kernel.asm	/^f010278e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102791	obj/kern/kernel.asm	/^f0102791:	e8 70 34 00 00       	call   f0105c06 <memset>$/;"	l
f0102796	obj/kern/kernel.asm	/^f0102796:	a1 ec ce 22 f0       	mov    0xf022ceec,%eax$/;"	l
f010279b	obj/kern/kernel.asm	/^f010279b:	89 c2                	mov    %eax,%edx$/;"	l
f010279d	obj/kern/kernel.asm	/^f010279d:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01027a2	obj/kern/kernel.asm	/^f01027a2:	77 20                	ja     f01027c4 <mem_init+0xeb>$/;"	l
f01027a4	obj/kern/kernel.asm	/^f01027a4:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01027a8	obj/kern/kernel.asm	/^f01027a8:	c7 44 24 08 48 6a 10 	movl   $0xf0106a48,0x8(%esp)$/;"	l
f01027af	obj/kern/kernel.asm	/^f01027af:	f0 $/;"	l
f01027b0	obj/kern/kernel.asm	/^f01027b0:	c7 44 24 04 97 00 00 	movl   $0x97,0x4(%esp)$/;"	l
f01027b7	obj/kern/kernel.asm	/^f01027b7:	00 $/;"	l
f01027b8	obj/kern/kernel.asm	/^f01027b8:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f01027bf	obj/kern/kernel.asm	/^f01027bf:	e8 c1 d8 ff ff       	call   f0100085 <_panic>$/;"	l
f01027c4	obj/kern/kernel.asm	/^f01027c4:	81 c2 00 00 00 10    	add    $0x10000000,%edx$/;"	l
f01027ca	obj/kern/kernel.asm	/^f01027ca:	83 ca 05             	or     $0x5,%edx$/;"	l
f01027cd	obj/kern/kernel.asm	/^f01027cd:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f01027d3	obj/kern/kernel.asm	/^f01027d3:	a1 e8 ce 22 f0       	mov    0xf022cee8,%eax$/;"	l
f01027d8	obj/kern/kernel.asm	/^f01027d8:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f01027db	obj/kern/kernel.asm	/^f01027db:	e8 a0 e5 ff ff       	call   f0100d80 <boot_alloc>$/;"	l
f01027e0	obj/kern/kernel.asm	/^f01027e0:	a3 f0 ce 22 f0       	mov    %eax,0xf022cef0$/;"	l
f01027e5	obj/kern/kernel.asm	/^f01027e5:	b8 00 f0 01 00       	mov    $0x1f000,%eax$/;"	l
f01027ea	obj/kern/kernel.asm	/^f01027ea:	e8 91 e5 ff ff       	call   f0100d80 <boot_alloc>$/;"	l
f01027ef	obj/kern/kernel.asm	/^f01027ef:	a3 40 c2 22 f0       	mov    %eax,0xf022c240$/;"	l
f01027f4	obj/kern/kernel.asm	/^f01027f4:	e8 ee e6 ff ff       	call   f0100ee7 <page_init>$/;"	l
f01027f9	obj/kern/kernel.asm	/^f01027f9:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01027fe	obj/kern/kernel.asm	/^f01027fe:	e8 26 e8 ff ff       	call   f0101029 <check_page_free_list>$/;"	l
f0102803	obj/kern/kernel.asm	/^f0102803:	83 3d f0 ce 22 f0 00 	cmpl   $0x0,0xf022cef0$/;"	l
f010280a	obj/kern/kernel.asm	/^f010280a:	75 1c                	jne    f0102828 <mem_init+0x14f>$/;"	l
f010280c	obj/kern/kernel.asm	/^f010280c:	c7 44 24 08 a1 78 10 	movl   $0xf01078a1,0x8(%esp)$/;"	l
f0102813	obj/kern/kernel.asm	/^f0102813:	f0 $/;"	l
f0102814	obj/kern/kernel.asm	/^f0102814:	c7 44 24 04 31 03 00 	movl   $0x331,0x4(%esp)$/;"	l
f010281b	obj/kern/kernel.asm	/^f010281b:	00 $/;"	l
f010281c	obj/kern/kernel.asm	/^f010281c:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0102823	obj/kern/kernel.asm	/^f0102823:	e8 5d d8 ff ff       	call   f0100085 <_panic>$/;"	l
f0102828	obj/kern/kernel.asm	/^f0102828:	a1 30 c2 22 f0       	mov    0xf022c230,%eax$/;"	l
f010282d	obj/kern/kernel.asm	/^f010282d:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0102832	obj/kern/kernel.asm	/^f0102832:	85 c0                	test   %eax,%eax$/;"	l
f0102834	obj/kern/kernel.asm	/^f0102834:	74 09                	je     f010283f <mem_init+0x166>$/;"	l
f0102836	obj/kern/kernel.asm	/^f0102836:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0102839	obj/kern/kernel.asm	/^f0102839:	8b 00                	mov    (%eax),%eax$/;"	l
f010283b	obj/kern/kernel.asm	/^f010283b:	85 c0                	test   %eax,%eax$/;"	l
f010283d	obj/kern/kernel.asm	/^f010283d:	75 f7                	jne    f0102836 <mem_init+0x15d>$/;"	l
f010283f	obj/kern/kernel.asm	/^f010283f:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102846	obj/kern/kernel.asm	/^f0102846:	e8 bc ec ff ff       	call   f0101507 <page_alloc>$/;"	l
f010284b	obj/kern/kernel.asm	/^f010284b:	89 c6                	mov    %eax,%esi$/;"	l
f010284d	obj/kern/kernel.asm	/^f010284d:	85 c0                	test   %eax,%eax$/;"	l
f010284f	obj/kern/kernel.asm	/^f010284f:	75 24                	jne    f0102875 <mem_init+0x19c>$/;"	l
f0102851	obj/kern/kernel.asm	/^f0102851:	c7 44 24 0c 7a 77 10 	movl   $0xf010777a,0xc(%esp)$/;"	l
f0102858	obj/kern/kernel.asm	/^f0102858:	f0 $/;"	l
f0102859	obj/kern/kernel.asm	/^f0102859:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0102860	obj/kern/kernel.asm	/^f0102860:	f0 $/;"	l
f0102861	obj/kern/kernel.asm	/^f0102861:	c7 44 24 04 39 03 00 	movl   $0x339,0x4(%esp)$/;"	l
f0102868	obj/kern/kernel.asm	/^f0102868:	00 $/;"	l
f0102869	obj/kern/kernel.asm	/^f0102869:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0102870	obj/kern/kernel.asm	/^f0102870:	e8 10 d8 ff ff       	call   f0100085 <_panic>$/;"	l
f0102875	obj/kern/kernel.asm	/^f0102875:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010287c	obj/kern/kernel.asm	/^f010287c:	e8 86 ec ff ff       	call   f0101507 <page_alloc>$/;"	l
f0102881	obj/kern/kernel.asm	/^f0102881:	89 c7                	mov    %eax,%edi$/;"	l
f0102883	obj/kern/kernel.asm	/^f0102883:	85 c0                	test   %eax,%eax$/;"	l
f0102885	obj/kern/kernel.asm	/^f0102885:	75 24                	jne    f01028ab <mem_init+0x1d2>$/;"	l
f0102887	obj/kern/kernel.asm	/^f0102887:	c7 44 24 0c 90 77 10 	movl   $0xf0107790,0xc(%esp)$/;"	l
f010288e	obj/kern/kernel.asm	/^f010288e:	f0 $/;"	l
f010288f	obj/kern/kernel.asm	/^f010288f:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0102896	obj/kern/kernel.asm	/^f0102896:	f0 $/;"	l
f0102897	obj/kern/kernel.asm	/^f0102897:	c7 44 24 04 3a 03 00 	movl   $0x33a,0x4(%esp)$/;"	l
f010289e	obj/kern/kernel.asm	/^f010289e:	00 $/;"	l
f010289f	obj/kern/kernel.asm	/^f010289f:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f01028a6	obj/kern/kernel.asm	/^f01028a6:	e8 da d7 ff ff       	call   f0100085 <_panic>$/;"	l
f01028ab	obj/kern/kernel.asm	/^f01028ab:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01028b2	obj/kern/kernel.asm	/^f01028b2:	e8 50 ec ff ff       	call   f0101507 <page_alloc>$/;"	l
f01028b7	obj/kern/kernel.asm	/^f01028b7:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01028ba	obj/kern/kernel.asm	/^f01028ba:	85 c0                	test   %eax,%eax$/;"	l
f01028bc	obj/kern/kernel.asm	/^f01028bc:	75 24                	jne    f01028e2 <mem_init+0x209>$/;"	l
f01028be	obj/kern/kernel.asm	/^f01028be:	c7 44 24 0c a6 77 10 	movl   $0xf01077a6,0xc(%esp)$/;"	l
f01028c5	obj/kern/kernel.asm	/^f01028c5:	f0 $/;"	l
f01028c6	obj/kern/kernel.asm	/^f01028c6:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f01028cd	obj/kern/kernel.asm	/^f01028cd:	f0 $/;"	l
f01028ce	obj/kern/kernel.asm	/^f01028ce:	c7 44 24 04 3b 03 00 	movl   $0x33b,0x4(%esp)$/;"	l
f01028d5	obj/kern/kernel.asm	/^f01028d5:	00 $/;"	l
f01028d6	obj/kern/kernel.asm	/^f01028d6:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f01028dd	obj/kern/kernel.asm	/^f01028dd:	e8 a3 d7 ff ff       	call   f0100085 <_panic>$/;"	l
f01028e2	obj/kern/kernel.asm	/^f01028e2:	39 fe                	cmp    %edi,%esi$/;"	l
f01028e4	obj/kern/kernel.asm	/^f01028e4:	75 24                	jne    f010290a <mem_init+0x231>$/;"	l
f01028e6	obj/kern/kernel.asm	/^f01028e6:	c7 44 24 0c bc 77 10 	movl   $0xf01077bc,0xc(%esp)$/;"	l
f01028ed	obj/kern/kernel.asm	/^f01028ed:	f0 $/;"	l
f01028ee	obj/kern/kernel.asm	/^f01028ee:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f01028f5	obj/kern/kernel.asm	/^f01028f5:	f0 $/;"	l
f01028f6	obj/kern/kernel.asm	/^f01028f6:	c7 44 24 04 3e 03 00 	movl   $0x33e,0x4(%esp)$/;"	l
f01028fd	obj/kern/kernel.asm	/^f01028fd:	00 $/;"	l
f01028fe	obj/kern/kernel.asm	/^f01028fe:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0102905	obj/kern/kernel.asm	/^f0102905:	e8 7b d7 ff ff       	call   f0100085 <_panic>$/;"	l
f010290a	obj/kern/kernel.asm	/^f010290a:	3b 7d e4             	cmp    -0x1c(%ebp),%edi$/;"	l
f010290d	obj/kern/kernel.asm	/^f010290d:	74 05                	je     f0102914 <mem_init+0x23b>$/;"	l
f010290f	obj/kern/kernel.asm	/^f010290f:	3b 75 e4             	cmp    -0x1c(%ebp),%esi$/;"	l
f0102912	obj/kern/kernel.asm	/^f0102912:	75 24                	jne    f0102938 <mem_init+0x25f>$/;"	l
f0102914	obj/kern/kernel.asm	/^f0102914:	c7 44 24 0c 80 70 10 	movl   $0xf0107080,0xc(%esp)$/;"	l
f010291b	obj/kern/kernel.asm	/^f010291b:	f0 $/;"	l
f010291c	obj/kern/kernel.asm	/^f010291c:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0102923	obj/kern/kernel.asm	/^f0102923:	f0 $/;"	l
f0102924	obj/kern/kernel.asm	/^f0102924:	c7 44 24 04 3f 03 00 	movl   $0x33f,0x4(%esp)$/;"	l
f010292b	obj/kern/kernel.asm	/^f010292b:	00 $/;"	l
f010292c	obj/kern/kernel.asm	/^f010292c:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0102933	obj/kern/kernel.asm	/^f0102933:	e8 4d d7 ff ff       	call   f0100085 <_panic>$/;"	l
f0102938	obj/kern/kernel.asm	/^f0102938:	8b 15 f0 ce 22 f0    	mov    0xf022cef0,%edx$/;"	l
f010293e	obj/kern/kernel.asm	/^f010293e:	a1 e8 ce 22 f0       	mov    0xf022cee8,%eax$/;"	l
f0102943	obj/kern/kernel.asm	/^f0102943:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102946	obj/kern/kernel.asm	/^f0102946:	89 f1                	mov    %esi,%ecx$/;"	l
f0102948	obj/kern/kernel.asm	/^f0102948:	29 d1                	sub    %edx,%ecx$/;"	l
f010294a	obj/kern/kernel.asm	/^f010294a:	c1 f9 03             	sar    $0x3,%ecx$/;"	l
f010294d	obj/kern/kernel.asm	/^f010294d:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f0102950	obj/kern/kernel.asm	/^f0102950:	39 c1                	cmp    %eax,%ecx$/;"	l
f0102952	obj/kern/kernel.asm	/^f0102952:	72 24                	jb     f0102978 <mem_init+0x29f>$/;"	l
f0102954	obj/kern/kernel.asm	/^f0102954:	c7 44 24 0c bc 78 10 	movl   $0xf01078bc,0xc(%esp)$/;"	l
f010295b	obj/kern/kernel.asm	/^f010295b:	f0 $/;"	l
f010295c	obj/kern/kernel.asm	/^f010295c:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0102963	obj/kern/kernel.asm	/^f0102963:	f0 $/;"	l
f0102964	obj/kern/kernel.asm	/^f0102964:	c7 44 24 04 40 03 00 	movl   $0x340,0x4(%esp)$/;"	l
f010296b	obj/kern/kernel.asm	/^f010296b:	00 $/;"	l
f010296c	obj/kern/kernel.asm	/^f010296c:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0102973	obj/kern/kernel.asm	/^f0102973:	e8 0d d7 ff ff       	call   f0100085 <_panic>$/;"	l
f0102978	obj/kern/kernel.asm	/^f0102978:	89 f9                	mov    %edi,%ecx$/;"	l
f010297a	obj/kern/kernel.asm	/^f010297a:	29 d1                	sub    %edx,%ecx$/;"	l
f010297c	obj/kern/kernel.asm	/^f010297c:	c1 f9 03             	sar    $0x3,%ecx$/;"	l
f010297f	obj/kern/kernel.asm	/^f010297f:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f0102982	obj/kern/kernel.asm	/^f0102982:	39 c8                	cmp    %ecx,%eax$/;"	l
f0102984	obj/kern/kernel.asm	/^f0102984:	77 24                	ja     f01029aa <mem_init+0x2d1>$/;"	l
f0102986	obj/kern/kernel.asm	/^f0102986:	c7 44 24 0c d9 78 10 	movl   $0xf01078d9,0xc(%esp)$/;"	l
f010298d	obj/kern/kernel.asm	/^f010298d:	f0 $/;"	l
f010298e	obj/kern/kernel.asm	/^f010298e:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0102995	obj/kern/kernel.asm	/^f0102995:	f0 $/;"	l
f0102996	obj/kern/kernel.asm	/^f0102996:	c7 44 24 04 41 03 00 	movl   $0x341,0x4(%esp)$/;"	l
f010299d	obj/kern/kernel.asm	/^f010299d:	00 $/;"	l
f010299e	obj/kern/kernel.asm	/^f010299e:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f01029a5	obj/kern/kernel.asm	/^f01029a5:	e8 db d6 ff ff       	call   f0100085 <_panic>$/;"	l
f01029aa	obj/kern/kernel.asm	/^f01029aa:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f01029ad	obj/kern/kernel.asm	/^f01029ad:	29 d1                	sub    %edx,%ecx$/;"	l
f01029af	obj/kern/kernel.asm	/^f01029af:	89 ca                	mov    %ecx,%edx$/;"	l
f01029b1	obj/kern/kernel.asm	/^f01029b1:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01029b4	obj/kern/kernel.asm	/^f01029b4:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01029b7	obj/kern/kernel.asm	/^f01029b7:	39 d0                	cmp    %edx,%eax$/;"	l
f01029b9	obj/kern/kernel.asm	/^f01029b9:	77 24                	ja     f01029df <mem_init+0x306>$/;"	l
f01029bb	obj/kern/kernel.asm	/^f01029bb:	c7 44 24 0c f6 78 10 	movl   $0xf01078f6,0xc(%esp)$/;"	l
f01029c2	obj/kern/kernel.asm	/^f01029c2:	f0 $/;"	l
f01029c3	obj/kern/kernel.asm	/^f01029c3:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f01029ca	obj/kern/kernel.asm	/^f01029ca:	f0 $/;"	l
f01029cb	obj/kern/kernel.asm	/^f01029cb:	c7 44 24 04 42 03 00 	movl   $0x342,0x4(%esp)$/;"	l
f01029d2	obj/kern/kernel.asm	/^f01029d2:	00 $/;"	l
f01029d3	obj/kern/kernel.asm	/^f01029d3:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f01029da	obj/kern/kernel.asm	/^f01029da:	e8 a6 d6 ff ff       	call   f0100085 <_panic>$/;"	l
f01029df	obj/kern/kernel.asm	/^f01029df:	a1 30 c2 22 f0       	mov    0xf022c230,%eax$/;"	l
f01029e4	obj/kern/kernel.asm	/^f01029e4:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f01029e7	obj/kern/kernel.asm	/^f01029e7:	c7 05 30 c2 22 f0 00 	movl   $0x0,0xf022c230$/;"	l
f01029ee	obj/kern/kernel.asm	/^f01029ee:	00 00 00 $/;"	l
f01029f1	obj/kern/kernel.asm	/^f01029f1:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01029f8	obj/kern/kernel.asm	/^f01029f8:	e8 0a eb ff ff       	call   f0101507 <page_alloc>$/;"	l
f01029fd	obj/kern/kernel.asm	/^f01029fd:	85 c0                	test   %eax,%eax$/;"	l
f01029ff	obj/kern/kernel.asm	/^f01029ff:	74 24                	je     f0102a25 <mem_init+0x34c>$/;"	l
f0102a01	obj/kern/kernel.asm	/^f0102a01:	c7 44 24 0c ce 77 10 	movl   $0xf01077ce,0xc(%esp)$/;"	l
f0102a08	obj/kern/kernel.asm	/^f0102a08:	f0 $/;"	l
f0102a09	obj/kern/kernel.asm	/^f0102a09:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0102a10	obj/kern/kernel.asm	/^f0102a10:	f0 $/;"	l
f0102a11	obj/kern/kernel.asm	/^f0102a11:	c7 44 24 04 49 03 00 	movl   $0x349,0x4(%esp)$/;"	l
f0102a18	obj/kern/kernel.asm	/^f0102a18:	00 $/;"	l
f0102a19	obj/kern/kernel.asm	/^f0102a19:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0102a20	obj/kern/kernel.asm	/^f0102a20:	e8 60 d6 ff ff       	call   f0100085 <_panic>$/;"	l
f0102a25	obj/kern/kernel.asm	/^f0102a25:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0102a28	obj/kern/kernel.asm	/^f0102a28:	e8 e7 e3 ff ff       	call   f0100e14 <page_free>$/;"	l
f0102a2d	obj/kern/kernel.asm	/^f0102a2d:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0102a30	obj/kern/kernel.asm	/^f0102a30:	e8 df e3 ff ff       	call   f0100e14 <page_free>$/;"	l
f0102a35	obj/kern/kernel.asm	/^f0102a35:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f0102a38	obj/kern/kernel.asm	/^f0102a38:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f0102a3b	obj/kern/kernel.asm	/^f0102a3b:	e8 d4 e3 ff ff       	call   f0100e14 <page_free>$/;"	l
f0102a40	obj/kern/kernel.asm	/^f0102a40:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102a47	obj/kern/kernel.asm	/^f0102a47:	e8 bb ea ff ff       	call   f0101507 <page_alloc>$/;"	l
f0102a4c	obj/kern/kernel.asm	/^f0102a4c:	89 c6                	mov    %eax,%esi$/;"	l
f0102a4e	obj/kern/kernel.asm	/^f0102a4e:	85 c0                	test   %eax,%eax$/;"	l
f0102a50	obj/kern/kernel.asm	/^f0102a50:	75 24                	jne    f0102a76 <mem_init+0x39d>$/;"	l
f0102a52	obj/kern/kernel.asm	/^f0102a52:	c7 44 24 0c 7a 77 10 	movl   $0xf010777a,0xc(%esp)$/;"	l
f0102a59	obj/kern/kernel.asm	/^f0102a59:	f0 $/;"	l
f0102a5a	obj/kern/kernel.asm	/^f0102a5a:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0102a61	obj/kern/kernel.asm	/^f0102a61:	f0 $/;"	l
f0102a62	obj/kern/kernel.asm	/^f0102a62:	c7 44 24 04 50 03 00 	movl   $0x350,0x4(%esp)$/;"	l
f0102a69	obj/kern/kernel.asm	/^f0102a69:	00 $/;"	l
f0102a6a	obj/kern/kernel.asm	/^f0102a6a:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0102a71	obj/kern/kernel.asm	/^f0102a71:	e8 0f d6 ff ff       	call   f0100085 <_panic>$/;"	l
f0102a76	obj/kern/kernel.asm	/^f0102a76:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102a7d	obj/kern/kernel.asm	/^f0102a7d:	e8 85 ea ff ff       	call   f0101507 <page_alloc>$/;"	l
f0102a82	obj/kern/kernel.asm	/^f0102a82:	89 c7                	mov    %eax,%edi$/;"	l
f0102a84	obj/kern/kernel.asm	/^f0102a84:	85 c0                	test   %eax,%eax$/;"	l
f0102a86	obj/kern/kernel.asm	/^f0102a86:	75 24                	jne    f0102aac <mem_init+0x3d3>$/;"	l
f0102a88	obj/kern/kernel.asm	/^f0102a88:	c7 44 24 0c 90 77 10 	movl   $0xf0107790,0xc(%esp)$/;"	l
f0102a8f	obj/kern/kernel.asm	/^f0102a8f:	f0 $/;"	l
f0102a90	obj/kern/kernel.asm	/^f0102a90:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0102a97	obj/kern/kernel.asm	/^f0102a97:	f0 $/;"	l
f0102a98	obj/kern/kernel.asm	/^f0102a98:	c7 44 24 04 51 03 00 	movl   $0x351,0x4(%esp)$/;"	l
f0102a9f	obj/kern/kernel.asm	/^f0102a9f:	00 $/;"	l
f0102aa0	obj/kern/kernel.asm	/^f0102aa0:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0102aa7	obj/kern/kernel.asm	/^f0102aa7:	e8 d9 d5 ff ff       	call   f0100085 <_panic>$/;"	l
f0102aac	obj/kern/kernel.asm	/^f0102aac:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102ab3	obj/kern/kernel.asm	/^f0102ab3:	e8 4f ea ff ff       	call   f0101507 <page_alloc>$/;"	l
f0102ab8	obj/kern/kernel.asm	/^f0102ab8:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102abb	obj/kern/kernel.asm	/^f0102abb:	85 c0                	test   %eax,%eax$/;"	l
f0102abd	obj/kern/kernel.asm	/^f0102abd:	75 24                	jne    f0102ae3 <mem_init+0x40a>$/;"	l
f0102abf	obj/kern/kernel.asm	/^f0102abf:	c7 44 24 0c a6 77 10 	movl   $0xf01077a6,0xc(%esp)$/;"	l
f0102ac6	obj/kern/kernel.asm	/^f0102ac6:	f0 $/;"	l
f0102ac7	obj/kern/kernel.asm	/^f0102ac7:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0102ace	obj/kern/kernel.asm	/^f0102ace:	f0 $/;"	l
f0102acf	obj/kern/kernel.asm	/^f0102acf:	c7 44 24 04 52 03 00 	movl   $0x352,0x4(%esp)$/;"	l
f0102ad6	obj/kern/kernel.asm	/^f0102ad6:	00 $/;"	l
f0102ad7	obj/kern/kernel.asm	/^f0102ad7:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0102ade	obj/kern/kernel.asm	/^f0102ade:	e8 a2 d5 ff ff       	call   f0100085 <_panic>$/;"	l
f0102ae3	obj/kern/kernel.asm	/^f0102ae3:	39 fe                	cmp    %edi,%esi$/;"	l
f0102ae5	obj/kern/kernel.asm	/^f0102ae5:	75 24                	jne    f0102b0b <mem_init+0x432>$/;"	l
f0102ae7	obj/kern/kernel.asm	/^f0102ae7:	c7 44 24 0c bc 77 10 	movl   $0xf01077bc,0xc(%esp)$/;"	l
f0102aee	obj/kern/kernel.asm	/^f0102aee:	f0 $/;"	l
f0102aef	obj/kern/kernel.asm	/^f0102aef:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0102af6	obj/kern/kernel.asm	/^f0102af6:	f0 $/;"	l
f0102af7	obj/kern/kernel.asm	/^f0102af7:	c7 44 24 04 54 03 00 	movl   $0x354,0x4(%esp)$/;"	l
f0102afe	obj/kern/kernel.asm	/^f0102afe:	00 $/;"	l
f0102aff	obj/kern/kernel.asm	/^f0102aff:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0102b06	obj/kern/kernel.asm	/^f0102b06:	e8 7a d5 ff ff       	call   f0100085 <_panic>$/;"	l
f0102b0b	obj/kern/kernel.asm	/^f0102b0b:	3b 7d e4             	cmp    -0x1c(%ebp),%edi$/;"	l
f0102b0e	obj/kern/kernel.asm	/^f0102b0e:	74 05                	je     f0102b15 <mem_init+0x43c>$/;"	l
f0102b10	obj/kern/kernel.asm	/^f0102b10:	3b 75 e4             	cmp    -0x1c(%ebp),%esi$/;"	l
f0102b13	obj/kern/kernel.asm	/^f0102b13:	75 24                	jne    f0102b39 <mem_init+0x460>$/;"	l
f0102b15	obj/kern/kernel.asm	/^f0102b15:	c7 44 24 0c 80 70 10 	movl   $0xf0107080,0xc(%esp)$/;"	l
f0102b1c	obj/kern/kernel.asm	/^f0102b1c:	f0 $/;"	l
f0102b1d	obj/kern/kernel.asm	/^f0102b1d:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0102b24	obj/kern/kernel.asm	/^f0102b24:	f0 $/;"	l
f0102b25	obj/kern/kernel.asm	/^f0102b25:	c7 44 24 04 55 03 00 	movl   $0x355,0x4(%esp)$/;"	l
f0102b2c	obj/kern/kernel.asm	/^f0102b2c:	00 $/;"	l
f0102b2d	obj/kern/kernel.asm	/^f0102b2d:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0102b34	obj/kern/kernel.asm	/^f0102b34:	e8 4c d5 ff ff       	call   f0100085 <_panic>$/;"	l
f0102b39	obj/kern/kernel.asm	/^f0102b39:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102b40	obj/kern/kernel.asm	/^f0102b40:	e8 c2 e9 ff ff       	call   f0101507 <page_alloc>$/;"	l
f0102b45	obj/kern/kernel.asm	/^f0102b45:	85 c0                	test   %eax,%eax$/;"	l
f0102b47	obj/kern/kernel.asm	/^f0102b47:	74 24                	je     f0102b6d <mem_init+0x494>$/;"	l
f0102b49	obj/kern/kernel.asm	/^f0102b49:	c7 44 24 0c ce 77 10 	movl   $0xf01077ce,0xc(%esp)$/;"	l
f0102b50	obj/kern/kernel.asm	/^f0102b50:	f0 $/;"	l
f0102b51	obj/kern/kernel.asm	/^f0102b51:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0102b58	obj/kern/kernel.asm	/^f0102b58:	f0 $/;"	l
f0102b59	obj/kern/kernel.asm	/^f0102b59:	c7 44 24 04 56 03 00 	movl   $0x356,0x4(%esp)$/;"	l
f0102b60	obj/kern/kernel.asm	/^f0102b60:	00 $/;"	l
f0102b61	obj/kern/kernel.asm	/^f0102b61:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0102b68	obj/kern/kernel.asm	/^f0102b68:	e8 18 d5 ff ff       	call   f0100085 <_panic>$/;"	l
f0102b6d	obj/kern/kernel.asm	/^f0102b6d:	89 75 e0             	mov    %esi,-0x20(%ebp)$/;"	l
f0102b70	obj/kern/kernel.asm	/^f0102b70:	89 f0                	mov    %esi,%eax$/;"	l
f0102b72	obj/kern/kernel.asm	/^f0102b72:	2b 05 f0 ce 22 f0    	sub    0xf022cef0,%eax$/;"	l
f0102b78	obj/kern/kernel.asm	/^f0102b78:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102b7b	obj/kern/kernel.asm	/^f0102b7b:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102b7e	obj/kern/kernel.asm	/^f0102b7e:	89 c2                	mov    %eax,%edx$/;"	l
f0102b80	obj/kern/kernel.asm	/^f0102b80:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102b83	obj/kern/kernel.asm	/^f0102b83:	3b 15 e8 ce 22 f0    	cmp    0xf022cee8,%edx$/;"	l
f0102b89	obj/kern/kernel.asm	/^f0102b89:	72 20                	jb     f0102bab <mem_init+0x4d2>$/;"	l
f0102b8b	obj/kern/kernel.asm	/^f0102b8b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102b8f	obj/kern/kernel.asm	/^f0102b8f:	c7 44 24 08 8c 6a 10 	movl   $0xf0106a8c,0x8(%esp)$/;"	l
f0102b96	obj/kern/kernel.asm	/^f0102b96:	f0 $/;"	l
f0102b97	obj/kern/kernel.asm	/^f0102b97:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f0102b9e	obj/kern/kernel.asm	/^f0102b9e:	00 $/;"	l
f0102b9f	obj/kern/kernel.asm	/^f0102b9f:	c7 04 24 8d 76 10 f0 	movl   $0xf010768d,(%esp)$/;"	l
f0102ba6	obj/kern/kernel.asm	/^f0102ba6:	e8 da d4 ff ff       	call   f0100085 <_panic>$/;"	l
f0102bab	obj/kern/kernel.asm	/^f0102bab:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0102bb2	obj/kern/kernel.asm	/^f0102bb2:	00 $/;"	l
f0102bb3	obj/kern/kernel.asm	/^f0102bb3:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
f0102bba	obj/kern/kernel.asm	/^f0102bba:	00 $/;"	l
f0102bbb	obj/kern/kernel.asm	/^f0102bbb:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102bc0	obj/kern/kernel.asm	/^f0102bc0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102bc3	obj/kern/kernel.asm	/^f0102bc3:	e8 3e 30 00 00       	call   f0105c06 <memset>$/;"	l
f0102bc8	obj/kern/kernel.asm	/^f0102bc8:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0102bcb	obj/kern/kernel.asm	/^f0102bcb:	e8 44 e2 ff ff       	call   f0100e14 <page_free>$/;"	l
f0102bd0	obj/kern/kernel.asm	/^f0102bd0:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0102bd7	obj/kern/kernel.asm	/^f0102bd7:	e8 2b e9 ff ff       	call   f0101507 <page_alloc>$/;"	l
f0102bdc	obj/kern/kernel.asm	/^f0102bdc:	85 c0                	test   %eax,%eax$/;"	l
f0102bde	obj/kern/kernel.asm	/^f0102bde:	75 24                	jne    f0102c04 <mem_init+0x52b>$/;"	l
f0102be0	obj/kern/kernel.asm	/^f0102be0:	c7 44 24 0c 13 79 10 	movl   $0xf0107913,0xc(%esp)$/;"	l
f0102be7	obj/kern/kernel.asm	/^f0102be7:	f0 $/;"	l
f0102be8	obj/kern/kernel.asm	/^f0102be8:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0102bef	obj/kern/kernel.asm	/^f0102bef:	f0 $/;"	l
f0102bf0	obj/kern/kernel.asm	/^f0102bf0:	c7 44 24 04 5b 03 00 	movl   $0x35b,0x4(%esp)$/;"	l
f0102bf7	obj/kern/kernel.asm	/^f0102bf7:	00 $/;"	l
f0102bf8	obj/kern/kernel.asm	/^f0102bf8:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0102bff	obj/kern/kernel.asm	/^f0102bff:	e8 81 d4 ff ff       	call   f0100085 <_panic>$/;"	l
f0102c04	obj/kern/kernel.asm	/^f0102c04:	39 c6                	cmp    %eax,%esi$/;"	l
f0102c06	obj/kern/kernel.asm	/^f0102c06:	74 24                	je     f0102c2c <mem_init+0x553>$/;"	l
f0102c08	obj/kern/kernel.asm	/^f0102c08:	c7 44 24 0c 31 79 10 	movl   $0xf0107931,0xc(%esp)$/;"	l
f0102c0f	obj/kern/kernel.asm	/^f0102c0f:	f0 $/;"	l
f0102c10	obj/kern/kernel.asm	/^f0102c10:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0102c17	obj/kern/kernel.asm	/^f0102c17:	f0 $/;"	l
f0102c18	obj/kern/kernel.asm	/^f0102c18:	c7 44 24 04 5c 03 00 	movl   $0x35c,0x4(%esp)$/;"	l
f0102c1f	obj/kern/kernel.asm	/^f0102c1f:	00 $/;"	l
f0102c20	obj/kern/kernel.asm	/^f0102c20:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0102c27	obj/kern/kernel.asm	/^f0102c27:	e8 59 d4 ff ff       	call   f0100085 <_panic>$/;"	l
f0102c2c	obj/kern/kernel.asm	/^f0102c2c:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0102c2f	obj/kern/kernel.asm	/^f0102c2f:	2b 15 f0 ce 22 f0    	sub    0xf022cef0,%edx$/;"	l
f0102c35	obj/kern/kernel.asm	/^f0102c35:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102c38	obj/kern/kernel.asm	/^f0102c38:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102c3b	obj/kern/kernel.asm	/^f0102c3b:	89 d0                	mov    %edx,%eax$/;"	l
f0102c3d	obj/kern/kernel.asm	/^f0102c3d:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0102c40	obj/kern/kernel.asm	/^f0102c40:	3b 05 e8 ce 22 f0    	cmp    0xf022cee8,%eax$/;"	l
f0102c46	obj/kern/kernel.asm	/^f0102c46:	72 20                	jb     f0102c68 <mem_init+0x58f>$/;"	l
f0102c48	obj/kern/kernel.asm	/^f0102c48:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0102c4c	obj/kern/kernel.asm	/^f0102c4c:	c7 44 24 08 8c 6a 10 	movl   $0xf0106a8c,0x8(%esp)$/;"	l
f0102c53	obj/kern/kernel.asm	/^f0102c53:	f0 $/;"	l
f0102c54	obj/kern/kernel.asm	/^f0102c54:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f0102c5b	obj/kern/kernel.asm	/^f0102c5b:	00 $/;"	l
f0102c5c	obj/kern/kernel.asm	/^f0102c5c:	c7 04 24 8d 76 10 f0 	movl   $0xf010768d,(%esp)$/;"	l
f0102c63	obj/kern/kernel.asm	/^f0102c63:	e8 1d d4 ff ff       	call   f0100085 <_panic>$/;"	l
f0102c68	obj/kern/kernel.asm	/^f0102c68:	80 ba 00 00 00 f0 00 	cmpb   $0x0,-0x10000000(%edx)$/;"	l
f0102c6f	obj/kern/kernel.asm	/^f0102c6f:	75 11                	jne    f0102c82 <mem_init+0x5a9>$/;"	l
f0102c71	obj/kern/kernel.asm	/^f0102c71:	8d 82 01 00 00 f0    	lea    -0xfffffff(%edx),%eax$/;"	l
f0102c77	obj/kern/kernel.asm	/^f0102c77:	81 ea 00 f0 ff 0f    	sub    $0xffff000,%edx$/;"	l
f0102c7d	obj/kern/kernel.asm	/^f0102c7d:	80 38 00             	cmpb   $0x0,(%eax)$/;"	l
f0102c80	obj/kern/kernel.asm	/^f0102c80:	74 24                	je     f0102ca6 <mem_init+0x5cd>$/;"	l
f0102c82	obj/kern/kernel.asm	/^f0102c82:	c7 44 24 0c 41 79 10 	movl   $0xf0107941,0xc(%esp)$/;"	l
f0102c89	obj/kern/kernel.asm	/^f0102c89:	f0 $/;"	l
f0102c8a	obj/kern/kernel.asm	/^f0102c8a:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0102c91	obj/kern/kernel.asm	/^f0102c91:	f0 $/;"	l
f0102c92	obj/kern/kernel.asm	/^f0102c92:	c7 44 24 04 5f 03 00 	movl   $0x35f,0x4(%esp)$/;"	l
f0102c99	obj/kern/kernel.asm	/^f0102c99:	00 $/;"	l
f0102c9a	obj/kern/kernel.asm	/^f0102c9a:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0102ca1	obj/kern/kernel.asm	/^f0102ca1:	e8 df d3 ff ff       	call   f0100085 <_panic>$/;"	l
f0102ca6	obj/kern/kernel.asm	/^f0102ca6:	83 c0 01             	add    $0x1,%eax$/;"	l
f0102ca9	obj/kern/kernel.asm	/^f0102ca9:	39 d0                	cmp    %edx,%eax$/;"	l
f0102cab	obj/kern/kernel.asm	/^f0102cab:	75 d0                	jne    f0102c7d <mem_init+0x5a4>$/;"	l
f0102cad	obj/kern/kernel.asm	/^f0102cad:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0102cb0	obj/kern/kernel.asm	/^f0102cb0:	a3 30 c2 22 f0       	mov    %eax,0xf022c230$/;"	l
f0102cb5	obj/kern/kernel.asm	/^f0102cb5:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0102cb8	obj/kern/kernel.asm	/^f0102cb8:	e8 57 e1 ff ff       	call   f0100e14 <page_free>$/;"	l
f0102cbd	obj/kern/kernel.asm	/^f0102cbd:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0102cc0	obj/kern/kernel.asm	/^f0102cc0:	e8 4f e1 ff ff       	call   f0100e14 <page_free>$/;"	l
f0102cc5	obj/kern/kernel.asm	/^f0102cc5:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f0102cc8	obj/kern/kernel.asm	/^f0102cc8:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f0102ccb	obj/kern/kernel.asm	/^f0102ccb:	e8 44 e1 ff ff       	call   f0100e14 <page_free>$/;"	l
f0102cd0	obj/kern/kernel.asm	/^f0102cd0:	a1 30 c2 22 f0       	mov    0xf022c230,%eax$/;"	l
f0102cd5	obj/kern/kernel.asm	/^f0102cd5:	85 c0                	test   %eax,%eax$/;"	l
f0102cd7	obj/kern/kernel.asm	/^f0102cd7:	74 09                	je     f0102ce2 <mem_init+0x609>$/;"	l
f0102cd9	obj/kern/kernel.asm	/^f0102cd9:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0102cdc	obj/kern/kernel.asm	/^f0102cdc:	8b 00                	mov    (%eax),%eax$/;"	l
f0102cde	obj/kern/kernel.asm	/^f0102cde:	85 c0                	test   %eax,%eax$/;"	l
f0102ce0	obj/kern/kernel.asm	/^f0102ce0:	75 f7                	jne    f0102cd9 <mem_init+0x600>$/;"	l
f0102ce2	obj/kern/kernel.asm	/^f0102ce2:	85 db                	test   %ebx,%ebx$/;"	l
f0102ce4	obj/kern/kernel.asm	/^f0102ce4:	74 24                	je     f0102d0a <mem_init+0x631>$/;"	l
f0102ce6	obj/kern/kernel.asm	/^f0102ce6:	c7 44 24 0c 4b 79 10 	movl   $0xf010794b,0xc(%esp)$/;"	l
f0102ced	obj/kern/kernel.asm	/^f0102ced:	f0 $/;"	l
f0102cee	obj/kern/kernel.asm	/^f0102cee:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0102cf5	obj/kern/kernel.asm	/^f0102cf5:	f0 $/;"	l
f0102cf6	obj/kern/kernel.asm	/^f0102cf6:	c7 44 24 04 6c 03 00 	movl   $0x36c,0x4(%esp)$/;"	l
f0102cfd	obj/kern/kernel.asm	/^f0102cfd:	00 $/;"	l
f0102cfe	obj/kern/kernel.asm	/^f0102cfe:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0102d05	obj/kern/kernel.asm	/^f0102d05:	e8 7b d3 ff ff       	call   f0100085 <_panic>$/;"	l
f0102d0a	obj/kern/kernel.asm	/^f0102d0a:	c7 04 24 88 74 10 f0 	movl   $0xf0107488,(%esp)$/;"	l
f0102d11	obj/kern/kernel.asm	/^f0102d11:	e8 99 15 00 00       	call   f01042af <cprintf>$/;"	l
f0102d16	obj/kern/kernel.asm	/^f0102d16:	e8 90 ec ff ff       	call   f01019ab <check_page>$/;"	l
f0102d1b	obj/kern/kernel.asm	/^f0102d1b:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102d22	obj/kern/kernel.asm	/^f0102d22:	e8 e0 e7 ff ff       	call   f0101507 <page_alloc>$/;"	l
f0102d27	obj/kern/kernel.asm	/^f0102d27:	89 c3                	mov    %eax,%ebx$/;"	l
f0102d29	obj/kern/kernel.asm	/^f0102d29:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102d30	obj/kern/kernel.asm	/^f0102d30:	e8 d2 e7 ff ff       	call   f0101507 <page_alloc>$/;"	l
f0102d35	obj/kern/kernel.asm	/^f0102d35:	89 c6                	mov    %eax,%esi$/;"	l
f0102d37	obj/kern/kernel.asm	/^f0102d37:	85 db                	test   %ebx,%ebx$/;"	l
f0102d39	obj/kern/kernel.asm	/^f0102d39:	75 24                	jne    f0102d5f <mem_init+0x686>$/;"	l
f0102d3b	obj/kern/kernel.asm	/^f0102d3b:	c7 44 24 0c 56 79 10 	movl   $0xf0107956,0xc(%esp)$/;"	l
f0102d42	obj/kern/kernel.asm	/^f0102d42:	f0 $/;"	l
f0102d43	obj/kern/kernel.asm	/^f0102d43:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0102d4a	obj/kern/kernel.asm	/^f0102d4a:	f0 $/;"	l
f0102d4b	obj/kern/kernel.asm	/^f0102d4b:	c7 44 24 04 73 04 00 	movl   $0x473,0x4(%esp)$/;"	l
f0102d52	obj/kern/kernel.asm	/^f0102d52:	00 $/;"	l
f0102d53	obj/kern/kernel.asm	/^f0102d53:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0102d5a	obj/kern/kernel.asm	/^f0102d5a:	e8 26 d3 ff ff       	call   f0100085 <_panic>$/;"	l
f0102d5f	obj/kern/kernel.asm	/^f0102d5f:	85 c0                	test   %eax,%eax$/;"	l
f0102d61	obj/kern/kernel.asm	/^f0102d61:	75 24                	jne    f0102d87 <mem_init+0x6ae>$/;"	l
f0102d63	obj/kern/kernel.asm	/^f0102d63:	c7 44 24 0c 5e 79 10 	movl   $0xf010795e,0xc(%esp)$/;"	l
f0102d6a	obj/kern/kernel.asm	/^f0102d6a:	f0 $/;"	l
f0102d6b	obj/kern/kernel.asm	/^f0102d6b:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0102d72	obj/kern/kernel.asm	/^f0102d72:	f0 $/;"	l
f0102d73	obj/kern/kernel.asm	/^f0102d73:	c7 44 24 04 74 04 00 	movl   $0x474,0x4(%esp)$/;"	l
f0102d7a	obj/kern/kernel.asm	/^f0102d7a:	00 $/;"	l
f0102d7b	obj/kern/kernel.asm	/^f0102d7b:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0102d82	obj/kern/kernel.asm	/^f0102d82:	e8 fe d2 ff ff       	call   f0100085 <_panic>$/;"	l
f0102d87	obj/kern/kernel.asm	/^f0102d87:	39 c3                	cmp    %eax,%ebx$/;"	l
f0102d89	obj/kern/kernel.asm	/^f0102d89:	75 24                	jne    f0102daf <mem_init+0x6d6>$/;"	l
f0102d8b	obj/kern/kernel.asm	/^f0102d8b:	c7 44 24 0c 67 79 10 	movl   $0xf0107967,0xc(%esp)$/;"	l
f0102d92	obj/kern/kernel.asm	/^f0102d92:	f0 $/;"	l
f0102d93	obj/kern/kernel.asm	/^f0102d93:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0102d9a	obj/kern/kernel.asm	/^f0102d9a:	f0 $/;"	l
f0102d9b	obj/kern/kernel.asm	/^f0102d9b:	c7 44 24 04 75 04 00 	movl   $0x475,0x4(%esp)$/;"	l
f0102da2	obj/kern/kernel.asm	/^f0102da2:	00 $/;"	l
f0102da3	obj/kern/kernel.asm	/^f0102da3:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0102daa	obj/kern/kernel.asm	/^f0102daa:	e8 d6 d2 ff ff       	call   f0100085 <_panic>$/;"	l
f0102daf	obj/kern/kernel.asm	/^f0102daf:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0102db2	obj/kern/kernel.asm	/^f0102db2:	e8 5d e0 ff ff       	call   f0100e14 <page_free>$/;"	l
f0102db7	obj/kern/kernel.asm	/^f0102db7:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102dbe	obj/kern/kernel.asm	/^f0102dbe:	e8 0c e6 ff ff       	call   f01013cf <page_alloc_4pages>$/;"	l
f0102dc3	obj/kern/kernel.asm	/^f0102dc3:	8b 18                	mov    (%eax),%ebx$/;"	l
f0102dc5	obj/kern/kernel.asm	/^f0102dc5:	8b 15 f0 ce 22 f0    	mov    0xf022cef0,%edx$/;"	l
f0102dcb	obj/kern/kernel.asm	/^f0102dcb:	89 d9                	mov    %ebx,%ecx$/;"	l
f0102dcd	obj/kern/kernel.asm	/^f0102dcd:	29 d1                	sub    %edx,%ecx$/;"	l
f0102dcf	obj/kern/kernel.asm	/^f0102dcf:	c1 f9 03             	sar    $0x3,%ecx$/;"	l
f0102dd2	obj/kern/kernel.asm	/^f0102dd2:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f0102dd5	obj/kern/kernel.asm	/^f0102dd5:	89 4d e4             	mov    %ecx,-0x1c(%ebp)$/;"	l
f0102dd8	obj/kern/kernel.asm	/^f0102dd8:	89 c7                	mov    %eax,%edi$/;"	l
f0102dda	obj/kern/kernel.asm	/^f0102dda:	29 d7                	sub    %edx,%edi$/;"	l
f0102ddc	obj/kern/kernel.asm	/^f0102ddc:	c1 ff 03             	sar    $0x3,%edi$/;"	l
f0102ddf	obj/kern/kernel.asm	/^f0102ddf:	89 f9                	mov    %edi,%ecx$/;"	l
f0102de1	obj/kern/kernel.asm	/^f0102de1:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f0102de4	obj/kern/kernel.asm	/^f0102de4:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0102de7	obj/kern/kernel.asm	/^f0102de7:	29 cf                	sub    %ecx,%edi$/;"	l
f0102de9	obj/kern/kernel.asm	/^f0102de9:	81 ff 00 10 00 00    	cmp    $0x1000,%edi$/;"	l
f0102def	obj/kern/kernel.asm	/^f0102def:	75 41                	jne    f0102e32 <mem_init+0x759>$/;"	l
f0102df1	obj/kern/kernel.asm	/^f0102df1:	8b 3b                	mov    (%ebx),%edi$/;"	l
f0102df3	obj/kern/kernel.asm	/^f0102df3:	89 fb                	mov    %edi,%ebx$/;"	l
f0102df5	obj/kern/kernel.asm	/^f0102df5:	29 d3                	sub    %edx,%ebx$/;"	l
f0102df7	obj/kern/kernel.asm	/^f0102df7:	c1 fb 03             	sar    $0x3,%ebx$/;"	l
f0102dfa	obj/kern/kernel.asm	/^f0102dfa:	c1 e3 0c             	shl    $0xc,%ebx$/;"	l
f0102dfd	obj/kern/kernel.asm	/^f0102dfd:	89 d9                	mov    %ebx,%ecx$/;"	l
f0102dff	obj/kern/kernel.asm	/^f0102dff:	2b 4d e4             	sub    -0x1c(%ebp),%ecx$/;"	l
f0102e02	obj/kern/kernel.asm	/^f0102e02:	81 f9 00 10 00 00    	cmp    $0x1000,%ecx$/;"	l
f0102e08	obj/kern/kernel.asm	/^f0102e08:	75 28                	jne    f0102e32 <mem_init+0x759>$/;"	l
f0102e0a	obj/kern/kernel.asm	/^f0102e0a:	8b 0f                	mov    (%edi),%ecx$/;"	l
f0102e0c	obj/kern/kernel.asm	/^f0102e0c:	29 d1                	sub    %edx,%ecx$/;"	l
f0102e0e	obj/kern/kernel.asm	/^f0102e0e:	89 ca                	mov    %ecx,%edx$/;"	l
f0102e10	obj/kern/kernel.asm	/^f0102e10:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102e13	obj/kern/kernel.asm	/^f0102e13:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102e16	obj/kern/kernel.asm	/^f0102e16:	29 da                	sub    %ebx,%edx$/;"	l
f0102e18	obj/kern/kernel.asm	/^f0102e18:	81 fa 00 10 00 00    	cmp    $0x1000,%edx$/;"	l
f0102e1e	obj/kern/kernel.asm	/^f0102e1e:	75 12                	jne    f0102e32 <mem_init+0x759>$/;"	l
f0102e20	obj/kern/kernel.asm	/^f0102e20:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102e23	obj/kern/kernel.asm	/^f0102e23:	e8 9b df ff ff       	call   f0100dc3 <page_free_4pages>$/;"	l
f0102e28	obj/kern/kernel.asm	/^f0102e28:	85 c0                	test   %eax,%eax$/;"	l
f0102e2a	obj/kern/kernel.asm	/^f0102e2a:	74 4e                	je     f0102e7a <mem_init+0x7a1>$/;"	l
f0102e2c	obj/kern/kernel.asm	/^f0102e2c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0102e30	obj/kern/kernel.asm	/^f0102e30:	eb 24                	jmp    f0102e56 <mem_init+0x77d>$/;"	l
f0102e32	obj/kern/kernel.asm	/^f0102e32:	c7 44 24 0c 71 79 10 	movl   $0xf0107971,0xc(%esp)$/;"	l
f0102e39	obj/kern/kernel.asm	/^f0102e39:	f0 $/;"	l
f0102e3a	obj/kern/kernel.asm	/^f0102e3a:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0102e41	obj/kern/kernel.asm	/^f0102e41:	f0 $/;"	l
f0102e42	obj/kern/kernel.asm	/^f0102e42:	c7 44 24 04 7a 04 00 	movl   $0x47a,0x4(%esp)$/;"	l
f0102e49	obj/kern/kernel.asm	/^f0102e49:	00 $/;"	l
f0102e4a	obj/kern/kernel.asm	/^f0102e4a:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0102e51	obj/kern/kernel.asm	/^f0102e51:	e8 2f d2 ff ff       	call   f0100085 <_panic>$/;"	l
f0102e56	obj/kern/kernel.asm	/^f0102e56:	c7 44 24 0c 86 79 10 	movl   $0xf0107986,0xc(%esp)$/;"	l
f0102e5d	obj/kern/kernel.asm	/^f0102e5d:	f0 $/;"	l
f0102e5e	obj/kern/kernel.asm	/^f0102e5e:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0102e65	obj/kern/kernel.asm	/^f0102e65:	f0 $/;"	l
f0102e66	obj/kern/kernel.asm	/^f0102e66:	c7 44 24 04 7d 04 00 	movl   $0x47d,0x4(%esp)$/;"	l
f0102e6d	obj/kern/kernel.asm	/^f0102e6d:	00 $/;"	l
f0102e6e	obj/kern/kernel.asm	/^f0102e6e:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0102e75	obj/kern/kernel.asm	/^f0102e75:	e8 0b d2 ff ff       	call   f0100085 <_panic>$/;"	l
f0102e7a	obj/kern/kernel.asm	/^f0102e7a:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0102e7d	obj/kern/kernel.asm	/^f0102e7d:	e8 92 df ff ff       	call   f0100e14 <page_free>$/;"	l
f0102e82	obj/kern/kernel.asm	/^f0102e82:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0102e89	obj/kern/kernel.asm	/^f0102e89:	e8 41 e5 ff ff       	call   f01013cf <page_alloc_4pages>$/;"	l
f0102e8e	obj/kern/kernel.asm	/^f0102e8e:	89 c1                	mov    %eax,%ecx$/;"	l
f0102e90	obj/kern/kernel.asm	/^f0102e90:	2b 0d f0 ce 22 f0    	sub    0xf022cef0,%ecx$/;"	l
f0102e96	obj/kern/kernel.asm	/^f0102e96:	c1 f9 03             	sar    $0x3,%ecx$/;"	l
f0102e99	obj/kern/kernel.asm	/^f0102e99:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f0102e9c	obj/kern/kernel.asm	/^f0102e9c:	89 ca                	mov    %ecx,%edx$/;"	l
f0102e9e	obj/kern/kernel.asm	/^f0102e9e:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102ea1	obj/kern/kernel.asm	/^f0102ea1:	3b 15 e8 ce 22 f0    	cmp    0xf022cee8,%edx$/;"	l
f0102ea7	obj/kern/kernel.asm	/^f0102ea7:	72 20                	jb     f0102ec9 <mem_init+0x7f0>$/;"	l
f0102ea9	obj/kern/kernel.asm	/^f0102ea9:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0102ead	obj/kern/kernel.asm	/^f0102ead:	c7 44 24 08 8c 6a 10 	movl   $0xf0106a8c,0x8(%esp)$/;"	l
f0102eb4	obj/kern/kernel.asm	/^f0102eb4:	f0 $/;"	l
f0102eb5	obj/kern/kernel.asm	/^f0102eb5:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f0102ebc	obj/kern/kernel.asm	/^f0102ebc:	00 $/;"	l
f0102ebd	obj/kern/kernel.asm	/^f0102ebd:	c7 04 24 8d 76 10 f0 	movl   $0xf010768d,(%esp)$/;"	l
f0102ec4	obj/kern/kernel.asm	/^f0102ec4:	e8 bc d1 ff ff       	call   f0100085 <_panic>$/;"	l
f0102ec9	obj/kern/kernel.asm	/^f0102ec9:	80 b9 00 00 00 f0 00 	cmpb   $0x0,-0x10000000(%ecx)$/;"	l
f0102ed0	obj/kern/kernel.asm	/^f0102ed0:	75 11                	jne    f0102ee3 <mem_init+0x80a>$/;"	l
f0102ed2	obj/kern/kernel.asm	/^f0102ed2:	8d 91 01 00 00 f0    	lea    -0xfffffff(%ecx),%edx$/;"	l
f0102ed8	obj/kern/kernel.asm	/^f0102ed8:	81 e9 00 c0 ff 0f    	sub    $0xfffc000,%ecx$/;"	l
f0102ede	obj/kern/kernel.asm	/^f0102ede:	80 3a 00             	cmpb   $0x0,(%edx)$/;"	l
f0102ee1	obj/kern/kernel.asm	/^f0102ee1:	74 24                	je     f0102f07 <mem_init+0x82e>$/;"	l
f0102ee3	obj/kern/kernel.asm	/^f0102ee3:	c7 44 24 0c 9c 79 10 	movl   $0xf010799c,0xc(%esp)$/;"	l
f0102eea	obj/kern/kernel.asm	/^f0102eea:	f0 $/;"	l
f0102eeb	obj/kern/kernel.asm	/^f0102eeb:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0102ef2	obj/kern/kernel.asm	/^f0102ef2:	f0 $/;"	l
f0102ef3	obj/kern/kernel.asm	/^f0102ef3:	c7 44 24 04 86 04 00 	movl   $0x486,0x4(%esp)$/;"	l
f0102efa	obj/kern/kernel.asm	/^f0102efa:	00 $/;"	l
f0102efb	obj/kern/kernel.asm	/^f0102efb:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0102f02	obj/kern/kernel.asm	/^f0102f02:	e8 7e d1 ff ff       	call   f0100085 <_panic>$/;"	l
f0102f07	obj/kern/kernel.asm	/^f0102f07:	83 c2 01             	add    $0x1,%edx$/;"	l
f0102f0a	obj/kern/kernel.asm	/^f0102f0a:	39 ca                	cmp    %ecx,%edx$/;"	l
f0102f0c	obj/kern/kernel.asm	/^f0102f0c:	75 d0                	jne    f0102ede <mem_init+0x805>$/;"	l
f0102f0e	obj/kern/kernel.asm	/^f0102f0e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102f11	obj/kern/kernel.asm	/^f0102f11:	e8 ad de ff ff       	call   f0100dc3 <page_free_4pages>$/;"	l
f0102f16	obj/kern/kernel.asm	/^f0102f16:	85 c0                	test   %eax,%eax$/;"	l
f0102f18	obj/kern/kernel.asm	/^f0102f18:	74 24                	je     f0102f3e <mem_init+0x865>$/;"	l
f0102f1a	obj/kern/kernel.asm	/^f0102f1a:	c7 44 24 0c a9 79 10 	movl   $0xf01079a9,0xc(%esp)$/;"	l
f0102f21	obj/kern/kernel.asm	/^f0102f21:	f0 $/;"	l
f0102f22	obj/kern/kernel.asm	/^f0102f22:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0102f29	obj/kern/kernel.asm	/^f0102f29:	f0 $/;"	l
f0102f2a	obj/kern/kernel.asm	/^f0102f2a:	c7 44 24 04 8a 04 00 	movl   $0x48a,0x4(%esp)$/;"	l
f0102f31	obj/kern/kernel.asm	/^f0102f31:	00 $/;"	l
f0102f32	obj/kern/kernel.asm	/^f0102f32:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0102f39	obj/kern/kernel.asm	/^f0102f39:	e8 47 d1 ff ff       	call   f0100085 <_panic>$/;"	l
f0102f3e	obj/kern/kernel.asm	/^f0102f3e:	c7 04 24 a8 74 10 f0 	movl   $0xf01074a8,(%esp)$/;"	l
f0102f45	obj/kern/kernel.asm	/^f0102f45:	e8 65 13 00 00       	call   f01042af <cprintf>$/;"	l
f0102f4a	obj/kern/kernel.asm	/^f0102f4a:	a1 f0 ce 22 f0       	mov    0xf022cef0,%eax$/;"	l
f0102f4f	obj/kern/kernel.asm	/^f0102f4f:	89 c2                	mov    %eax,%edx$/;"	l
f0102f51	obj/kern/kernel.asm	/^f0102f51:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102f56	obj/kern/kernel.asm	/^f0102f56:	77 20                	ja     f0102f78 <mem_init+0x89f>$/;"	l
f0102f58	obj/kern/kernel.asm	/^f0102f58:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102f5c	obj/kern/kernel.asm	/^f0102f5c:	c7 44 24 08 48 6a 10 	movl   $0xf0106a48,0x8(%esp)$/;"	l
f0102f63	obj/kern/kernel.asm	/^f0102f63:	f0 $/;"	l
f0102f64	obj/kern/kernel.asm	/^f0102f64:	c7 44 24 04 bd 00 00 	movl   $0xbd,0x4(%esp)$/;"	l
f0102f6b	obj/kern/kernel.asm	/^f0102f6b:	00 $/;"	l
f0102f6c	obj/kern/kernel.asm	/^f0102f6c:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0102f73	obj/kern/kernel.asm	/^f0102f73:	e8 0d d1 ff ff       	call   f0100085 <_panic>$/;"	l
f0102f78	obj/kern/kernel.asm	/^f0102f78:	a1 e8 ce 22 f0       	mov    0xf022cee8,%eax$/;"	l
f0102f7d	obj/kern/kernel.asm	/^f0102f7d:	8d 0c c5 ff 0f 00 00 	lea    0xfff(,%eax,8),%ecx$/;"	l
f0102f84	obj/kern/kernel.asm	/^f0102f84:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f0102f8a	obj/kern/kernel.asm	/^f0102f8a:	c7 44 24 04 05 00 00 	movl   $0x5,0x4(%esp)$/;"	l
f0102f91	obj/kern/kernel.asm	/^f0102f91:	00 $/;"	l
f0102f92	obj/kern/kernel.asm	/^f0102f92:	8d 82 00 00 00 10    	lea    0x10000000(%edx),%eax$/;"	l
f0102f98	obj/kern/kernel.asm	/^f0102f98:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102f9b	obj/kern/kernel.asm	/^f0102f9b:	ba 00 00 00 ef       	mov    $0xef000000,%edx$/;"	l
f0102fa0	obj/kern/kernel.asm	/^f0102fa0:	a1 ec ce 22 f0       	mov    0xf022ceec,%eax$/;"	l
f0102fa5	obj/kern/kernel.asm	/^f0102fa5:	e8 9e e9 ff ff       	call   f0101948 <boot_map_region>$/;"	l
f0102faa	obj/kern/kernel.asm	/^f0102faa:	b8 00 70 11 f0       	mov    $0xf0117000,%eax$/;"	l
f0102faf	obj/kern/kernel.asm	/^f0102faf:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102fb4	obj/kern/kernel.asm	/^f0102fb4:	77 20                	ja     f0102fd6 <mem_init+0x8fd>$/;"	l
f0102fb6	obj/kern/kernel.asm	/^f0102fb6:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102fba	obj/kern/kernel.asm	/^f0102fba:	c7 44 24 08 48 6a 10 	movl   $0xf0106a48,0x8(%esp)$/;"	l
f0102fc1	obj/kern/kernel.asm	/^f0102fc1:	f0 $/;"	l
f0102fc2	obj/kern/kernel.asm	/^f0102fc2:	c7 44 24 04 d1 00 00 	movl   $0xd1,0x4(%esp)$/;"	l
f0102fc9	obj/kern/kernel.asm	/^f0102fc9:	00 $/;"	l
f0102fca	obj/kern/kernel.asm	/^f0102fca:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0102fd1	obj/kern/kernel.asm	/^f0102fd1:	e8 af d0 ff ff       	call   f0100085 <_panic>$/;"	l
f0102fd6	obj/kern/kernel.asm	/^f0102fd6:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f0102fdd	obj/kern/kernel.asm	/^f0102fdd:	00 $/;"	l
f0102fde	obj/kern/kernel.asm	/^f0102fde:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102fe3	obj/kern/kernel.asm	/^f0102fe3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102fe6	obj/kern/kernel.asm	/^f0102fe6:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f0102feb	obj/kern/kernel.asm	/^f0102feb:	ba 00 80 bf ef       	mov    $0xefbf8000,%edx$/;"	l
f0102ff0	obj/kern/kernel.asm	/^f0102ff0:	a1 ec ce 22 f0       	mov    0xf022ceec,%eax$/;"	l
f0102ff5	obj/kern/kernel.asm	/^f0102ff5:	e8 4e e9 ff ff       	call   f0101948 <boot_map_region>$/;"	l
f0102ffa	obj/kern/kernel.asm	/^f0102ffa:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f0103001	obj/kern/kernel.asm	/^f0103001:	00 $/;"	l
f0103002	obj/kern/kernel.asm	/^f0103002:	c7 04 24 00 00 00 fe 	movl   $0xfe000000,(%esp)$/;"	l
f0103009	obj/kern/kernel.asm	/^f0103009:	b9 00 00 00 02       	mov    $0x2000000,%ecx$/;"	l
f010300e	obj/kern/kernel.asm	/^f010300e:	ba 00 00 00 fe       	mov    $0xfe000000,%edx$/;"	l
f0103013	obj/kern/kernel.asm	/^f0103013:	a1 ec ce 22 f0       	mov    0xf022ceec,%eax$/;"	l
f0103018	obj/kern/kernel.asm	/^f0103018:	e8 2b e9 ff ff       	call   f0101948 <boot_map_region>$/;"	l
f010301d	obj/kern/kernel.asm	/^f010301d:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f0103024	obj/kern/kernel.asm	/^f0103024:	00 $/;"	l
f0103025	obj/kern/kernel.asm	/^f0103025:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010302c	obj/kern/kernel.asm	/^f010302c:	b9 00 00 00 10       	mov    $0x10000000,%ecx$/;"	l
f0103031	obj/kern/kernel.asm	/^f0103031:	ba 00 00 00 f0       	mov    $0xf0000000,%edx$/;"	l
f0103036	obj/kern/kernel.asm	/^f0103036:	a1 ec ce 22 f0       	mov    0xf022ceec,%eax$/;"	l
f010303b	obj/kern/kernel.asm	/^f010303b:	e8 08 e9 ff ff       	call   f0101948 <boot_map_region>$/;"	l
f0103040	obj/kern/kernel.asm	/^f0103040:	a1 40 c2 22 f0       	mov    0xf022c240,%eax$/;"	l
f0103045	obj/kern/kernel.asm	/^f0103045:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010304a	obj/kern/kernel.asm	/^f010304a:	77 20                	ja     f010306c <mem_init+0x993>$/;"	l
f010304c	obj/kern/kernel.asm	/^f010304c:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103050	obj/kern/kernel.asm	/^f0103050:	c7 44 24 08 48 6a 10 	movl   $0xf0106a48,0x8(%esp)$/;"	l
f0103057	obj/kern/kernel.asm	/^f0103057:	f0 $/;"	l
f0103058	obj/kern/kernel.asm	/^f0103058:	c7 44 24 04 df 00 00 	movl   $0xdf,0x4(%esp)$/;"	l
f010305f	obj/kern/kernel.asm	/^f010305f:	00 $/;"	l
f0103060	obj/kern/kernel.asm	/^f0103060:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0103067	obj/kern/kernel.asm	/^f0103067:	e8 19 d0 ff ff       	call   f0100085 <_panic>$/;"	l
f010306c	obj/kern/kernel.asm	/^f010306c:	c7 44 24 04 05 00 00 	movl   $0x5,0x4(%esp)$/;"	l
f0103073	obj/kern/kernel.asm	/^f0103073:	00 $/;"	l
f0103074	obj/kern/kernel.asm	/^f0103074:	8d 80 00 00 00 10    	lea    0x10000000(%eax),%eax$/;"	l
f010307a	obj/kern/kernel.asm	/^f010307a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010307d	obj/kern/kernel.asm	/^f010307d:	b9 00 f0 01 00       	mov    $0x1f000,%ecx$/;"	l
f0103082	obj/kern/kernel.asm	/^f0103082:	ba 00 00 c0 ee       	mov    $0xeec00000,%edx$/;"	l
f0103087	obj/kern/kernel.asm	/^f0103087:	a1 ec ce 22 f0       	mov    0xf022ceec,%eax$/;"	l
f010308c	obj/kern/kernel.asm	/^f010308c:	e8 b7 e8 ff ff       	call   f0101948 <boot_map_region>$/;"	l
f0103091	obj/kern/kernel.asm	/^f0103091:	8b 35 ec ce 22 f0    	mov    0xf022ceec,%esi$/;"	l
f0103097	obj/kern/kernel.asm	/^f0103097:	a1 e8 ce 22 f0       	mov    0xf022cee8,%eax$/;"	l
f010309c	obj/kern/kernel.asm	/^f010309c:	8d 3c c5 ff 0f 00 00 	lea    0xfff(,%eax,8),%edi$/;"	l
f01030a3	obj/kern/kernel.asm	/^f01030a3:	81 e7 00 f0 ff ff    	and    $0xfffff000,%edi$/;"	l
f01030a9	obj/kern/kernel.asm	/^f01030a9:	74 79                	je     f0103124 <mem_init+0xa4b>$/;"	l
f01030ab	obj/kern/kernel.asm	/^f01030ab:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01030b0	obj/kern/kernel.asm	/^f01030b0:	8d 93 00 00 00 ef    	lea    -0x11000000(%ebx),%edx$/;"	l
f01030b6	obj/kern/kernel.asm	/^f01030b6:	89 f0                	mov    %esi,%eax$/;"	l
f01030b8	obj/kern/kernel.asm	/^f01030b8:	e8 c4 dd ff ff       	call   f0100e81 <check_va2pa>$/;"	l
f01030bd	obj/kern/kernel.asm	/^f01030bd:	8b 15 f0 ce 22 f0    	mov    0xf022cef0,%edx$/;"	l
f01030c3	obj/kern/kernel.asm	/^f01030c3:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
f01030c9	obj/kern/kernel.asm	/^f01030c9:	77 20                	ja     f01030eb <mem_init+0xa12>$/;"	l
f01030cb	obj/kern/kernel.asm	/^f01030cb:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f01030cf	obj/kern/kernel.asm	/^f01030cf:	c7 44 24 08 48 6a 10 	movl   $0xf0106a48,0x8(%esp)$/;"	l
f01030d6	obj/kern/kernel.asm	/^f01030d6:	f0 $/;"	l
f01030d7	obj/kern/kernel.asm	/^f01030d7:	c7 44 24 04 85 03 00 	movl   $0x385,0x4(%esp)$/;"	l
f01030de	obj/kern/kernel.asm	/^f01030de:	00 $/;"	l
f01030df	obj/kern/kernel.asm	/^f01030df:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f01030e6	obj/kern/kernel.asm	/^f01030e6:	e8 9a cf ff ff       	call   f0100085 <_panic>$/;"	l
f01030eb	obj/kern/kernel.asm	/^f01030eb:	8d 94 1a 00 00 00 10 	lea    0x10000000(%edx,%ebx,1),%edx$/;"	l
f01030f2	obj/kern/kernel.asm	/^f01030f2:	39 d0                	cmp    %edx,%eax$/;"	l
f01030f4	obj/kern/kernel.asm	/^f01030f4:	74 24                	je     f010311a <mem_init+0xa41>$/;"	l
f01030f6	obj/kern/kernel.asm	/^f01030f6:	c7 44 24 0c c8 74 10 	movl   $0xf01074c8,0xc(%esp)$/;"	l
f01030fd	obj/kern/kernel.asm	/^f01030fd:	f0 $/;"	l
f01030fe	obj/kern/kernel.asm	/^f01030fe:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0103105	obj/kern/kernel.asm	/^f0103105:	f0 $/;"	l
f0103106	obj/kern/kernel.asm	/^f0103106:	c7 44 24 04 85 03 00 	movl   $0x385,0x4(%esp)$/;"	l
f010310d	obj/kern/kernel.asm	/^f010310d:	00 $/;"	l
f010310e	obj/kern/kernel.asm	/^f010310e:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0103115	obj/kern/kernel.asm	/^f0103115:	e8 6b cf ff ff       	call   f0100085 <_panic>$/;"	l
f010311a	obj/kern/kernel.asm	/^f010311a:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103120	obj/kern/kernel.asm	/^f0103120:	39 df                	cmp    %ebx,%edi$/;"	l
f0103122	obj/kern/kernel.asm	/^f0103122:	77 8c                	ja     f01030b0 <mem_init+0x9d7>$/;"	l
f0103124	obj/kern/kernel.asm	/^f0103124:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0103129	obj/kern/kernel.asm	/^f0103129:	8d 93 00 00 c0 ee    	lea    -0x11400000(%ebx),%edx$/;"	l
f010312f	obj/kern/kernel.asm	/^f010312f:	89 f0                	mov    %esi,%eax$/;"	l
f0103131	obj/kern/kernel.asm	/^f0103131:	e8 4b dd ff ff       	call   f0100e81 <check_va2pa>$/;"	l
f0103136	obj/kern/kernel.asm	/^f0103136:	8b 15 40 c2 22 f0    	mov    0xf022c240,%edx$/;"	l
f010313c	obj/kern/kernel.asm	/^f010313c:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
f0103142	obj/kern/kernel.asm	/^f0103142:	77 20                	ja     f0103164 <mem_init+0xa8b>$/;"	l
f0103144	obj/kern/kernel.asm	/^f0103144:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0103148	obj/kern/kernel.asm	/^f0103148:	c7 44 24 08 48 6a 10 	movl   $0xf0106a48,0x8(%esp)$/;"	l
f010314f	obj/kern/kernel.asm	/^f010314f:	f0 $/;"	l
f0103150	obj/kern/kernel.asm	/^f0103150:	c7 44 24 04 8b 03 00 	movl   $0x38b,0x4(%esp)$/;"	l
f0103157	obj/kern/kernel.asm	/^f0103157:	00 $/;"	l
f0103158	obj/kern/kernel.asm	/^f0103158:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f010315f	obj/kern/kernel.asm	/^f010315f:	e8 21 cf ff ff       	call   f0100085 <_panic>$/;"	l
f0103164	obj/kern/kernel.asm	/^f0103164:	8d 94 1a 00 00 00 10 	lea    0x10000000(%edx,%ebx,1),%edx$/;"	l
f010316b	obj/kern/kernel.asm	/^f010316b:	39 d0                	cmp    %edx,%eax$/;"	l
f010316d	obj/kern/kernel.asm	/^f010316d:	74 24                	je     f0103193 <mem_init+0xaba>$/;"	l
f010316f	obj/kern/kernel.asm	/^f010316f:	c7 44 24 0c fc 74 10 	movl   $0xf01074fc,0xc(%esp)$/;"	l
f0103176	obj/kern/kernel.asm	/^f0103176:	f0 $/;"	l
f0103177	obj/kern/kernel.asm	/^f0103177:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f010317e	obj/kern/kernel.asm	/^f010317e:	f0 $/;"	l
f010317f	obj/kern/kernel.asm	/^f010317f:	c7 44 24 04 8b 03 00 	movl   $0x38b,0x4(%esp)$/;"	l
f0103186	obj/kern/kernel.asm	/^f0103186:	00 $/;"	l
f0103187	obj/kern/kernel.asm	/^f0103187:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f010318e	obj/kern/kernel.asm	/^f010318e:	e8 f2 ce ff ff       	call   f0100085 <_panic>$/;"	l
f0103193	obj/kern/kernel.asm	/^f0103193:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103199	obj/kern/kernel.asm	/^f0103199:	81 fb 00 f0 01 00    	cmp    $0x1f000,%ebx$/;"	l
f010319f	obj/kern/kernel.asm	/^f010319f:	75 88                	jne    f0103129 <mem_init+0xa50>$/;"	l
f01031a1	obj/kern/kernel.asm	/^f01031a1:	a1 e8 ce 22 f0       	mov    0xf022cee8,%eax$/;"	l
f01031a6	obj/kern/kernel.asm	/^f01031a6:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01031a9	obj/kern/kernel.asm	/^f01031a9:	85 c0                	test   %eax,%eax$/;"	l
f01031ab	obj/kern/kernel.asm	/^f01031ab:	74 4c                	je     f01031f9 <mem_init+0xb20>$/;"	l
f01031ad	obj/kern/kernel.asm	/^f01031ad:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01031b2	obj/kern/kernel.asm	/^f01031b2:	8d 93 00 00 00 f0    	lea    -0x10000000(%ebx),%edx$/;"	l
f01031b8	obj/kern/kernel.asm	/^f01031b8:	89 f0                	mov    %esi,%eax$/;"	l
f01031ba	obj/kern/kernel.asm	/^f01031ba:	e8 c2 dc ff ff       	call   f0100e81 <check_va2pa>$/;"	l
f01031bf	obj/kern/kernel.asm	/^f01031bf:	39 c3                	cmp    %eax,%ebx$/;"	l
f01031c1	obj/kern/kernel.asm	/^f01031c1:	74 24                	je     f01031e7 <mem_init+0xb0e>$/;"	l
f01031c3	obj/kern/kernel.asm	/^f01031c3:	c7 44 24 0c 30 75 10 	movl   $0xf0107530,0xc(%esp)$/;"	l
f01031ca	obj/kern/kernel.asm	/^f01031ca:	f0 $/;"	l
f01031cb	obj/kern/kernel.asm	/^f01031cb:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f01031d2	obj/kern/kernel.asm	/^f01031d2:	f0 $/;"	l
f01031d3	obj/kern/kernel.asm	/^f01031d3:	c7 44 24 04 8f 03 00 	movl   $0x38f,0x4(%esp)$/;"	l
f01031da	obj/kern/kernel.asm	/^f01031da:	00 $/;"	l
f01031db	obj/kern/kernel.asm	/^f01031db:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f01031e2	obj/kern/kernel.asm	/^f01031e2:	e8 9e ce ff ff       	call   f0100085 <_panic>$/;"	l
f01031e7	obj/kern/kernel.asm	/^f01031e7:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01031ed	obj/kern/kernel.asm	/^f01031ed:	a1 e8 ce 22 f0       	mov    0xf022cee8,%eax$/;"	l
f01031f2	obj/kern/kernel.asm	/^f01031f2:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01031f5	obj/kern/kernel.asm	/^f01031f5:	39 c3                	cmp    %eax,%ebx$/;"	l
f01031f7	obj/kern/kernel.asm	/^f01031f7:	72 b9                	jb     f01031b2 <mem_init+0xad9>$/;"	l
f01031f9	obj/kern/kernel.asm	/^f01031f9:	bb 00 00 00 fe       	mov    $0xfe000000,%ebx$/;"	l
f01031fe	obj/kern/kernel.asm	/^f01031fe:	89 da                	mov    %ebx,%edx$/;"	l
f0103200	obj/kern/kernel.asm	/^f0103200:	89 f0                	mov    %esi,%eax$/;"	l
f0103202	obj/kern/kernel.asm	/^f0103202:	e8 7a dc ff ff       	call   f0100e81 <check_va2pa>$/;"	l
f0103207	obj/kern/kernel.asm	/^f0103207:	39 c3                	cmp    %eax,%ebx$/;"	l
f0103209	obj/kern/kernel.asm	/^f0103209:	74 24                	je     f010322f <mem_init+0xb56>$/;"	l
f010320b	obj/kern/kernel.asm	/^f010320b:	c7 44 24 0c c0 79 10 	movl   $0xf01079c0,0xc(%esp)$/;"	l
f0103212	obj/kern/kernel.asm	/^f0103212:	f0 $/;"	l
f0103213	obj/kern/kernel.asm	/^f0103213:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f010321a	obj/kern/kernel.asm	/^f010321a:	f0 $/;"	l
f010321b	obj/kern/kernel.asm	/^f010321b:	c7 44 24 04 93 03 00 	movl   $0x393,0x4(%esp)$/;"	l
f0103222	obj/kern/kernel.asm	/^f0103222:	00 $/;"	l
f0103223	obj/kern/kernel.asm	/^f0103223:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f010322a	obj/kern/kernel.asm	/^f010322a:	e8 56 ce ff ff       	call   f0100085 <_panic>$/;"	l
f010322f	obj/kern/kernel.asm	/^f010322f:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103235	obj/kern/kernel.asm	/^f0103235:	81 fb 00 f0 ff ff    	cmp    $0xfffff000,%ebx$/;"	l
f010323b	obj/kern/kernel.asm	/^f010323b:	75 c1                	jne    f01031fe <mem_init+0xb25>$/;"	l
f010323d	obj/kern/kernel.asm	/^f010323d:	c7 45 dc 00 e0 22 f0 	movl   $0xf022e000,-0x24(%ebp)$/;"	l
f0103244	obj/kern/kernel.asm	/^f0103244:	c7 45 e0 00 00 bf ef 	movl   $0xefbf0000,-0x20(%ebp)$/;"	l
f010324b	obj/kern/kernel.asm	/^f010324b:	89 f7                	mov    %esi,%edi$/;"	l
f010324d	obj/kern/kernel.asm	/^f010324d:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0103250	obj/kern/kernel.asm	/^f0103250:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0103253	obj/kern/kernel.asm	/^f0103253:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f0103256	obj/kern/kernel.asm	/^f0103256:	81 c3 00 80 00 00    	add    $0x8000,%ebx$/;"	l
f010325c	obj/kern/kernel.asm	/^f010325c:	89 c6                	mov    %eax,%esi$/;"	l
f010325e	obj/kern/kernel.asm	/^f010325e:	81 c6 00 00 00 10    	add    $0x10000000,%esi$/;"	l
f0103264	obj/kern/kernel.asm	/^f0103264:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f0103267	obj/kern/kernel.asm	/^f0103267:	81 c1 00 00 01 00    	add    $0x10000,%ecx$/;"	l
f010326d	obj/kern/kernel.asm	/^f010326d:	89 4d e4             	mov    %ecx,-0x1c(%ebp)$/;"	l
f0103270	obj/kern/kernel.asm	/^f0103270:	89 da                	mov    %ebx,%edx$/;"	l
f0103272	obj/kern/kernel.asm	/^f0103272:	89 f8                	mov    %edi,%eax$/;"	l
f0103274	obj/kern/kernel.asm	/^f0103274:	e8 08 dc ff ff       	call   f0100e81 <check_va2pa>$/;"	l
f0103279	obj/kern/kernel.asm	/^f0103279:	81 7d dc ff ff ff ef 	cmpl   $0xefffffff,-0x24(%ebp)$/;"	l
f0103280	obj/kern/kernel.asm	/^f0103280:	77 23                	ja     f01032a5 <mem_init+0xbcc>$/;"	l
f0103282	obj/kern/kernel.asm	/^f0103282:	8b 7d d8             	mov    -0x28(%ebp),%edi$/;"	l
f0103285	obj/kern/kernel.asm	/^f0103285:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0103289	obj/kern/kernel.asm	/^f0103289:	c7 44 24 08 48 6a 10 	movl   $0xf0106a48,0x8(%esp)$/;"	l
f0103290	obj/kern/kernel.asm	/^f0103290:	f0 $/;"	l
f0103291	obj/kern/kernel.asm	/^f0103291:	c7 44 24 04 9b 03 00 	movl   $0x39b,0x4(%esp)$/;"	l
f0103298	obj/kern/kernel.asm	/^f0103298:	00 $/;"	l
f0103299	obj/kern/kernel.asm	/^f0103299:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f01032a0	obj/kern/kernel.asm	/^f01032a0:	e8 e0 cd ff ff       	call   f0100085 <_panic>$/;"	l
f01032a5	obj/kern/kernel.asm	/^f01032a5:	39 f0                	cmp    %esi,%eax$/;"	l
f01032a7	obj/kern/kernel.asm	/^f01032a7:	74 24                	je     f01032cd <mem_init+0xbf4>$/;"	l
f01032a9	obj/kern/kernel.asm	/^f01032a9:	c7 44 24 0c 58 75 10 	movl   $0xf0107558,0xc(%esp)$/;"	l
f01032b0	obj/kern/kernel.asm	/^f01032b0:	f0 $/;"	l
f01032b1	obj/kern/kernel.asm	/^f01032b1:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f01032b8	obj/kern/kernel.asm	/^f01032b8:	f0 $/;"	l
f01032b9	obj/kern/kernel.asm	/^f01032b9:	c7 44 24 04 9b 03 00 	movl   $0x39b,0x4(%esp)$/;"	l
f01032c0	obj/kern/kernel.asm	/^f01032c0:	00 $/;"	l
f01032c1	obj/kern/kernel.asm	/^f01032c1:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f01032c8	obj/kern/kernel.asm	/^f01032c8:	e8 b8 cd ff ff       	call   f0100085 <_panic>$/;"	l
f01032cd	obj/kern/kernel.asm	/^f01032cd:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01032d3	obj/kern/kernel.asm	/^f01032d3:	8d b0 00 10 00 00    	lea    0x1000(%eax),%esi$/;"	l
f01032d9	obj/kern/kernel.asm	/^f01032d9:	39 5d e4             	cmp    %ebx,-0x1c(%ebp)$/;"	l
f01032dc	obj/kern/kernel.asm	/^f01032dc:	0f 85 5d 05 00 00    	jne    f010383f <mem_init+0x1166>$/;"	l
f01032e2	obj/kern/kernel.asm	/^f01032e2:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01032e7	obj/kern/kernel.asm	/^f01032e7:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f01032ea	obj/kern/kernel.asm	/^f01032ea:	8d 14 1e             	lea    (%esi,%ebx,1),%edx$/;"	l
f01032ed	obj/kern/kernel.asm	/^f01032ed:	89 f8                	mov    %edi,%eax$/;"	l
f01032ef	obj/kern/kernel.asm	/^f01032ef:	e8 8d db ff ff       	call   f0100e81 <check_va2pa>$/;"	l
f01032f4	obj/kern/kernel.asm	/^f01032f4:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01032f7	obj/kern/kernel.asm	/^f01032f7:	74 24                	je     f010331d <mem_init+0xc44>$/;"	l
f01032f9	obj/kern/kernel.asm	/^f01032f9:	c7 44 24 0c a0 75 10 	movl   $0xf01075a0,0xc(%esp)$/;"	l
f0103300	obj/kern/kernel.asm	/^f0103300:	f0 $/;"	l
f0103301	obj/kern/kernel.asm	/^f0103301:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0103308	obj/kern/kernel.asm	/^f0103308:	f0 $/;"	l
f0103309	obj/kern/kernel.asm	/^f0103309:	c7 44 24 04 9d 03 00 	movl   $0x39d,0x4(%esp)$/;"	l
f0103310	obj/kern/kernel.asm	/^f0103310:	00 $/;"	l
f0103311	obj/kern/kernel.asm	/^f0103311:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0103318	obj/kern/kernel.asm	/^f0103318:	e8 68 cd ff ff       	call   f0100085 <_panic>$/;"	l
f010331d	obj/kern/kernel.asm	/^f010331d:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103323	obj/kern/kernel.asm	/^f0103323:	81 fb 00 80 00 00    	cmp    $0x8000,%ebx$/;"	l
f0103329	obj/kern/kernel.asm	/^f0103329:	75 bf                	jne    f01032ea <mem_init+0xc11>$/;"	l
f010332b	obj/kern/kernel.asm	/^f010332b:	81 6d e0 00 00 01 00 	subl   $0x10000,-0x20(%ebp)$/;"	l
f0103332	obj/kern/kernel.asm	/^f0103332:	81 45 dc 00 80 00 00 	addl   $0x8000,-0x24(%ebp)$/;"	l
f0103339	obj/kern/kernel.asm	/^f0103339:	81 7d e0 00 00 b7 ef 	cmpl   $0xefb70000,-0x20(%ebp)$/;"	l
f0103340	obj/kern/kernel.asm	/^f0103340:	0f 85 07 ff ff ff    	jne    f010324d <mem_init+0xb74>$/;"	l
f0103346	obj/kern/kernel.asm	/^f0103346:	89 fe                	mov    %edi,%esi$/;"	l
f0103348	obj/kern/kernel.asm	/^f0103348:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010334d	obj/kern/kernel.asm	/^f010334d:	8d 90 45 fc ff ff    	lea    -0x3bb(%eax),%edx$/;"	l
f0103353	obj/kern/kernel.asm	/^f0103353:	83 fa 03             	cmp    $0x3,%edx$/;"	l
f0103356	obj/kern/kernel.asm	/^f0103356:	77 2e                	ja     f0103386 <mem_init+0xcad>$/;"	l
f0103358	obj/kern/kernel.asm	/^f0103358:	f6 04 86 01          	testb  $0x1,(%esi,%eax,4)$/;"	l
f010335c	obj/kern/kernel.asm	/^f010335c:	0f 85 aa 00 00 00    	jne    f010340c <mem_init+0xd33>$/;"	l
f0103362	obj/kern/kernel.asm	/^f0103362:	c7 44 24 0c db 79 10 	movl   $0xf01079db,0xc(%esp)$/;"	l
f0103369	obj/kern/kernel.asm	/^f0103369:	f0 $/;"	l
f010336a	obj/kern/kernel.asm	/^f010336a:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0103371	obj/kern/kernel.asm	/^f0103371:	f0 $/;"	l
f0103372	obj/kern/kernel.asm	/^f0103372:	c7 44 24 04 a7 03 00 	movl   $0x3a7,0x4(%esp)$/;"	l
f0103379	obj/kern/kernel.asm	/^f0103379:	00 $/;"	l
f010337a	obj/kern/kernel.asm	/^f010337a:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0103381	obj/kern/kernel.asm	/^f0103381:	e8 ff cc ff ff       	call   f0100085 <_panic>$/;"	l
f0103386	obj/kern/kernel.asm	/^f0103386:	3d bf 03 00 00       	cmp    $0x3bf,%eax$/;"	l
f010338b	obj/kern/kernel.asm	/^f010338b:	76 55                	jbe    f01033e2 <mem_init+0xd09>$/;"	l
f010338d	obj/kern/kernel.asm	/^f010338d:	8b 14 86             	mov    (%esi,%eax,4),%edx$/;"	l
f0103390	obj/kern/kernel.asm	/^f0103390:	f6 c2 01             	test   $0x1,%dl$/;"	l
f0103393	obj/kern/kernel.asm	/^f0103393:	75 24                	jne    f01033b9 <mem_init+0xce0>$/;"	l
f0103395	obj/kern/kernel.asm	/^f0103395:	c7 44 24 0c db 79 10 	movl   $0xf01079db,0xc(%esp)$/;"	l
f010339c	obj/kern/kernel.asm	/^f010339c:	f0 $/;"	l
f010339d	obj/kern/kernel.asm	/^f010339d:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f01033a4	obj/kern/kernel.asm	/^f01033a4:	f0 $/;"	l
f01033a5	obj/kern/kernel.asm	/^f01033a5:	c7 44 24 04 ab 03 00 	movl   $0x3ab,0x4(%esp)$/;"	l
f01033ac	obj/kern/kernel.asm	/^f01033ac:	00 $/;"	l
f01033ad	obj/kern/kernel.asm	/^f01033ad:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f01033b4	obj/kern/kernel.asm	/^f01033b4:	e8 cc cc ff ff       	call   f0100085 <_panic>$/;"	l
f01033b9	obj/kern/kernel.asm	/^f01033b9:	f6 c2 02             	test   $0x2,%dl$/;"	l
f01033bc	obj/kern/kernel.asm	/^f01033bc:	75 4e                	jne    f010340c <mem_init+0xd33>$/;"	l
f01033be	obj/kern/kernel.asm	/^f01033be:	c7 44 24 0c ec 79 10 	movl   $0xf01079ec,0xc(%esp)$/;"	l
f01033c5	obj/kern/kernel.asm	/^f01033c5:	f0 $/;"	l
f01033c6	obj/kern/kernel.asm	/^f01033c6:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f01033cd	obj/kern/kernel.asm	/^f01033cd:	f0 $/;"	l
f01033ce	obj/kern/kernel.asm	/^f01033ce:	c7 44 24 04 ac 03 00 	movl   $0x3ac,0x4(%esp)$/;"	l
f01033d5	obj/kern/kernel.asm	/^f01033d5:	00 $/;"	l
f01033d6	obj/kern/kernel.asm	/^f01033d6:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f01033dd	obj/kern/kernel.asm	/^f01033dd:	e8 a3 cc ff ff       	call   f0100085 <_panic>$/;"	l
f01033e2	obj/kern/kernel.asm	/^f01033e2:	83 3c 86 00          	cmpl   $0x0,(%esi,%eax,4)$/;"	l
f01033e6	obj/kern/kernel.asm	/^f01033e6:	74 24                	je     f010340c <mem_init+0xd33>$/;"	l
f01033e8	obj/kern/kernel.asm	/^f01033e8:	c7 44 24 0c fd 79 10 	movl   $0xf01079fd,0xc(%esp)$/;"	l
f01033ef	obj/kern/kernel.asm	/^f01033ef:	f0 $/;"	l
f01033f0	obj/kern/kernel.asm	/^f01033f0:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f01033f7	obj/kern/kernel.asm	/^f01033f7:	f0 $/;"	l
f01033f8	obj/kern/kernel.asm	/^f01033f8:	c7 44 24 04 ae 03 00 	movl   $0x3ae,0x4(%esp)$/;"	l
f01033ff	obj/kern/kernel.asm	/^f01033ff:	00 $/;"	l
f0103400	obj/kern/kernel.asm	/^f0103400:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0103407	obj/kern/kernel.asm	/^f0103407:	e8 79 cc ff ff       	call   f0100085 <_panic>$/;"	l
f010340c	obj/kern/kernel.asm	/^f010340c:	83 c0 01             	add    $0x1,%eax$/;"	l
f010340f	obj/kern/kernel.asm	/^f010340f:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
f0103414	obj/kern/kernel.asm	/^f0103414:	0f 85 33 ff ff ff    	jne    f010334d <mem_init+0xc74>$/;"	l
f010341a	obj/kern/kernel.asm	/^f010341a:	c7 04 24 c4 75 10 f0 	movl   $0xf01075c4,(%esp)$/;"	l
f0103421	obj/kern/kernel.asm	/^f0103421:	e8 89 0e 00 00       	call   f01042af <cprintf>$/;"	l
f0103426	obj/kern/kernel.asm	/^f0103426:	a1 ec ce 22 f0       	mov    0xf022ceec,%eax$/;"	l
f010342b	obj/kern/kernel.asm	/^f010342b:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103430	obj/kern/kernel.asm	/^f0103430:	77 20                	ja     f0103452 <mem_init+0xd79>$/;"	l
f0103432	obj/kern/kernel.asm	/^f0103432:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103436	obj/kern/kernel.asm	/^f0103436:	c7 44 24 08 48 6a 10 	movl   $0xf0106a48,0x8(%esp)$/;"	l
f010343d	obj/kern/kernel.asm	/^f010343d:	f0 $/;"	l
f010343e	obj/kern/kernel.asm	/^f010343e:	c7 44 24 04 ea 00 00 	movl   $0xea,0x4(%esp)$/;"	l
f0103445	obj/kern/kernel.asm	/^f0103445:	00 $/;"	l
f0103446	obj/kern/kernel.asm	/^f0103446:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f010344d	obj/kern/kernel.asm	/^f010344d:	e8 33 cc ff ff       	call   f0100085 <_panic>$/;"	l
f0103452	obj/kern/kernel.asm	/^f0103452:	8d 80 00 00 00 10    	lea    0x10000000(%eax),%eax$/;"	l
f0103458	obj/kern/kernel.asm	/^f0103458:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010345b	obj/kern/kernel.asm	/^f010345b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103460	obj/kern/kernel.asm	/^f0103460:	e8 c4 db ff ff       	call   f0101029 <check_page_free_list>$/;"	l
f0103465	obj/kern/kernel.asm	/^f0103465:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0103468	obj/kern/kernel.asm	/^f0103468:	0d 23 00 05 80       	or     $0x80050023,%eax$/;"	l
f010346d	obj/kern/kernel.asm	/^f010346d:	83 e0 f3             	and    $0xfffffff3,%eax$/;"	l
f0103470	obj/kern/kernel.asm	/^f0103470:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0103473	obj/kern/kernel.asm	/^f0103473:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010347a	obj/kern/kernel.asm	/^f010347a:	e8 88 e0 ff ff       	call   f0101507 <page_alloc>$/;"	l
f010347f	obj/kern/kernel.asm	/^f010347f:	89 c3                	mov    %eax,%ebx$/;"	l
f0103481	obj/kern/kernel.asm	/^f0103481:	85 c0                	test   %eax,%eax$/;"	l
f0103483	obj/kern/kernel.asm	/^f0103483:	75 24                	jne    f01034a9 <mem_init+0xdd0>$/;"	l
f0103485	obj/kern/kernel.asm	/^f0103485:	c7 44 24 0c 7a 77 10 	movl   $0xf010777a,0xc(%esp)$/;"	l
f010348c	obj/kern/kernel.asm	/^f010348c:	f0 $/;"	l
f010348d	obj/kern/kernel.asm	/^f010348d:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0103494	obj/kern/kernel.asm	/^f0103494:	f0 $/;"	l
f0103495	obj/kern/kernel.asm	/^f0103495:	c7 44 24 04 9a 04 00 	movl   $0x49a,0x4(%esp)$/;"	l
f010349c	obj/kern/kernel.asm	/^f010349c:	00 $/;"	l
f010349d	obj/kern/kernel.asm	/^f010349d:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f01034a4	obj/kern/kernel.asm	/^f01034a4:	e8 dc cb ff ff       	call   f0100085 <_panic>$/;"	l
f01034a9	obj/kern/kernel.asm	/^f01034a9:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01034b0	obj/kern/kernel.asm	/^f01034b0:	e8 52 e0 ff ff       	call   f0101507 <page_alloc>$/;"	l
f01034b5	obj/kern/kernel.asm	/^f01034b5:	89 c7                	mov    %eax,%edi$/;"	l
f01034b7	obj/kern/kernel.asm	/^f01034b7:	85 c0                	test   %eax,%eax$/;"	l
f01034b9	obj/kern/kernel.asm	/^f01034b9:	75 24                	jne    f01034df <mem_init+0xe06>$/;"	l
f01034bb	obj/kern/kernel.asm	/^f01034bb:	c7 44 24 0c 90 77 10 	movl   $0xf0107790,0xc(%esp)$/;"	l
f01034c2	obj/kern/kernel.asm	/^f01034c2:	f0 $/;"	l
f01034c3	obj/kern/kernel.asm	/^f01034c3:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f01034ca	obj/kern/kernel.asm	/^f01034ca:	f0 $/;"	l
f01034cb	obj/kern/kernel.asm	/^f01034cb:	c7 44 24 04 9b 04 00 	movl   $0x49b,0x4(%esp)$/;"	l
f01034d2	obj/kern/kernel.asm	/^f01034d2:	00 $/;"	l
f01034d3	obj/kern/kernel.asm	/^f01034d3:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f01034da	obj/kern/kernel.asm	/^f01034da:	e8 a6 cb ff ff       	call   f0100085 <_panic>$/;"	l
f01034df	obj/kern/kernel.asm	/^f01034df:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01034e6	obj/kern/kernel.asm	/^f01034e6:	e8 1c e0 ff ff       	call   f0101507 <page_alloc>$/;"	l
f01034eb	obj/kern/kernel.asm	/^f01034eb:	89 c6                	mov    %eax,%esi$/;"	l
f01034ed	obj/kern/kernel.asm	/^f01034ed:	85 c0                	test   %eax,%eax$/;"	l
f01034ef	obj/kern/kernel.asm	/^f01034ef:	75 24                	jne    f0103515 <mem_init+0xe3c>$/;"	l
f01034f1	obj/kern/kernel.asm	/^f01034f1:	c7 44 24 0c a6 77 10 	movl   $0xf01077a6,0xc(%esp)$/;"	l
f01034f8	obj/kern/kernel.asm	/^f01034f8:	f0 $/;"	l
f01034f9	obj/kern/kernel.asm	/^f01034f9:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0103500	obj/kern/kernel.asm	/^f0103500:	f0 $/;"	l
f0103501	obj/kern/kernel.asm	/^f0103501:	c7 44 24 04 9c 04 00 	movl   $0x49c,0x4(%esp)$/;"	l
f0103508	obj/kern/kernel.asm	/^f0103508:	00 $/;"	l
f0103509	obj/kern/kernel.asm	/^f0103509:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0103510	obj/kern/kernel.asm	/^f0103510:	e8 70 cb ff ff       	call   f0100085 <_panic>$/;"	l
f0103515	obj/kern/kernel.asm	/^f0103515:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103518	obj/kern/kernel.asm	/^f0103518:	e8 f7 d8 ff ff       	call   f0100e14 <page_free>$/;"	l
f010351d	obj/kern/kernel.asm	/^f010351d:	89 f8                	mov    %edi,%eax$/;"	l
f010351f	obj/kern/kernel.asm	/^f010351f:	2b 05 f0 ce 22 f0    	sub    0xf022cef0,%eax$/;"	l
f0103525	obj/kern/kernel.asm	/^f0103525:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0103528	obj/kern/kernel.asm	/^f0103528:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010352b	obj/kern/kernel.asm	/^f010352b:	89 c2                	mov    %eax,%edx$/;"	l
f010352d	obj/kern/kernel.asm	/^f010352d:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0103530	obj/kern/kernel.asm	/^f0103530:	3b 15 e8 ce 22 f0    	cmp    0xf022cee8,%edx$/;"	l
f0103536	obj/kern/kernel.asm	/^f0103536:	72 20                	jb     f0103558 <mem_init+0xe7f>$/;"	l
f0103538	obj/kern/kernel.asm	/^f0103538:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010353c	obj/kern/kernel.asm	/^f010353c:	c7 44 24 08 8c 6a 10 	movl   $0xf0106a8c,0x8(%esp)$/;"	l
f0103543	obj/kern/kernel.asm	/^f0103543:	f0 $/;"	l
f0103544	obj/kern/kernel.asm	/^f0103544:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f010354b	obj/kern/kernel.asm	/^f010354b:	00 $/;"	l
f010354c	obj/kern/kernel.asm	/^f010354c:	c7 04 24 8d 76 10 f0 	movl   $0xf010768d,(%esp)$/;"	l
f0103553	obj/kern/kernel.asm	/^f0103553:	e8 2d cb ff ff       	call   f0100085 <_panic>$/;"	l
f0103558	obj/kern/kernel.asm	/^f0103558:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010355f	obj/kern/kernel.asm	/^f010355f:	00 $/;"	l
f0103560	obj/kern/kernel.asm	/^f0103560:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
f0103567	obj/kern/kernel.asm	/^f0103567:	00 $/;"	l
f0103568	obj/kern/kernel.asm	/^f0103568:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f010356d	obj/kern/kernel.asm	/^f010356d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103570	obj/kern/kernel.asm	/^f0103570:	e8 91 26 00 00       	call   f0105c06 <memset>$/;"	l
f0103575	obj/kern/kernel.asm	/^f0103575:	89 75 e4             	mov    %esi,-0x1c(%ebp)$/;"	l
f0103578	obj/kern/kernel.asm	/^f0103578:	89 f0                	mov    %esi,%eax$/;"	l
f010357a	obj/kern/kernel.asm	/^f010357a:	2b 05 f0 ce 22 f0    	sub    0xf022cef0,%eax$/;"	l
f0103580	obj/kern/kernel.asm	/^f0103580:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0103583	obj/kern/kernel.asm	/^f0103583:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0103586	obj/kern/kernel.asm	/^f0103586:	89 c2                	mov    %eax,%edx$/;"	l
f0103588	obj/kern/kernel.asm	/^f0103588:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010358b	obj/kern/kernel.asm	/^f010358b:	3b 15 e8 ce 22 f0    	cmp    0xf022cee8,%edx$/;"	l
f0103591	obj/kern/kernel.asm	/^f0103591:	72 20                	jb     f01035b3 <mem_init+0xeda>$/;"	l
f0103593	obj/kern/kernel.asm	/^f0103593:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103597	obj/kern/kernel.asm	/^f0103597:	c7 44 24 08 8c 6a 10 	movl   $0xf0106a8c,0x8(%esp)$/;"	l
f010359e	obj/kern/kernel.asm	/^f010359e:	f0 $/;"	l
f010359f	obj/kern/kernel.asm	/^f010359f:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f01035a6	obj/kern/kernel.asm	/^f01035a6:	00 $/;"	l
f01035a7	obj/kern/kernel.asm	/^f01035a7:	c7 04 24 8d 76 10 f0 	movl   $0xf010768d,(%esp)$/;"	l
f01035ae	obj/kern/kernel.asm	/^f01035ae:	e8 d2 ca ff ff       	call   f0100085 <_panic>$/;"	l
f01035b3	obj/kern/kernel.asm	/^f01035b3:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01035ba	obj/kern/kernel.asm	/^f01035ba:	00 $/;"	l
f01035bb	obj/kern/kernel.asm	/^f01035bb:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f01035c2	obj/kern/kernel.asm	/^f01035c2:	00 $/;"	l
f01035c3	obj/kern/kernel.asm	/^f01035c3:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01035c8	obj/kern/kernel.asm	/^f01035c8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01035cb	obj/kern/kernel.asm	/^f01035cb:	e8 36 26 00 00       	call   f0105c06 <memset>$/;"	l
f01035d0	obj/kern/kernel.asm	/^f01035d0:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f01035d7	obj/kern/kernel.asm	/^f01035d7:	00 $/;"	l
f01035d8	obj/kern/kernel.asm	/^f01035d8:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01035df	obj/kern/kernel.asm	/^f01035df:	00 $/;"	l
f01035e0	obj/kern/kernel.asm	/^f01035e0:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01035e4	obj/kern/kernel.asm	/^f01035e4:	a1 ec ce 22 f0       	mov    0xf022ceec,%eax$/;"	l
f01035e9	obj/kern/kernel.asm	/^f01035e9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01035ec	obj/kern/kernel.asm	/^f01035ec:	e8 a1 e2 ff ff       	call   f0101892 <page_insert>$/;"	l
f01035f1	obj/kern/kernel.asm	/^f01035f1:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f01035f6	obj/kern/kernel.asm	/^f01035f6:	74 24                	je     f010361c <mem_init+0xf43>$/;"	l
f01035f8	obj/kern/kernel.asm	/^f01035f8:	c7 44 24 0c dd 77 10 	movl   $0xf01077dd,0xc(%esp)$/;"	l
f01035ff	obj/kern/kernel.asm	/^f01035ff:	f0 $/;"	l
f0103600	obj/kern/kernel.asm	/^f0103600:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0103607	obj/kern/kernel.asm	/^f0103607:	f0 $/;"	l
f0103608	obj/kern/kernel.asm	/^f0103608:	c7 44 24 04 a1 04 00 	movl   $0x4a1,0x4(%esp)$/;"	l
f010360f	obj/kern/kernel.asm	/^f010360f:	00 $/;"	l
f0103610	obj/kern/kernel.asm	/^f0103610:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0103617	obj/kern/kernel.asm	/^f0103617:	e8 69 ca ff ff       	call   f0100085 <_panic>$/;"	l
f010361c	obj/kern/kernel.asm	/^f010361c:	81 3d 00 10 00 00 01 	cmpl   $0x1010101,0x1000$/;"	l
f0103623	obj/kern/kernel.asm	/^f0103623:	01 01 01 $/;"	l
f0103626	obj/kern/kernel.asm	/^f0103626:	74 24                	je     f010364c <mem_init+0xf73>$/;"	l
f0103628	obj/kern/kernel.asm	/^f0103628:	c7 44 24 0c e4 75 10 	movl   $0xf01075e4,0xc(%esp)$/;"	l
f010362f	obj/kern/kernel.asm	/^f010362f:	f0 $/;"	l
f0103630	obj/kern/kernel.asm	/^f0103630:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0103637	obj/kern/kernel.asm	/^f0103637:	f0 $/;"	l
f0103638	obj/kern/kernel.asm	/^f0103638:	c7 44 24 04 a2 04 00 	movl   $0x4a2,0x4(%esp)$/;"	l
f010363f	obj/kern/kernel.asm	/^f010363f:	00 $/;"	l
f0103640	obj/kern/kernel.asm	/^f0103640:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0103647	obj/kern/kernel.asm	/^f0103647:	e8 39 ca ff ff       	call   f0100085 <_panic>$/;"	l
f010364c	obj/kern/kernel.asm	/^f010364c:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0103653	obj/kern/kernel.asm	/^f0103653:	00 $/;"	l
f0103654	obj/kern/kernel.asm	/^f0103654:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010365b	obj/kern/kernel.asm	/^f010365b:	00 $/;"	l
f010365c	obj/kern/kernel.asm	/^f010365c:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0103660	obj/kern/kernel.asm	/^f0103660:	a1 ec ce 22 f0       	mov    0xf022ceec,%eax$/;"	l
f0103665	obj/kern/kernel.asm	/^f0103665:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103668	obj/kern/kernel.asm	/^f0103668:	e8 25 e2 ff ff       	call   f0101892 <page_insert>$/;"	l
f010366d	obj/kern/kernel.asm	/^f010366d:	81 3d 00 10 00 00 02 	cmpl   $0x2020202,0x1000$/;"	l
f0103674	obj/kern/kernel.asm	/^f0103674:	02 02 02 $/;"	l
f0103677	obj/kern/kernel.asm	/^f0103677:	74 24                	je     f010369d <mem_init+0xfc4>$/;"	l
f0103679	obj/kern/kernel.asm	/^f0103679:	c7 44 24 0c 08 76 10 	movl   $0xf0107608,0xc(%esp)$/;"	l
f0103680	obj/kern/kernel.asm	/^f0103680:	f0 $/;"	l
f0103681	obj/kern/kernel.asm	/^f0103681:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0103688	obj/kern/kernel.asm	/^f0103688:	f0 $/;"	l
f0103689	obj/kern/kernel.asm	/^f0103689:	c7 44 24 04 a4 04 00 	movl   $0x4a4,0x4(%esp)$/;"	l
f0103690	obj/kern/kernel.asm	/^f0103690:	00 $/;"	l
f0103691	obj/kern/kernel.asm	/^f0103691:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0103698	obj/kern/kernel.asm	/^f0103698:	e8 e8 c9 ff ff       	call   f0100085 <_panic>$/;"	l
f010369d	obj/kern/kernel.asm	/^f010369d:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f01036a2	obj/kern/kernel.asm	/^f01036a2:	74 24                	je     f01036c8 <mem_init+0xfef>$/;"	l
f01036a4	obj/kern/kernel.asm	/^f01036a4:	c7 44 24 0c ff 77 10 	movl   $0xf01077ff,0xc(%esp)$/;"	l
f01036ab	obj/kern/kernel.asm	/^f01036ab:	f0 $/;"	l
f01036ac	obj/kern/kernel.asm	/^f01036ac:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f01036b3	obj/kern/kernel.asm	/^f01036b3:	f0 $/;"	l
f01036b4	obj/kern/kernel.asm	/^f01036b4:	c7 44 24 04 a5 04 00 	movl   $0x4a5,0x4(%esp)$/;"	l
f01036bb	obj/kern/kernel.asm	/^f01036bb:	00 $/;"	l
f01036bc	obj/kern/kernel.asm	/^f01036bc:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f01036c3	obj/kern/kernel.asm	/^f01036c3:	e8 bd c9 ff ff       	call   f0100085 <_panic>$/;"	l
f01036c8	obj/kern/kernel.asm	/^f01036c8:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f01036cd	obj/kern/kernel.asm	/^f01036cd:	74 24                	je     f01036f3 <mem_init+0x101a>$/;"	l
f01036cf	obj/kern/kernel.asm	/^f01036cf:	c7 44 24 0c 48 78 10 	movl   $0xf0107848,0xc(%esp)$/;"	l
f01036d6	obj/kern/kernel.asm	/^f01036d6:	f0 $/;"	l
f01036d7	obj/kern/kernel.asm	/^f01036d7:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f01036de	obj/kern/kernel.asm	/^f01036de:	f0 $/;"	l
f01036df	obj/kern/kernel.asm	/^f01036df:	c7 44 24 04 a6 04 00 	movl   $0x4a6,0x4(%esp)$/;"	l
f01036e6	obj/kern/kernel.asm	/^f01036e6:	00 $/;"	l
f01036e7	obj/kern/kernel.asm	/^f01036e7:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f01036ee	obj/kern/kernel.asm	/^f01036ee:	e8 92 c9 ff ff       	call   f0100085 <_panic>$/;"	l
f01036f3	obj/kern/kernel.asm	/^f01036f3:	c7 05 00 10 00 00 03 	movl   $0x3030303,0x1000$/;"	l
f01036fa	obj/kern/kernel.asm	/^f01036fa:	03 03 03 $/;"	l
f01036fd	obj/kern/kernel.asm	/^f01036fd:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0103700	obj/kern/kernel.asm	/^f0103700:	2b 05 f0 ce 22 f0    	sub    0xf022cef0,%eax$/;"	l
f0103706	obj/kern/kernel.asm	/^f0103706:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0103709	obj/kern/kernel.asm	/^f0103709:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010370c	obj/kern/kernel.asm	/^f010370c:	89 c2                	mov    %eax,%edx$/;"	l
f010370e	obj/kern/kernel.asm	/^f010370e:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0103711	obj/kern/kernel.asm	/^f0103711:	3b 15 e8 ce 22 f0    	cmp    0xf022cee8,%edx$/;"	l
f0103717	obj/kern/kernel.asm	/^f0103717:	72 20                	jb     f0103739 <mem_init+0x1060>$/;"	l
f0103719	obj/kern/kernel.asm	/^f0103719:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010371d	obj/kern/kernel.asm	/^f010371d:	c7 44 24 08 8c 6a 10 	movl   $0xf0106a8c,0x8(%esp)$/;"	l
f0103724	obj/kern/kernel.asm	/^f0103724:	f0 $/;"	l
f0103725	obj/kern/kernel.asm	/^f0103725:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f010372c	obj/kern/kernel.asm	/^f010372c:	00 $/;"	l
f010372d	obj/kern/kernel.asm	/^f010372d:	c7 04 24 8d 76 10 f0 	movl   $0xf010768d,(%esp)$/;"	l
f0103734	obj/kern/kernel.asm	/^f0103734:	e8 4c c9 ff ff       	call   f0100085 <_panic>$/;"	l
f0103739	obj/kern/kernel.asm	/^f0103739:	81 b8 00 00 00 f0 03 	cmpl   $0x3030303,-0x10000000(%eax)$/;"	l
f0103740	obj/kern/kernel.asm	/^f0103740:	03 03 03 $/;"	l
f0103743	obj/kern/kernel.asm	/^f0103743:	74 24                	je     f0103769 <mem_init+0x1090>$/;"	l
f0103745	obj/kern/kernel.asm	/^f0103745:	c7 44 24 0c 2c 76 10 	movl   $0xf010762c,0xc(%esp)$/;"	l
f010374c	obj/kern/kernel.asm	/^f010374c:	f0 $/;"	l
f010374d	obj/kern/kernel.asm	/^f010374d:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0103754	obj/kern/kernel.asm	/^f0103754:	f0 $/;"	l
f0103755	obj/kern/kernel.asm	/^f0103755:	c7 44 24 04 a8 04 00 	movl   $0x4a8,0x4(%esp)$/;"	l
f010375c	obj/kern/kernel.asm	/^f010375c:	00 $/;"	l
f010375d	obj/kern/kernel.asm	/^f010375d:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0103764	obj/kern/kernel.asm	/^f0103764:	e8 1c c9 ff ff       	call   f0100085 <_panic>$/;"	l
f0103769	obj/kern/kernel.asm	/^f0103769:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0103770	obj/kern/kernel.asm	/^f0103770:	00 $/;"	l
f0103771	obj/kern/kernel.asm	/^f0103771:	a1 ec ce 22 f0       	mov    0xf022ceec,%eax$/;"	l
f0103776	obj/kern/kernel.asm	/^f0103776:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103779	obj/kern/kernel.asm	/^f0103779:	e8 c4 e0 ff ff       	call   f0101842 <page_remove>$/;"	l
f010377e	obj/kern/kernel.asm	/^f010377e:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0103783	obj/kern/kernel.asm	/^f0103783:	74 24                	je     f01037a9 <mem_init+0x10d0>$/;"	l
f0103785	obj/kern/kernel.asm	/^f0103785:	c7 44 24 0c 37 78 10 	movl   $0xf0107837,0xc(%esp)$/;"	l
f010378c	obj/kern/kernel.asm	/^f010378c:	f0 $/;"	l
f010378d	obj/kern/kernel.asm	/^f010378d:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0103794	obj/kern/kernel.asm	/^f0103794:	f0 $/;"	l
f0103795	obj/kern/kernel.asm	/^f0103795:	c7 44 24 04 aa 04 00 	movl   $0x4aa,0x4(%esp)$/;"	l
f010379c	obj/kern/kernel.asm	/^f010379c:	00 $/;"	l
f010379d	obj/kern/kernel.asm	/^f010379d:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f01037a4	obj/kern/kernel.asm	/^f01037a4:	e8 dc c8 ff ff       	call   f0100085 <_panic>$/;"	l
f01037a9	obj/kern/kernel.asm	/^f01037a9:	a1 ec ce 22 f0       	mov    0xf022ceec,%eax$/;"	l
f01037ae	obj/kern/kernel.asm	/^f01037ae:	8b 08                	mov    (%eax),%ecx$/;"	l
f01037b0	obj/kern/kernel.asm	/^f01037b0:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f01037b6	obj/kern/kernel.asm	/^f01037b6:	89 da                	mov    %ebx,%edx$/;"	l
f01037b8	obj/kern/kernel.asm	/^f01037b8:	2b 15 f0 ce 22 f0    	sub    0xf022cef0,%edx$/;"	l
f01037be	obj/kern/kernel.asm	/^f01037be:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01037c1	obj/kern/kernel.asm	/^f01037c1:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01037c4	obj/kern/kernel.asm	/^f01037c4:	39 d1                	cmp    %edx,%ecx$/;"	l
f01037c6	obj/kern/kernel.asm	/^f01037c6:	74 24                	je     f01037ec <mem_init+0x1113>$/;"	l
f01037c8	obj/kern/kernel.asm	/^f01037c8:	c7 44 24 0c 38 71 10 	movl   $0xf0107138,0xc(%esp)$/;"	l
f01037cf	obj/kern/kernel.asm	/^f01037cf:	f0 $/;"	l
f01037d0	obj/kern/kernel.asm	/^f01037d0:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f01037d7	obj/kern/kernel.asm	/^f01037d7:	f0 $/;"	l
f01037d8	obj/kern/kernel.asm	/^f01037d8:	c7 44 24 04 ad 04 00 	movl   $0x4ad,0x4(%esp)$/;"	l
f01037df	obj/kern/kernel.asm	/^f01037df:	00 $/;"	l
f01037e0	obj/kern/kernel.asm	/^f01037e0:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f01037e7	obj/kern/kernel.asm	/^f01037e7:	e8 99 c8 ff ff       	call   f0100085 <_panic>$/;"	l
f01037ec	obj/kern/kernel.asm	/^f01037ec:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01037f2	obj/kern/kernel.asm	/^f01037f2:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f01037f7	obj/kern/kernel.asm	/^f01037f7:	74 24                	je     f010381d <mem_init+0x1144>$/;"	l
f01037f9	obj/kern/kernel.asm	/^f01037f9:	c7 44 24 0c ee 77 10 	movl   $0xf01077ee,0xc(%esp)$/;"	l
f0103800	obj/kern/kernel.asm	/^f0103800:	f0 $/;"	l
f0103801	obj/kern/kernel.asm	/^f0103801:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f0103808	obj/kern/kernel.asm	/^f0103808:	f0 $/;"	l
f0103809	obj/kern/kernel.asm	/^f0103809:	c7 44 24 04 af 04 00 	movl   $0x4af,0x4(%esp)$/;"	l
f0103810	obj/kern/kernel.asm	/^f0103810:	00 $/;"	l
f0103811	obj/kern/kernel.asm	/^f0103811:	c7 04 24 81 76 10 f0 	movl   $0xf0107681,(%esp)$/;"	l
f0103818	obj/kern/kernel.asm	/^f0103818:	e8 68 c8 ff ff       	call   f0100085 <_panic>$/;"	l
f010381d	obj/kern/kernel.asm	/^f010381d:	66 c7 43 04 00 00    	movw   $0x0,0x4(%ebx)$/;"	l
f0103823	obj/kern/kernel.asm	/^f0103823:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103826	obj/kern/kernel.asm	/^f0103826:	e8 e9 d5 ff ff       	call   f0100e14 <page_free>$/;"	l
f010382b	obj/kern/kernel.asm	/^f010382b:	c7 04 24 58 76 10 f0 	movl   $0xf0107658,(%esp)$/;"	l
f0103832	obj/kern/kernel.asm	/^f0103832:	e8 78 0a 00 00       	call   f01042af <cprintf>$/;"	l
f0103837	obj/kern/kernel.asm	/^f0103837:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f010383a	obj/kern/kernel.asm	/^f010383a:	5b                   	pop    %ebx$/;"	l
f010383b	obj/kern/kernel.asm	/^f010383b:	5e                   	pop    %esi$/;"	l
f010383c	obj/kern/kernel.asm	/^f010383c:	5f                   	pop    %edi$/;"	l
f010383d	obj/kern/kernel.asm	/^f010383d:	5d                   	pop    %ebp$/;"	l
f010383e	obj/kern/kernel.asm	/^f010383e:	c3                   	ret    $/;"	l
f010383f	obj/kern/kernel.asm	/^f010383f:	89 da                	mov    %ebx,%edx$/;"	l
f0103841	obj/kern/kernel.asm	/^f0103841:	89 f8                	mov    %edi,%eax$/;"	l
f0103843	obj/kern/kernel.asm	/^f0103843:	e8 39 d6 ff ff       	call   f0100e81 <check_va2pa>$/;"	l
f0103848	obj/kern/kernel.asm	/^f0103848:	e9 58 fa ff ff       	jmp    f01032a5 <mem_init+0xbcc>$/;"	l
f010384d	obj/kern/kernel.asm	/^f010384d:	00 00                	add    %al,(%eax)$/;"	l
f0103850	obj/kern/kernel.asm	/^f0103850 <env_init_percpu>:$/;"	l
f0103850	obj/kern/kernel.asm	/^f0103850:	55                   	push   %ebp$/;"	l
f0103851	obj/kern/kernel.asm	/^f0103851:	89 e5                	mov    %esp,%ebp$/;"	l
f0103853	obj/kern/kernel.asm	/^f0103853:	b8 68 13 12 f0       	mov    $0xf0121368,%eax$/;"	l
f0103858	obj/kern/kernel.asm	/^f0103858:	0f 01 10             	lgdtl  (%eax)$/;"	l
f010385b	obj/kern/kernel.asm	/^f010385b:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
f0103860	obj/kern/kernel.asm	/^f0103860:	8e e8                	mov    %eax,%gs$/;"	l
f0103862	obj/kern/kernel.asm	/^f0103862:	8e e0                	mov    %eax,%fs$/;"	l
f0103864	obj/kern/kernel.asm	/^f0103864:	b0 10                	mov    $0x10,%al$/;"	l
f0103866	obj/kern/kernel.asm	/^f0103866:	8e c0                	mov    %eax,%es$/;"	l
f0103868	obj/kern/kernel.asm	/^f0103868:	8e d8                	mov    %eax,%ds$/;"	l
f010386a	obj/kern/kernel.asm	/^f010386a:	8e d0                	mov    %eax,%ss$/;"	l
f010386c	obj/kern/kernel.asm	/^f010386c:	ea 73 38 10 f0 08 00 	ljmp   $0x8,$0xf0103873$/;"	l
f0103873	obj/kern/kernel.asm	/^f0103873:	b0 00                	mov    $0x0,%al$/;"	l
f0103875	obj/kern/kernel.asm	/^f0103875:	0f 00 d0             	lldt   %ax$/;"	l
f0103878	obj/kern/kernel.asm	/^f0103878:	5d                   	pop    %ebp$/;"	l
f0103879	obj/kern/kernel.asm	/^f0103879:	c3                   	ret    $/;"	l
f010387a	obj/kern/kernel.asm	/^f010387a <env_init>:$/;"	l
f010387a	obj/kern/kernel.asm	/^f010387a:	55                   	push   %ebp$/;"	l
f010387b	obj/kern/kernel.asm	/^f010387b:	89 e5                	mov    %esp,%ebp$/;"	l
f010387d	obj/kern/kernel.asm	/^f010387d:	53                   	push   %ebx$/;"	l
f010387e	obj/kern/kernel.asm	/^f010387e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103883	obj/kern/kernel.asm	/^f0103883:	8b 15 40 c2 22 f0    	mov    0xf022c240,%edx$/;"	l
f0103889	obj/kern/kernel.asm	/^f0103889:	c7 44 02 48 00 00 00 	movl   $0x0,0x48(%edx,%eax,1)$/;"	l
f0103890	obj/kern/kernel.asm	/^f0103890:	00 $/;"	l
f0103891	obj/kern/kernel.asm	/^f0103891:	8b 0d 40 c2 22 f0    	mov    0xf022c240,%ecx$/;"	l
f0103897	obj/kern/kernel.asm	/^f0103897:	8d 50 7c             	lea    0x7c(%eax),%edx$/;"	l
f010389a	obj/kern/kernel.asm	/^f010389a:	8d 1c 11             	lea    (%ecx,%edx,1),%ebx$/;"	l
f010389d	obj/kern/kernel.asm	/^f010389d:	89 5c 01 44          	mov    %ebx,0x44(%ecx,%eax,1)$/;"	l
f01038a1	obj/kern/kernel.asm	/^f01038a1:	8b 0d 40 c2 22 f0    	mov    0xf022c240,%ecx$/;"	l
f01038a7	obj/kern/kernel.asm	/^f01038a7:	c7 44 01 4c 00 00 00 	movl   $0x0,0x4c(%ecx,%eax,1)$/;"	l
f01038ae	obj/kern/kernel.asm	/^f01038ae:	00 $/;"	l
f01038af	obj/kern/kernel.asm	/^f01038af:	8b 0d 40 c2 22 f0    	mov    0xf022c240,%ecx$/;"	l
f01038b5	obj/kern/kernel.asm	/^f01038b5:	c7 44 01 54 00 00 00 	movl   $0x0,0x54(%ecx,%eax,1)$/;"	l
f01038bc	obj/kern/kernel.asm	/^f01038bc:	00 $/;"	l
f01038bd	obj/kern/kernel.asm	/^f01038bd:	81 fa 84 ef 01 00    	cmp    $0x1ef84,%edx$/;"	l
f01038c3	obj/kern/kernel.asm	/^f01038c3:	74 04                	je     f01038c9 <env_init+0x4f>$/;"	l
f01038c5	obj/kern/kernel.asm	/^f01038c5:	89 d0                	mov    %edx,%eax$/;"	l
f01038c7	obj/kern/kernel.asm	/^f01038c7:	eb ba                	jmp    f0103883 <env_init+0x9>$/;"	l
f01038c9	obj/kern/kernel.asm	/^f01038c9:	a1 40 c2 22 f0       	mov    0xf022c240,%eax$/;"	l
f01038ce	obj/kern/kernel.asm	/^f01038ce:	c7 80 cc ef 01 00 00 	movl   $0x0,0x1efcc(%eax)$/;"	l
f01038d5	obj/kern/kernel.asm	/^f01038d5:	00 00 00 $/;"	l
f01038d8	obj/kern/kernel.asm	/^f01038d8:	a1 40 c2 22 f0       	mov    0xf022c240,%eax$/;"	l
f01038dd	obj/kern/kernel.asm	/^f01038dd:	c7 80 c8 ef 01 00 00 	movl   $0x0,0x1efc8(%eax)$/;"	l
f01038e4	obj/kern/kernel.asm	/^f01038e4:	00 00 00 $/;"	l
f01038e7	obj/kern/kernel.asm	/^f01038e7:	a1 40 c2 22 f0       	mov    0xf022c240,%eax$/;"	l
f01038ec	obj/kern/kernel.asm	/^f01038ec:	a3 44 c2 22 f0       	mov    %eax,0xf022c244$/;"	l
f01038f1	obj/kern/kernel.asm	/^f01038f1:	e8 5a ff ff ff       	call   f0103850 <env_init_percpu>$/;"	l
f01038f6	obj/kern/kernel.asm	/^f01038f6:	5b                   	pop    %ebx$/;"	l
f01038f7	obj/kern/kernel.asm	/^f01038f7:	5d                   	pop    %ebp$/;"	l
f01038f8	obj/kern/kernel.asm	/^f01038f8:	c3                   	ret    $/;"	l
f01038f9	obj/kern/kernel.asm	/^f01038f9 <envid2env>:$/;"	l
f01038f9	obj/kern/kernel.asm	/^f01038f9:	55                   	push   %ebp$/;"	l
f01038fa	obj/kern/kernel.asm	/^f01038fa:	89 e5                	mov    %esp,%ebp$/;"	l
f01038fc	obj/kern/kernel.asm	/^f01038fc:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01038ff	obj/kern/kernel.asm	/^f01038ff:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f0103902	obj/kern/kernel.asm	/^f0103902:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f0103905	obj/kern/kernel.asm	/^f0103905:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f0103908	obj/kern/kernel.asm	/^f0103908:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010390b	obj/kern/kernel.asm	/^f010390b:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f010390e	obj/kern/kernel.asm	/^f010390e:	85 c0                	test   %eax,%eax$/;"	l
f0103910	obj/kern/kernel.asm	/^f0103910:	75 17                	jne    f0103929 <envid2env+0x30>$/;"	l
f0103912	obj/kern/kernel.asm	/^f0103912:	e8 97 29 00 00       	call   f01062ae <cpunum>$/;"	l
f0103917	obj/kern/kernel.asm	/^f0103917:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010391a	obj/kern/kernel.asm	/^f010391a:	8b 80 28 d0 22 f0    	mov    -0xfdd2fd8(%eax),%eax$/;"	l
f0103920	obj/kern/kernel.asm	/^f0103920:	89 06                	mov    %eax,(%esi)$/;"	l
f0103922	obj/kern/kernel.asm	/^f0103922:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103927	obj/kern/kernel.asm	/^f0103927:	eb 69                	jmp    f0103992 <envid2env+0x99>$/;"	l
f0103929	obj/kern/kernel.asm	/^f0103929:	89 c3                	mov    %eax,%ebx$/;"	l
f010392b	obj/kern/kernel.asm	/^f010392b:	81 e3 ff 03 00 00    	and    $0x3ff,%ebx$/;"	l
f0103931	obj/kern/kernel.asm	/^f0103931:	6b db 7c             	imul   $0x7c,%ebx,%ebx$/;"	l
f0103934	obj/kern/kernel.asm	/^f0103934:	03 1d 40 c2 22 f0    	add    0xf022c240,%ebx$/;"	l
f010393a	obj/kern/kernel.asm	/^f010393a:	83 7b 54 00          	cmpl   $0x0,0x54(%ebx)$/;"	l
f010393e	obj/kern/kernel.asm	/^f010393e:	74 05                	je     f0103945 <envid2env+0x4c>$/;"	l
f0103940	obj/kern/kernel.asm	/^f0103940:	39 43 48             	cmp    %eax,0x48(%ebx)$/;"	l
f0103943	obj/kern/kernel.asm	/^f0103943:	74 0d                	je     f0103952 <envid2env+0x59>$/;"	l
f0103945	obj/kern/kernel.asm	/^f0103945:	c7 06 00 00 00 00    	movl   $0x0,(%esi)$/;"	l
f010394b	obj/kern/kernel.asm	/^f010394b:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0103950	obj/kern/kernel.asm	/^f0103950:	eb 40                	jmp    f0103992 <envid2env+0x99>$/;"	l
f0103952	obj/kern/kernel.asm	/^f0103952:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f0103956	obj/kern/kernel.asm	/^f0103956:	74 33                	je     f010398b <envid2env+0x92>$/;"	l
f0103958	obj/kern/kernel.asm	/^f0103958:	e8 51 29 00 00       	call   f01062ae <cpunum>$/;"	l
f010395d	obj/kern/kernel.asm	/^f010395d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103960	obj/kern/kernel.asm	/^f0103960:	39 98 28 d0 22 f0    	cmp    %ebx,-0xfdd2fd8(%eax)$/;"	l
f0103966	obj/kern/kernel.asm	/^f0103966:	74 23                	je     f010398b <envid2env+0x92>$/;"	l
f0103968	obj/kern/kernel.asm	/^f0103968:	8b 7b 4c             	mov    0x4c(%ebx),%edi$/;"	l
f010396b	obj/kern/kernel.asm	/^f010396b:	e8 3e 29 00 00       	call   f01062ae <cpunum>$/;"	l
f0103970	obj/kern/kernel.asm	/^f0103970:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103973	obj/kern/kernel.asm	/^f0103973:	8b 80 28 d0 22 f0    	mov    -0xfdd2fd8(%eax),%eax$/;"	l
f0103979	obj/kern/kernel.asm	/^f0103979:	3b 78 48             	cmp    0x48(%eax),%edi$/;"	l
f010397c	obj/kern/kernel.asm	/^f010397c:	74 0d                	je     f010398b <envid2env+0x92>$/;"	l
f010397e	obj/kern/kernel.asm	/^f010397e:	c7 06 00 00 00 00    	movl   $0x0,(%esi)$/;"	l
f0103984	obj/kern/kernel.asm	/^f0103984:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0103989	obj/kern/kernel.asm	/^f0103989:	eb 07                	jmp    f0103992 <envid2env+0x99>$/;"	l
f010398b	obj/kern/kernel.asm	/^f010398b:	89 1e                	mov    %ebx,(%esi)$/;"	l
f010398d	obj/kern/kernel.asm	/^f010398d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103992	obj/kern/kernel.asm	/^f0103992:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f0103995	obj/kern/kernel.asm	/^f0103995:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f0103998	obj/kern/kernel.asm	/^f0103998:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f010399b	obj/kern/kernel.asm	/^f010399b:	89 ec                	mov    %ebp,%esp$/;"	l
f010399d	obj/kern/kernel.asm	/^f010399d:	5d                   	pop    %ebp$/;"	l
f010399e	obj/kern/kernel.asm	/^f010399e:	c3                   	ret    $/;"	l
f010399f	obj/kern/kernel.asm	/^f010399f <env_pop_tf>:$/;"	l
f010399f	obj/kern/kernel.asm	/^f010399f:	55                   	push   %ebp$/;"	l
f01039a0	obj/kern/kernel.asm	/^f01039a0:	89 e5                	mov    %esp,%ebp$/;"	l
f01039a2	obj/kern/kernel.asm	/^f01039a2:	53                   	push   %ebx$/;"	l
f01039a3	obj/kern/kernel.asm	/^f01039a3:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01039a6	obj/kern/kernel.asm	/^f01039a6:	e8 03 29 00 00       	call   f01062ae <cpunum>$/;"	l
f01039ab	obj/kern/kernel.asm	/^f01039ab:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01039ae	obj/kern/kernel.asm	/^f01039ae:	8b 98 28 d0 22 f0    	mov    -0xfdd2fd8(%eax),%ebx$/;"	l
f01039b4	obj/kern/kernel.asm	/^f01039b4:	e8 f5 28 00 00       	call   f01062ae <cpunum>$/;"	l
f01039b9	obj/kern/kernel.asm	/^f01039b9:	89 43 5c             	mov    %eax,0x5c(%ebx)$/;"	l
f01039bc	obj/kern/kernel.asm	/^f01039bc:	8b 65 08             	mov    0x8(%ebp),%esp$/;"	l
f01039bf	obj/kern/kernel.asm	/^f01039bf:	61                   	popa   $/;"	l
f01039c0	obj/kern/kernel.asm	/^f01039c0:	07                   	pop    %es$/;"	l
f01039c1	obj/kern/kernel.asm	/^f01039c1:	1f                   	pop    %ds$/;"	l
f01039c2	obj/kern/kernel.asm	/^f01039c2:	83 c4 08             	add    $0x8,%esp$/;"	l
f01039c5	obj/kern/kernel.asm	/^f01039c5:	cf                   	iret   $/;"	l
f01039c6	obj/kern/kernel.asm	/^f01039c6:	c7 44 24 08 0b 7a 10 	movl   $0xf0107a0b,0x8(%esp)$/;"	l
f01039cd	obj/kern/kernel.asm	/^f01039cd:	f0 $/;"	l
f01039ce	obj/kern/kernel.asm	/^f01039ce:	c7 44 24 04 02 02 00 	movl   $0x202,0x4(%esp)$/;"	l
f01039d5	obj/kern/kernel.asm	/^f01039d5:	00 $/;"	l
f01039d6	obj/kern/kernel.asm	/^f01039d6:	c7 04 24 17 7a 10 f0 	movl   $0xf0107a17,(%esp)$/;"	l
f01039dd	obj/kern/kernel.asm	/^f01039dd:	e8 a3 c6 ff ff       	call   f0100085 <_panic>$/;"	l
f01039e2	obj/kern/kernel.asm	/^f01039e2 <env_run>:$/;"	l
f01039e2	obj/kern/kernel.asm	/^f01039e2:	55                   	push   %ebp$/;"	l
f01039e3	obj/kern/kernel.asm	/^f01039e3:	89 e5                	mov    %esp,%ebp$/;"	l
f01039e5	obj/kern/kernel.asm	/^f01039e5:	56                   	push   %esi$/;"	l
f01039e6	obj/kern/kernel.asm	/^f01039e6:	53                   	push   %ebx$/;"	l
f01039e7	obj/kern/kernel.asm	/^f01039e7:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01039ea	obj/kern/kernel.asm	/^f01039ea:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01039ed	obj/kern/kernel.asm	/^f01039ed:	e8 bc 28 00 00       	call   f01062ae <cpunum>$/;"	l
f01039f2	obj/kern/kernel.asm	/^f01039f2:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01039f5	obj/kern/kernel.asm	/^f01039f5:	39 b0 28 d0 22 f0    	cmp    %esi,-0xfdd2fd8(%eax)$/;"	l
f01039fb	obj/kern/kernel.asm	/^f01039fb:	0f 84 af 00 00 00    	je     f0103ab0 <env_run+0xce>$/;"	l
f0103a01	obj/kern/kernel.asm	/^f0103a01:	e8 a8 28 00 00       	call   f01062ae <cpunum>$/;"	l
f0103a06	obj/kern/kernel.asm	/^f0103a06:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103a09	obj/kern/kernel.asm	/^f0103a09:	83 b8 28 d0 22 f0 00 	cmpl   $0x0,-0xfdd2fd8(%eax)$/;"	l
f0103a10	obj/kern/kernel.asm	/^f0103a10:	74 29                	je     f0103a3b <env_run+0x59>$/;"	l
f0103a12	obj/kern/kernel.asm	/^f0103a12:	e8 97 28 00 00       	call   f01062ae <cpunum>$/;"	l
f0103a17	obj/kern/kernel.asm	/^f0103a17:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103a1a	obj/kern/kernel.asm	/^f0103a1a:	8b 80 28 d0 22 f0    	mov    -0xfdd2fd8(%eax),%eax$/;"	l
f0103a20	obj/kern/kernel.asm	/^f0103a20:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0103a24	obj/kern/kernel.asm	/^f0103a24:	75 15                	jne    f0103a3b <env_run+0x59>$/;"	l
f0103a26	obj/kern/kernel.asm	/^f0103a26:	e8 83 28 00 00       	call   f01062ae <cpunum>$/;"	l
f0103a2b	obj/kern/kernel.asm	/^f0103a2b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103a2e	obj/kern/kernel.asm	/^f0103a2e:	8b 80 28 d0 22 f0    	mov    -0xfdd2fd8(%eax),%eax$/;"	l
f0103a34	obj/kern/kernel.asm	/^f0103a34:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f0103a3b	obj/kern/kernel.asm	/^f0103a3b:	e8 6e 28 00 00       	call   f01062ae <cpunum>$/;"	l
f0103a40	obj/kern/kernel.asm	/^f0103a40:	bb 20 d0 22 f0       	mov    $0xf022d020,%ebx$/;"	l
f0103a45	obj/kern/kernel.asm	/^f0103a45:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103a48	obj/kern/kernel.asm	/^f0103a48:	89 74 18 08          	mov    %esi,0x8(%eax,%ebx,1)$/;"	l
f0103a4c	obj/kern/kernel.asm	/^f0103a4c:	e8 5d 28 00 00       	call   f01062ae <cpunum>$/;"	l
f0103a51	obj/kern/kernel.asm	/^f0103a51:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103a54	obj/kern/kernel.asm	/^f0103a54:	8b 44 18 08          	mov    0x8(%eax,%ebx,1),%eax$/;"	l
f0103a58	obj/kern/kernel.asm	/^f0103a58:	c7 40 54 03 00 00 00 	movl   $0x3,0x54(%eax)$/;"	l
f0103a5f	obj/kern/kernel.asm	/^f0103a5f:	e8 4a 28 00 00       	call   f01062ae <cpunum>$/;"	l
f0103a64	obj/kern/kernel.asm	/^f0103a64:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103a67	obj/kern/kernel.asm	/^f0103a67:	8b 44 18 08          	mov    0x8(%eax,%ebx,1),%eax$/;"	l
f0103a6b	obj/kern/kernel.asm	/^f0103a6b:	83 40 58 01          	addl   $0x1,0x58(%eax)$/;"	l
f0103a6f	obj/kern/kernel.asm	/^f0103a6f:	e8 3a 28 00 00       	call   f01062ae <cpunum>$/;"	l
f0103a74	obj/kern/kernel.asm	/^f0103a74:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103a77	obj/kern/kernel.asm	/^f0103a77:	8b 44 18 08          	mov    0x8(%eax,%ebx,1),%eax$/;"	l
f0103a7b	obj/kern/kernel.asm	/^f0103a7b:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0103a7e	obj/kern/kernel.asm	/^f0103a7e:	89 c2                	mov    %eax,%edx$/;"	l
f0103a80	obj/kern/kernel.asm	/^f0103a80:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103a85	obj/kern/kernel.asm	/^f0103a85:	77 20                	ja     f0103aa7 <env_run+0xc5>$/;"	l
f0103a87	obj/kern/kernel.asm	/^f0103a87:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103a8b	obj/kern/kernel.asm	/^f0103a8b:	c7 44 24 08 48 6a 10 	movl   $0xf0106a48,0x8(%esp)$/;"	l
f0103a92	obj/kern/kernel.asm	/^f0103a92:	f0 $/;"	l
f0103a93	obj/kern/kernel.asm	/^f0103a93:	c7 44 24 04 26 02 00 	movl   $0x226,0x4(%esp)$/;"	l
f0103a9a	obj/kern/kernel.asm	/^f0103a9a:	00 $/;"	l
f0103a9b	obj/kern/kernel.asm	/^f0103a9b:	c7 04 24 17 7a 10 f0 	movl   $0xf0107a17,(%esp)$/;"	l
f0103aa2	obj/kern/kernel.asm	/^f0103aa2:	e8 de c5 ff ff       	call   f0100085 <_panic>$/;"	l
f0103aa7	obj/kern/kernel.asm	/^f0103aa7:	81 c2 00 00 00 10    	add    $0x10000000,%edx$/;"	l
f0103aad	obj/kern/kernel.asm	/^f0103aad:	0f 22 da             	mov    %edx,%cr3$/;"	l
f0103ab0	obj/kern/kernel.asm	/^f0103ab0:	e8 f9 27 00 00       	call   f01062ae <cpunum>$/;"	l
f0103ab5	obj/kern/kernel.asm	/^f0103ab5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103ab8	obj/kern/kernel.asm	/^f0103ab8:	8b 80 28 d0 22 f0    	mov    -0xfdd2fd8(%eax),%eax$/;"	l
f0103abe	obj/kern/kernel.asm	/^f0103abe:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103ac1	obj/kern/kernel.asm	/^f0103ac1:	e8 d9 fe ff ff       	call   f010399f <env_pop_tf>$/;"	l
f0103ac6	obj/kern/kernel.asm	/^f0103ac6 <env_free>:$/;"	l
f0103ac6	obj/kern/kernel.asm	/^f0103ac6:	55                   	push   %ebp$/;"	l
f0103ac7	obj/kern/kernel.asm	/^f0103ac7:	89 e5                	mov    %esp,%ebp$/;"	l
f0103ac9	obj/kern/kernel.asm	/^f0103ac9:	57                   	push   %edi$/;"	l
f0103aca	obj/kern/kernel.asm	/^f0103aca:	56                   	push   %esi$/;"	l
f0103acb	obj/kern/kernel.asm	/^f0103acb:	53                   	push   %ebx$/;"	l
f0103acc	obj/kern/kernel.asm	/^f0103acc:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0103acf	obj/kern/kernel.asm	/^f0103acf:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0103ad2	obj/kern/kernel.asm	/^f0103ad2:	e8 d7 27 00 00       	call   f01062ae <cpunum>$/;"	l
f0103ad7	obj/kern/kernel.asm	/^f0103ad7:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103ada	obj/kern/kernel.asm	/^f0103ada:	39 b8 28 d0 22 f0    	cmp    %edi,-0xfdd2fd8(%eax)$/;"	l
f0103ae0	obj/kern/kernel.asm	/^f0103ae0:	75 35                	jne    f0103b17 <env_free+0x51>$/;"	l
f0103ae2	obj/kern/kernel.asm	/^f0103ae2:	a1 ec ce 22 f0       	mov    0xf022ceec,%eax$/;"	l
f0103ae7	obj/kern/kernel.asm	/^f0103ae7:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103aec	obj/kern/kernel.asm	/^f0103aec:	77 20                	ja     f0103b0e <env_free+0x48>$/;"	l
f0103aee	obj/kern/kernel.asm	/^f0103aee:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103af2	obj/kern/kernel.asm	/^f0103af2:	c7 44 24 08 48 6a 10 	movl   $0xf0106a48,0x8(%esp)$/;"	l
f0103af9	obj/kern/kernel.asm	/^f0103af9:	f0 $/;"	l
f0103afa	obj/kern/kernel.asm	/^f0103afa:	c7 44 24 04 af 01 00 	movl   $0x1af,0x4(%esp)$/;"	l
f0103b01	obj/kern/kernel.asm	/^f0103b01:	00 $/;"	l
f0103b02	obj/kern/kernel.asm	/^f0103b02:	c7 04 24 17 7a 10 f0 	movl   $0xf0107a17,(%esp)$/;"	l
f0103b09	obj/kern/kernel.asm	/^f0103b09:	e8 77 c5 ff ff       	call   f0100085 <_panic>$/;"	l
f0103b0e	obj/kern/kernel.asm	/^f0103b0e:	8d 80 00 00 00 10    	lea    0x10000000(%eax),%eax$/;"	l
f0103b14	obj/kern/kernel.asm	/^f0103b14:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103b17	obj/kern/kernel.asm	/^f0103b17:	8b 5f 48             	mov    0x48(%edi),%ebx$/;"	l
f0103b1a	obj/kern/kernel.asm	/^f0103b1a:	e8 8f 27 00 00       	call   f01062ae <cpunum>$/;"	l
f0103b1f	obj/kern/kernel.asm	/^f0103b1f:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0103b22	obj/kern/kernel.asm	/^f0103b22:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103b27	obj/kern/kernel.asm	/^f0103b27:	83 ba 28 d0 22 f0 00 	cmpl   $0x0,-0xfdd2fd8(%edx)$/;"	l
f0103b2e	obj/kern/kernel.asm	/^f0103b2e:	74 11                	je     f0103b41 <env_free+0x7b>$/;"	l
f0103b30	obj/kern/kernel.asm	/^f0103b30:	e8 79 27 00 00       	call   f01062ae <cpunum>$/;"	l
f0103b35	obj/kern/kernel.asm	/^f0103b35:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103b38	obj/kern/kernel.asm	/^f0103b38:	8b 80 28 d0 22 f0    	mov    -0xfdd2fd8(%eax),%eax$/;"	l
f0103b3e	obj/kern/kernel.asm	/^f0103b3e:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0103b41	obj/kern/kernel.asm	/^f0103b41:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0103b45	obj/kern/kernel.asm	/^f0103b45:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103b49	obj/kern/kernel.asm	/^f0103b49:	c7 04 24 22 7a 10 f0 	movl   $0xf0107a22,(%esp)$/;"	l
f0103b50	obj/kern/kernel.asm	/^f0103b50:	e8 5a 07 00 00       	call   f01042af <cprintf>$/;"	l
f0103b55	obj/kern/kernel.asm	/^f0103b55:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0103b5c	obj/kern/kernel.asm	/^f0103b5c:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0103b5f	obj/kern/kernel.asm	/^f0103b5f:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0103b62	obj/kern/kernel.asm	/^f0103b62:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0103b65	obj/kern/kernel.asm	/^f0103b65:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103b68	obj/kern/kernel.asm	/^f0103b68:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0103b6b	obj/kern/kernel.asm	/^f0103b6b:	8b 34 10             	mov    (%eax,%edx,1),%esi$/;"	l
f0103b6e	obj/kern/kernel.asm	/^f0103b6e:	f7 c6 01 00 00 00    	test   $0x1,%esi$/;"	l
f0103b74	obj/kern/kernel.asm	/^f0103b74:	0f 84 b8 00 00 00    	je     f0103c32 <env_free+0x16c>$/;"	l
f0103b7a	obj/kern/kernel.asm	/^f0103b7a:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f0103b80	obj/kern/kernel.asm	/^f0103b80:	89 f0                	mov    %esi,%eax$/;"	l
f0103b82	obj/kern/kernel.asm	/^f0103b82:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103b85	obj/kern/kernel.asm	/^f0103b85:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0103b88	obj/kern/kernel.asm	/^f0103b88:	3b 05 e8 ce 22 f0    	cmp    0xf022cee8,%eax$/;"	l
f0103b8e	obj/kern/kernel.asm	/^f0103b8e:	72 20                	jb     f0103bb0 <env_free+0xea>$/;"	l
f0103b90	obj/kern/kernel.asm	/^f0103b90:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0103b94	obj/kern/kernel.asm	/^f0103b94:	c7 44 24 08 8c 6a 10 	movl   $0xf0106a8c,0x8(%esp)$/;"	l
f0103b9b	obj/kern/kernel.asm	/^f0103b9b:	f0 $/;"	l
f0103b9c	obj/kern/kernel.asm	/^f0103b9c:	c7 44 24 04 be 01 00 	movl   $0x1be,0x4(%esp)$/;"	l
f0103ba3	obj/kern/kernel.asm	/^f0103ba3:	00 $/;"	l
f0103ba4	obj/kern/kernel.asm	/^f0103ba4:	c7 04 24 17 7a 10 f0 	movl   $0xf0107a17,(%esp)$/;"	l
f0103bab	obj/kern/kernel.asm	/^f0103bab:	e8 d5 c4 ff ff       	call   f0100085 <_panic>$/;"	l
f0103bb0	obj/kern/kernel.asm	/^f0103bb0:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0103bb3	obj/kern/kernel.asm	/^f0103bb3:	c1 e2 16             	shl    $0x16,%edx$/;"	l
f0103bb6	obj/kern/kernel.asm	/^f0103bb6:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0103bb9	obj/kern/kernel.asm	/^f0103bb9:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0103bbe	obj/kern/kernel.asm	/^f0103bbe:	f6 84 9e 00 00 00 f0 	testb  $0x1,-0x10000000(%esi,%ebx,4)$/;"	l
f0103bc5	obj/kern/kernel.asm	/^f0103bc5:	01 $/;"	l
f0103bc6	obj/kern/kernel.asm	/^f0103bc6:	74 17                	je     f0103bdf <env_free+0x119>$/;"	l
f0103bc8	obj/kern/kernel.asm	/^f0103bc8:	89 d8                	mov    %ebx,%eax$/;"	l
f0103bca	obj/kern/kernel.asm	/^f0103bca:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0103bcd	obj/kern/kernel.asm	/^f0103bcd:	0b 45 e4             	or     -0x1c(%ebp),%eax$/;"	l
f0103bd0	obj/kern/kernel.asm	/^f0103bd0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103bd4	obj/kern/kernel.asm	/^f0103bd4:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103bd7	obj/kern/kernel.asm	/^f0103bd7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103bda	obj/kern/kernel.asm	/^f0103bda:	e8 63 dc ff ff       	call   f0101842 <page_remove>$/;"	l
f0103bdf	obj/kern/kernel.asm	/^f0103bdf:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0103be2	obj/kern/kernel.asm	/^f0103be2:	81 fb 00 04 00 00    	cmp    $0x400,%ebx$/;"	l
f0103be8	obj/kern/kernel.asm	/^f0103be8:	75 d4                	jne    f0103bbe <env_free+0xf8>$/;"	l
f0103bea	obj/kern/kernel.asm	/^f0103bea:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103bed	obj/kern/kernel.asm	/^f0103bed:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0103bf0	obj/kern/kernel.asm	/^f0103bf0:	c7 04 10 00 00 00 00 	movl   $0x0,(%eax,%edx,1)$/;"	l
f0103bf7	obj/kern/kernel.asm	/^f0103bf7:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0103bfa	obj/kern/kernel.asm	/^f0103bfa:	3b 05 e8 ce 22 f0    	cmp    0xf022cee8,%eax$/;"	l
f0103c00	obj/kern/kernel.asm	/^f0103c00:	72 1c                	jb     f0103c1e <env_free+0x158>$/;"	l
f0103c02	obj/kern/kernel.asm	/^f0103c02:	c7 44 24 08 60 70 10 	movl   $0xf0107060,0x8(%esp)$/;"	l
f0103c09	obj/kern/kernel.asm	/^f0103c09:	f0 $/;"	l
f0103c0a	obj/kern/kernel.asm	/^f0103c0a:	c7 44 24 04 4f 00 00 	movl   $0x4f,0x4(%esp)$/;"	l
f0103c11	obj/kern/kernel.asm	/^f0103c11:	00 $/;"	l
f0103c12	obj/kern/kernel.asm	/^f0103c12:	c7 04 24 8d 76 10 f0 	movl   $0xf010768d,(%esp)$/;"	l
f0103c19	obj/kern/kernel.asm	/^f0103c19:	e8 67 c4 ff ff       	call   f0100085 <_panic>$/;"	l
f0103c1e	obj/kern/kernel.asm	/^f0103c1e:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0103c21	obj/kern/kernel.asm	/^f0103c21:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f0103c24	obj/kern/kernel.asm	/^f0103c24:	03 05 f0 ce 22 f0    	add    0xf022cef0,%eax$/;"	l
f0103c2a	obj/kern/kernel.asm	/^f0103c2a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103c2d	obj/kern/kernel.asm	/^f0103c2d:	e8 f7 d1 ff ff       	call   f0100e29 <page_decref>$/;"	l
f0103c32	obj/kern/kernel.asm	/^f0103c32:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)$/;"	l
f0103c36	obj/kern/kernel.asm	/^f0103c36:	81 7d e0 bb 03 00 00 	cmpl   $0x3bb,-0x20(%ebp)$/;"	l
f0103c3d	obj/kern/kernel.asm	/^f0103c3d:	0f 85 19 ff ff ff    	jne    f0103b5c <env_free+0x96>$/;"	l
f0103c43	obj/kern/kernel.asm	/^f0103c43:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103c46	obj/kern/kernel.asm	/^f0103c46:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103c4b	obj/kern/kernel.asm	/^f0103c4b:	77 20                	ja     f0103c6d <env_free+0x1a7>$/;"	l
f0103c4d	obj/kern/kernel.asm	/^f0103c4d:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103c51	obj/kern/kernel.asm	/^f0103c51:	c7 44 24 08 48 6a 10 	movl   $0xf0106a48,0x8(%esp)$/;"	l
f0103c58	obj/kern/kernel.asm	/^f0103c58:	f0 $/;"	l
f0103c59	obj/kern/kernel.asm	/^f0103c59:	c7 44 24 04 cc 01 00 	movl   $0x1cc,0x4(%esp)$/;"	l
f0103c60	obj/kern/kernel.asm	/^f0103c60:	00 $/;"	l
f0103c61	obj/kern/kernel.asm	/^f0103c61:	c7 04 24 17 7a 10 f0 	movl   $0xf0107a17,(%esp)$/;"	l
f0103c68	obj/kern/kernel.asm	/^f0103c68:	e8 18 c4 ff ff       	call   f0100085 <_panic>$/;"	l
f0103c6d	obj/kern/kernel.asm	/^f0103c6d:	c7 47 60 00 00 00 00 	movl   $0x0,0x60(%edi)$/;"	l
f0103c74	obj/kern/kernel.asm	/^f0103c74:	8d 80 00 00 00 10    	lea    0x10000000(%eax),%eax$/;"	l
f0103c7a	obj/kern/kernel.asm	/^f0103c7a:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103c7d	obj/kern/kernel.asm	/^f0103c7d:	3b 05 e8 ce 22 f0    	cmp    0xf022cee8,%eax$/;"	l
f0103c83	obj/kern/kernel.asm	/^f0103c83:	72 1c                	jb     f0103ca1 <env_free+0x1db>$/;"	l
f0103c85	obj/kern/kernel.asm	/^f0103c85:	c7 44 24 08 60 70 10 	movl   $0xf0107060,0x8(%esp)$/;"	l
f0103c8c	obj/kern/kernel.asm	/^f0103c8c:	f0 $/;"	l
f0103c8d	obj/kern/kernel.asm	/^f0103c8d:	c7 44 24 04 4f 00 00 	movl   $0x4f,0x4(%esp)$/;"	l
f0103c94	obj/kern/kernel.asm	/^f0103c94:	00 $/;"	l
f0103c95	obj/kern/kernel.asm	/^f0103c95:	c7 04 24 8d 76 10 f0 	movl   $0xf010768d,(%esp)$/;"	l
f0103c9c	obj/kern/kernel.asm	/^f0103c9c:	e8 e4 c3 ff ff       	call   f0100085 <_panic>$/;"	l
f0103ca1	obj/kern/kernel.asm	/^f0103ca1:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f0103ca4	obj/kern/kernel.asm	/^f0103ca4:	03 05 f0 ce 22 f0    	add    0xf022cef0,%eax$/;"	l
f0103caa	obj/kern/kernel.asm	/^f0103caa:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103cad	obj/kern/kernel.asm	/^f0103cad:	e8 77 d1 ff ff       	call   f0100e29 <page_decref>$/;"	l
f0103cb2	obj/kern/kernel.asm	/^f0103cb2:	c7 47 54 00 00 00 00 	movl   $0x0,0x54(%edi)$/;"	l
f0103cb9	obj/kern/kernel.asm	/^f0103cb9:	a1 44 c2 22 f0       	mov    0xf022c244,%eax$/;"	l
f0103cbe	obj/kern/kernel.asm	/^f0103cbe:	89 47 44             	mov    %eax,0x44(%edi)$/;"	l
f0103cc1	obj/kern/kernel.asm	/^f0103cc1:	89 3d 44 c2 22 f0    	mov    %edi,0xf022c244$/;"	l
f0103cc7	obj/kern/kernel.asm	/^f0103cc7:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0103cca	obj/kern/kernel.asm	/^f0103cca:	5b                   	pop    %ebx$/;"	l
f0103ccb	obj/kern/kernel.asm	/^f0103ccb:	5e                   	pop    %esi$/;"	l
f0103ccc	obj/kern/kernel.asm	/^f0103ccc:	5f                   	pop    %edi$/;"	l
f0103ccd	obj/kern/kernel.asm	/^f0103ccd:	5d                   	pop    %ebp$/;"	l
f0103cce	obj/kern/kernel.asm	/^f0103cce:	c3                   	ret    $/;"	l
f0103ccf	obj/kern/kernel.asm	/^f0103ccf <env_destroy>:$/;"	l
f0103ccf	obj/kern/kernel.asm	/^f0103ccf:	55                   	push   %ebp$/;"	l
f0103cd0	obj/kern/kernel.asm	/^f0103cd0:	89 e5                	mov    %esp,%ebp$/;"	l
f0103cd2	obj/kern/kernel.asm	/^f0103cd2:	53                   	push   %ebx$/;"	l
f0103cd3	obj/kern/kernel.asm	/^f0103cd3:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103cd6	obj/kern/kernel.asm	/^f0103cd6:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103cd9	obj/kern/kernel.asm	/^f0103cd9:	83 7b 54 03          	cmpl   $0x3,0x54(%ebx)$/;"	l
f0103cdd	obj/kern/kernel.asm	/^f0103cdd:	75 19                	jne    f0103cf8 <env_destroy+0x29>$/;"	l
f0103cdf	obj/kern/kernel.asm	/^f0103cdf:	e8 ca 25 00 00       	call   f01062ae <cpunum>$/;"	l
f0103ce4	obj/kern/kernel.asm	/^f0103ce4:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103ce7	obj/kern/kernel.asm	/^f0103ce7:	39 98 28 d0 22 f0    	cmp    %ebx,-0xfdd2fd8(%eax)$/;"	l
f0103ced	obj/kern/kernel.asm	/^f0103ced:	74 09                	je     f0103cf8 <env_destroy+0x29>$/;"	l
f0103cef	obj/kern/kernel.asm	/^f0103cef:	c7 43 54 01 00 00 00 	movl   $0x1,0x54(%ebx)$/;"	l
f0103cf6	obj/kern/kernel.asm	/^f0103cf6:	eb 2f                	jmp    f0103d27 <env_destroy+0x58>$/;"	l
f0103cf8	obj/kern/kernel.asm	/^f0103cf8:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103cfb	obj/kern/kernel.asm	/^f0103cfb:	e8 c6 fd ff ff       	call   f0103ac6 <env_free>$/;"	l
f0103d00	obj/kern/kernel.asm	/^f0103d00:	e8 a9 25 00 00       	call   f01062ae <cpunum>$/;"	l
f0103d05	obj/kern/kernel.asm	/^f0103d05:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103d08	obj/kern/kernel.asm	/^f0103d08:	39 98 28 d0 22 f0    	cmp    %ebx,-0xfdd2fd8(%eax)$/;"	l
f0103d0e	obj/kern/kernel.asm	/^f0103d0e:	75 17                	jne    f0103d27 <env_destroy+0x58>$/;"	l
f0103d10	obj/kern/kernel.asm	/^f0103d10:	e8 99 25 00 00       	call   f01062ae <cpunum>$/;"	l
f0103d15	obj/kern/kernel.asm	/^f0103d15:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103d18	obj/kern/kernel.asm	/^f0103d18:	c7 80 28 d0 22 f0 00 	movl   $0x0,-0xfdd2fd8(%eax)$/;"	l
f0103d1f	obj/kern/kernel.asm	/^f0103d1f:	00 00 00 $/;"	l
f0103d22	obj/kern/kernel.asm	/^f0103d22:	e8 c9 0e 00 00       	call   f0104bf0 <sched_yield>$/;"	l
f0103d27	obj/kern/kernel.asm	/^f0103d27:	83 c4 14             	add    $0x14,%esp$/;"	l
f0103d2a	obj/kern/kernel.asm	/^f0103d2a:	5b                   	pop    %ebx$/;"	l
f0103d2b	obj/kern/kernel.asm	/^f0103d2b:	5d                   	pop    %ebp$/;"	l
f0103d2c	obj/kern/kernel.asm	/^f0103d2c:	c3                   	ret    $/;"	l
f0103d2d	obj/kern/kernel.asm	/^f0103d2d <region_alloc>:$/;"	l
f0103d2d	obj/kern/kernel.asm	/^f0103d2d:	55                   	push   %ebp$/;"	l
f0103d2e	obj/kern/kernel.asm	/^f0103d2e:	89 e5                	mov    %esp,%ebp$/;"	l
f0103d30	obj/kern/kernel.asm	/^f0103d30:	57                   	push   %edi$/;"	l
f0103d31	obj/kern/kernel.asm	/^f0103d31:	56                   	push   %esi$/;"	l
f0103d32	obj/kern/kernel.asm	/^f0103d32:	53                   	push   %ebx$/;"	l
f0103d33	obj/kern/kernel.asm	/^f0103d33:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0103d36	obj/kern/kernel.asm	/^f0103d36:	89 c6                	mov    %eax,%esi$/;"	l
f0103d38	obj/kern/kernel.asm	/^f0103d38:	89 d3                	mov    %edx,%ebx$/;"	l
f0103d3a	obj/kern/kernel.asm	/^f0103d3a:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f0103d40	obj/kern/kernel.asm	/^f0103d40:	8d bc 0a ff 0f 00 00 	lea    0xfff(%edx,%ecx,1),%edi$/;"	l
f0103d47	obj/kern/kernel.asm	/^f0103d47:	81 e7 00 f0 ff ff    	and    $0xfffff000,%edi$/;"	l
f0103d4d	obj/kern/kernel.asm	/^f0103d4d:	39 fb                	cmp    %edi,%ebx$/;"	l
f0103d4f	obj/kern/kernel.asm	/^f0103d4f:	73 31                	jae    f0103d82 <region_alloc+0x55>$/;"	l
f0103d51	obj/kern/kernel.asm	/^f0103d51:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0103d58	obj/kern/kernel.asm	/^f0103d58:	e8 aa d7 ff ff       	call   f0101507 <page_alloc>$/;"	l
f0103d5d	obj/kern/kernel.asm	/^f0103d5d:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
f0103d64	obj/kern/kernel.asm	/^f0103d64:	00 $/;"	l
f0103d65	obj/kern/kernel.asm	/^f0103d65:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0103d69	obj/kern/kernel.asm	/^f0103d69:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103d6d	obj/kern/kernel.asm	/^f0103d6d:	8b 46 60             	mov    0x60(%esi),%eax$/;"	l
f0103d70	obj/kern/kernel.asm	/^f0103d70:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103d73	obj/kern/kernel.asm	/^f0103d73:	e8 1a db ff ff       	call   f0101892 <page_insert>$/;"	l
f0103d78	obj/kern/kernel.asm	/^f0103d78:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103d7e	obj/kern/kernel.asm	/^f0103d7e:	39 df                	cmp    %ebx,%edi$/;"	l
f0103d80	obj/kern/kernel.asm	/^f0103d80:	77 cf                	ja     f0103d51 <region_alloc+0x24>$/;"	l
f0103d82	obj/kern/kernel.asm	/^f0103d82:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0103d85	obj/kern/kernel.asm	/^f0103d85:	5b                   	pop    %ebx$/;"	l
f0103d86	obj/kern/kernel.asm	/^f0103d86:	5e                   	pop    %esi$/;"	l
f0103d87	obj/kern/kernel.asm	/^f0103d87:	5f                   	pop    %edi$/;"	l
f0103d88	obj/kern/kernel.asm	/^f0103d88:	5d                   	pop    %ebp$/;"	l
f0103d89	obj/kern/kernel.asm	/^f0103d89:	c3                   	ret    $/;"	l
f0103d8a	obj/kern/kernel.asm	/^f0103d8a <env_alloc>:$/;"	l
f0103d8a	obj/kern/kernel.asm	/^f0103d8a:	55                   	push   %ebp$/;"	l
f0103d8b	obj/kern/kernel.asm	/^f0103d8b:	89 e5                	mov    %esp,%ebp$/;"	l
f0103d8d	obj/kern/kernel.asm	/^f0103d8d:	57                   	push   %edi$/;"	l
f0103d8e	obj/kern/kernel.asm	/^f0103d8e:	56                   	push   %esi$/;"	l
f0103d8f	obj/kern/kernel.asm	/^f0103d8f:	53                   	push   %ebx$/;"	l
f0103d90	obj/kern/kernel.asm	/^f0103d90:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0103d93	obj/kern/kernel.asm	/^f0103d93:	8b 1d 44 c2 22 f0    	mov    0xf022c244,%ebx$/;"	l
f0103d99	obj/kern/kernel.asm	/^f0103d99:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax$/;"	l
f0103d9e	obj/kern/kernel.asm	/^f0103d9e:	85 db                	test   %ebx,%ebx$/;"	l
f0103da0	obj/kern/kernel.asm	/^f0103da0:	0f 84 2b 02 00 00    	je     f0103fd1 <env_alloc+0x247>$/;"	l
f0103da6	obj/kern/kernel.asm	/^f0103da6:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0103dad	obj/kern/kernel.asm	/^f0103dad:	e8 55 d7 ff ff       	call   f0101507 <page_alloc>$/;"	l
f0103db2	obj/kern/kernel.asm	/^f0103db2:	89 c6                	mov    %eax,%esi$/;"	l
f0103db4	obj/kern/kernel.asm	/^f0103db4:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0103db9	obj/kern/kernel.asm	/^f0103db9:	85 f6                	test   %esi,%esi$/;"	l
f0103dbb	obj/kern/kernel.asm	/^f0103dbb:	0f 84 10 02 00 00    	je     f0103fd1 <env_alloc+0x247>$/;"	l
f0103dc1	obj/kern/kernel.asm	/^f0103dc1:	89 f7                	mov    %esi,%edi$/;"	l
f0103dc3	obj/kern/kernel.asm	/^f0103dc3:	89 f0                	mov    %esi,%eax$/;"	l
f0103dc5	obj/kern/kernel.asm	/^f0103dc5:	2b 05 f0 ce 22 f0    	sub    0xf022cef0,%eax$/;"	l
f0103dcb	obj/kern/kernel.asm	/^f0103dcb:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0103dce	obj/kern/kernel.asm	/^f0103dce:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0103dd1	obj/kern/kernel.asm	/^f0103dd1:	89 c2                	mov    %eax,%edx$/;"	l
f0103dd3	obj/kern/kernel.asm	/^f0103dd3:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0103dd6	obj/kern/kernel.asm	/^f0103dd6:	3b 15 e8 ce 22 f0    	cmp    0xf022cee8,%edx$/;"	l
f0103ddc	obj/kern/kernel.asm	/^f0103ddc:	72 20                	jb     f0103dfe <env_alloc+0x74>$/;"	l
f0103dde	obj/kern/kernel.asm	/^f0103dde:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103de2	obj/kern/kernel.asm	/^f0103de2:	c7 44 24 08 8c 6a 10 	movl   $0xf0106a8c,0x8(%esp)$/;"	l
f0103de9	obj/kern/kernel.asm	/^f0103de9:	f0 $/;"	l
f0103dea	obj/kern/kernel.asm	/^f0103dea:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f0103df1	obj/kern/kernel.asm	/^f0103df1:	00 $/;"	l
f0103df2	obj/kern/kernel.asm	/^f0103df2:	c7 04 24 8d 76 10 f0 	movl   $0xf010768d,(%esp)$/;"	l
f0103df9	obj/kern/kernel.asm	/^f0103df9:	e8 87 c2 ff ff       	call   f0100085 <_panic>$/;"	l
f0103dfe	obj/kern/kernel.asm	/^f0103dfe:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0103e05	obj/kern/kernel.asm	/^f0103e05:	00 $/;"	l
f0103e06	obj/kern/kernel.asm	/^f0103e06:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0103e0d	obj/kern/kernel.asm	/^f0103e0d:	00 $/;"	l
f0103e0e	obj/kern/kernel.asm	/^f0103e0e:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0103e13	obj/kern/kernel.asm	/^f0103e13:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103e16	obj/kern/kernel.asm	/^f0103e16:	e8 eb 1d 00 00       	call   f0105c06 <memset>$/;"	l
f0103e1b	obj/kern/kernel.asm	/^f0103e1b:	8b 15 ec ce 22 f0    	mov    0xf022ceec,%edx$/;"	l
f0103e21	obj/kern/kernel.asm	/^f0103e21:	89 f0                	mov    %esi,%eax$/;"	l
f0103e23	obj/kern/kernel.asm	/^f0103e23:	2b 05 f0 ce 22 f0    	sub    0xf022cef0,%eax$/;"	l
f0103e29	obj/kern/kernel.asm	/^f0103e29:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0103e2c	obj/kern/kernel.asm	/^f0103e2c:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0103e2f	obj/kern/kernel.asm	/^f0103e2f:	89 c1                	mov    %eax,%ecx$/;"	l
f0103e31	obj/kern/kernel.asm	/^f0103e31:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0103e34	obj/kern/kernel.asm	/^f0103e34:	3b 0d e8 ce 22 f0    	cmp    0xf022cee8,%ecx$/;"	l
f0103e3a	obj/kern/kernel.asm	/^f0103e3a:	72 20                	jb     f0103e5c <env_alloc+0xd2>$/;"	l
f0103e3c	obj/kern/kernel.asm	/^f0103e3c:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103e40	obj/kern/kernel.asm	/^f0103e40:	c7 44 24 08 8c 6a 10 	movl   $0xf0106a8c,0x8(%esp)$/;"	l
f0103e47	obj/kern/kernel.asm	/^f0103e47:	f0 $/;"	l
f0103e48	obj/kern/kernel.asm	/^f0103e48:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f0103e4f	obj/kern/kernel.asm	/^f0103e4f:	00 $/;"	l
f0103e50	obj/kern/kernel.asm	/^f0103e50:	c7 04 24 8d 76 10 f0 	movl   $0xf010768d,(%esp)$/;"	l
f0103e57	obj/kern/kernel.asm	/^f0103e57:	e8 29 c2 ff ff       	call   f0100085 <_panic>$/;"	l
f0103e5c	obj/kern/kernel.asm	/^f0103e5c:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0103e63	obj/kern/kernel.asm	/^f0103e63:	00 $/;"	l
f0103e64	obj/kern/kernel.asm	/^f0103e64:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0103e68	obj/kern/kernel.asm	/^f0103e68:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0103e6d	obj/kern/kernel.asm	/^f0103e6d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103e70	obj/kern/kernel.asm	/^f0103e70:	e8 f0 1d 00 00       	call   f0105c65 <memmove>$/;"	l
f0103e75	obj/kern/kernel.asm	/^f0103e75:	2b 3d f0 ce 22 f0    	sub    0xf022cef0,%edi$/;"	l
f0103e7b	obj/kern/kernel.asm	/^f0103e7b:	c1 ff 03             	sar    $0x3,%edi$/;"	l
f0103e7e	obj/kern/kernel.asm	/^f0103e7e:	c1 e7 0c             	shl    $0xc,%edi$/;"	l
f0103e81	obj/kern/kernel.asm	/^f0103e81:	89 f8                	mov    %edi,%eax$/;"	l
f0103e83	obj/kern/kernel.asm	/^f0103e83:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103e86	obj/kern/kernel.asm	/^f0103e86:	3b 05 e8 ce 22 f0    	cmp    0xf022cee8,%eax$/;"	l
f0103e8c	obj/kern/kernel.asm	/^f0103e8c:	72 20                	jb     f0103eae <env_alloc+0x124>$/;"	l
f0103e8e	obj/kern/kernel.asm	/^f0103e8e:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0103e92	obj/kern/kernel.asm	/^f0103e92:	c7 44 24 08 8c 6a 10 	movl   $0xf0106a8c,0x8(%esp)$/;"	l
f0103e99	obj/kern/kernel.asm	/^f0103e99:	f0 $/;"	l
f0103e9a	obj/kern/kernel.asm	/^f0103e9a:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f0103ea1	obj/kern/kernel.asm	/^f0103ea1:	00 $/;"	l
f0103ea2	obj/kern/kernel.asm	/^f0103ea2:	c7 04 24 8d 76 10 f0 	movl   $0xf010768d,(%esp)$/;"	l
f0103ea9	obj/kern/kernel.asm	/^f0103ea9:	e8 d7 c1 ff ff       	call   f0100085 <_panic>$/;"	l
f0103eae	obj/kern/kernel.asm	/^f0103eae:	81 ef 00 00 00 10    	sub    $0x10000000,%edi$/;"	l
f0103eb4	obj/kern/kernel.asm	/^f0103eb4:	89 7b 60             	mov    %edi,0x60(%ebx)$/;"	l
f0103eb7	obj/kern/kernel.asm	/^f0103eb7:	66 83 46 04 01       	addw   $0x1,0x4(%esi)$/;"	l
f0103ebc	obj/kern/kernel.asm	/^f0103ebc:	8b 43 60             	mov    0x60(%ebx),%eax$/;"	l
f0103ebf	obj/kern/kernel.asm	/^f0103ebf:	89 c2                	mov    %eax,%edx$/;"	l
f0103ec1	obj/kern/kernel.asm	/^f0103ec1:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103ec6	obj/kern/kernel.asm	/^f0103ec6:	77 20                	ja     f0103ee8 <env_alloc+0x15e>$/;"	l
f0103ec8	obj/kern/kernel.asm	/^f0103ec8:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103ecc	obj/kern/kernel.asm	/^f0103ecc:	c7 44 24 08 48 6a 10 	movl   $0xf0106a48,0x8(%esp)$/;"	l
f0103ed3	obj/kern/kernel.asm	/^f0103ed3:	f0 $/;"	l
f0103ed4	obj/kern/kernel.asm	/^f0103ed4:	c7 44 24 04 cd 00 00 	movl   $0xcd,0x4(%esp)$/;"	l
f0103edb	obj/kern/kernel.asm	/^f0103edb:	00 $/;"	l
f0103edc	obj/kern/kernel.asm	/^f0103edc:	c7 04 24 17 7a 10 f0 	movl   $0xf0107a17,(%esp)$/;"	l
f0103ee3	obj/kern/kernel.asm	/^f0103ee3:	e8 9d c1 ff ff       	call   f0100085 <_panic>$/;"	l
f0103ee8	obj/kern/kernel.asm	/^f0103ee8:	81 c2 00 00 00 10    	add    $0x10000000,%edx$/;"	l
f0103eee	obj/kern/kernel.asm	/^f0103eee:	83 ca 05             	or     $0x5,%edx$/;"	l
f0103ef1	obj/kern/kernel.asm	/^f0103ef1:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f0103ef7	obj/kern/kernel.asm	/^f0103ef7:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f0103efa	obj/kern/kernel.asm	/^f0103efa:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
f0103eff	obj/kern/kernel.asm	/^f0103eff:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f0103f04	obj/kern/kernel.asm	/^f0103f04:	7f 05                	jg     f0103f0b <env_alloc+0x181>$/;"	l
f0103f06	obj/kern/kernel.asm	/^f0103f06:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
f0103f0b	obj/kern/kernel.asm	/^f0103f0b:	89 da                	mov    %ebx,%edx$/;"	l
f0103f0d	obj/kern/kernel.asm	/^f0103f0d:	2b 15 40 c2 22 f0    	sub    0xf022c240,%edx$/;"	l
f0103f13	obj/kern/kernel.asm	/^f0103f13:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f0103f16	obj/kern/kernel.asm	/^f0103f16:	69 d2 df 7b ef bd    	imul   $0xbdef7bdf,%edx,%edx$/;"	l
f0103f1c	obj/kern/kernel.asm	/^f0103f1c:	09 d0                	or     %edx,%eax$/;"	l
f0103f1e	obj/kern/kernel.asm	/^f0103f1e:	89 43 48             	mov    %eax,0x48(%ebx)$/;"	l
f0103f21	obj/kern/kernel.asm	/^f0103f21:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103f24	obj/kern/kernel.asm	/^f0103f24:	89 43 4c             	mov    %eax,0x4c(%ebx)$/;"	l
f0103f27	obj/kern/kernel.asm	/^f0103f27:	c7 43 50 00 00 00 00 	movl   $0x0,0x50(%ebx)$/;"	l
f0103f2e	obj/kern/kernel.asm	/^f0103f2e:	c7 43 54 02 00 00 00 	movl   $0x2,0x54(%ebx)$/;"	l
f0103f35	obj/kern/kernel.asm	/^f0103f35:	c7 43 58 00 00 00 00 	movl   $0x0,0x58(%ebx)$/;"	l
f0103f3c	obj/kern/kernel.asm	/^f0103f3c:	c7 44 24 08 44 00 00 	movl   $0x44,0x8(%esp)$/;"	l
f0103f43	obj/kern/kernel.asm	/^f0103f43:	00 $/;"	l
f0103f44	obj/kern/kernel.asm	/^f0103f44:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0103f4b	obj/kern/kernel.asm	/^f0103f4b:	00 $/;"	l
f0103f4c	obj/kern/kernel.asm	/^f0103f4c:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103f4f	obj/kern/kernel.asm	/^f0103f4f:	e8 b2 1c 00 00       	call   f0105c06 <memset>$/;"	l
f0103f54	obj/kern/kernel.asm	/^f0103f54:	66 c7 43 24 23 00    	movw   $0x23,0x24(%ebx)$/;"	l
f0103f5a	obj/kern/kernel.asm	/^f0103f5a:	66 c7 43 20 23 00    	movw   $0x23,0x20(%ebx)$/;"	l
f0103f60	obj/kern/kernel.asm	/^f0103f60:	66 c7 43 40 23 00    	movw   $0x23,0x40(%ebx)$/;"	l
f0103f66	obj/kern/kernel.asm	/^f0103f66:	c7 43 3c 00 e0 bf ee 	movl   $0xeebfe000,0x3c(%ebx)$/;"	l
f0103f6d	obj/kern/kernel.asm	/^f0103f6d:	66 c7 43 34 1b 00    	movw   $0x1b,0x34(%ebx)$/;"	l
f0103f73	obj/kern/kernel.asm	/^f0103f73:	c7 43 64 00 00 00 00 	movl   $0x0,0x64(%ebx)$/;"	l
f0103f7a	obj/kern/kernel.asm	/^f0103f7a:	c7 43 68 00 00 00 00 	movl   $0x0,0x68(%ebx)$/;"	l
f0103f81	obj/kern/kernel.asm	/^f0103f81:	8b 43 44             	mov    0x44(%ebx),%eax$/;"	l
f0103f84	obj/kern/kernel.asm	/^f0103f84:	a3 44 c2 22 f0       	mov    %eax,0xf022c244$/;"	l
f0103f89	obj/kern/kernel.asm	/^f0103f89:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103f8c	obj/kern/kernel.asm	/^f0103f8c:	89 18                	mov    %ebx,(%eax)$/;"	l
f0103f8e	obj/kern/kernel.asm	/^f0103f8e:	8b 5b 48             	mov    0x48(%ebx),%ebx$/;"	l
f0103f91	obj/kern/kernel.asm	/^f0103f91:	e8 18 23 00 00       	call   f01062ae <cpunum>$/;"	l
f0103f96	obj/kern/kernel.asm	/^f0103f96:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103f99	obj/kern/kernel.asm	/^f0103f99:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0103f9e	obj/kern/kernel.asm	/^f0103f9e:	83 b8 28 d0 22 f0 00 	cmpl   $0x0,-0xfdd2fd8(%eax)$/;"	l
f0103fa5	obj/kern/kernel.asm	/^f0103fa5:	74 11                	je     f0103fb8 <env_alloc+0x22e>$/;"	l
f0103fa7	obj/kern/kernel.asm	/^f0103fa7:	e8 02 23 00 00       	call   f01062ae <cpunum>$/;"	l
f0103fac	obj/kern/kernel.asm	/^f0103fac:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103faf	obj/kern/kernel.asm	/^f0103faf:	8b 80 28 d0 22 f0    	mov    -0xfdd2fd8(%eax),%eax$/;"	l
f0103fb5	obj/kern/kernel.asm	/^f0103fb5:	8b 50 48             	mov    0x48(%eax),%edx$/;"	l
f0103fb8	obj/kern/kernel.asm	/^f0103fb8:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0103fbc	obj/kern/kernel.asm	/^f0103fbc:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0103fc0	obj/kern/kernel.asm	/^f0103fc0:	c7 04 24 38 7a 10 f0 	movl   $0xf0107a38,(%esp)$/;"	l
f0103fc7	obj/kern/kernel.asm	/^f0103fc7:	e8 e3 02 00 00       	call   f01042af <cprintf>$/;"	l
f0103fcc	obj/kern/kernel.asm	/^f0103fcc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103fd1	obj/kern/kernel.asm	/^f0103fd1:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0103fd4	obj/kern/kernel.asm	/^f0103fd4:	5b                   	pop    %ebx$/;"	l
f0103fd5	obj/kern/kernel.asm	/^f0103fd5:	5e                   	pop    %esi$/;"	l
f0103fd6	obj/kern/kernel.asm	/^f0103fd6:	5f                   	pop    %edi$/;"	l
f0103fd7	obj/kern/kernel.asm	/^f0103fd7:	5d                   	pop    %ebp$/;"	l
f0103fd8	obj/kern/kernel.asm	/^f0103fd8:	c3                   	ret    $/;"	l
f0103fd9	obj/kern/kernel.asm	/^f0103fd9 <env_create>:$/;"	l
f0103fd9	obj/kern/kernel.asm	/^f0103fd9:	55                   	push   %ebp$/;"	l
f0103fda	obj/kern/kernel.asm	/^f0103fda:	89 e5                	mov    %esp,%ebp$/;"	l
f0103fdc	obj/kern/kernel.asm	/^f0103fdc:	57                   	push   %edi$/;"	l
f0103fdd	obj/kern/kernel.asm	/^f0103fdd:	56                   	push   %esi$/;"	l
f0103fde	obj/kern/kernel.asm	/^f0103fde:	53                   	push   %ebx$/;"	l
f0103fdf	obj/kern/kernel.asm	/^f0103fdf:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0103fe2	obj/kern/kernel.asm	/^f0103fe2:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0103fe9	obj/kern/kernel.asm	/^f0103fe9:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0103ff0	obj/kern/kernel.asm	/^f0103ff0:	00 $/;"	l
f0103ff1	obj/kern/kernel.asm	/^f0103ff1:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0103ff4	obj/kern/kernel.asm	/^f0103ff4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103ff7	obj/kern/kernel.asm	/^f0103ff7:	e8 8e fd ff ff       	call   f0103d8a <env_alloc>$/;"	l
f0103ffc	obj/kern/kernel.asm	/^f0103ffc:	85 c0                	test   %eax,%eax$/;"	l
f0103ffe	obj/kern/kernel.asm	/^f0103ffe:	74 1c                	je     f010401c <env_create+0x43>$/;"	l
f0104000	obj/kern/kernel.asm	/^f0104000:	c7 44 24 08 64 7a 10 	movl   $0xf0107a64,0x8(%esp)$/;"	l
f0104007	obj/kern/kernel.asm	/^f0104007:	f0 $/;"	l
f0104008	obj/kern/kernel.asm	/^f0104008:	c7 44 24 04 9c 01 00 	movl   $0x19c,0x4(%esp)$/;"	l
f010400f	obj/kern/kernel.asm	/^f010400f:	00 $/;"	l
f0104010	obj/kern/kernel.asm	/^f0104010:	c7 04 24 17 7a 10 f0 	movl   $0xf0107a17,(%esp)$/;"	l
f0104017	obj/kern/kernel.asm	/^f0104017:	e8 69 c0 ff ff       	call   f0100085 <_panic>$/;"	l
f010401c	obj/kern/kernel.asm	/^f010401c:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010401f	obj/kern/kernel.asm	/^f010401f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104022	obj/kern/kernel.asm	/^f0104022:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0104025	obj/kern/kernel.asm	/^f0104025:	81 38 7f 45 4c 46    	cmpl   $0x464c457f,(%eax)$/;"	l
f010402b	obj/kern/kernel.asm	/^f010402b:	0f 85 07 01 00 00    	jne    f0104138 <env_create+0x15f>$/;"	l
f0104031	obj/kern/kernel.asm	/^f0104031:	8b 58 1c             	mov    0x1c(%eax),%ebx$/;"	l
f0104034	obj/kern/kernel.asm	/^f0104034:	0f b7 70 2c          	movzwl 0x2c(%eax),%esi$/;"	l
f0104038	obj/kern/kernel.asm	/^f0104038:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f010403b	obj/kern/kernel.asm	/^f010403b:	89 c2                	mov    %eax,%edx$/;"	l
f010403d	obj/kern/kernel.asm	/^f010403d:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0104042	obj/kern/kernel.asm	/^f0104042:	77 20                	ja     f0104064 <env_create+0x8b>$/;"	l
f0104044	obj/kern/kernel.asm	/^f0104044:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0104048	obj/kern/kernel.asm	/^f0104048:	c7 44 24 08 48 6a 10 	movl   $0xf0106a48,0x8(%esp)$/;"	l
f010404f	obj/kern/kernel.asm	/^f010404f:	f0 $/;"	l
f0104050	obj/kern/kernel.asm	/^f0104050:	c7 44 24 04 72 01 00 	movl   $0x172,0x4(%esp)$/;"	l
f0104057	obj/kern/kernel.asm	/^f0104057:	00 $/;"	l
f0104058	obj/kern/kernel.asm	/^f0104058:	c7 04 24 17 7a 10 f0 	movl   $0xf0107a17,(%esp)$/;"	l
f010405f	obj/kern/kernel.asm	/^f010405f:	e8 21 c0 ff ff       	call   f0100085 <_panic>$/;"	l
f0104064	obj/kern/kernel.asm	/^f0104064:	03 5d d4             	add    -0x2c(%ebp),%ebx$/;"	l
f0104067	obj/kern/kernel.asm	/^f0104067:	0f b7 f6             	movzwl %si,%esi$/;"	l
f010406a	obj/kern/kernel.asm	/^f010406a:	c1 e6 05             	shl    $0x5,%esi$/;"	l
f010406d	obj/kern/kernel.asm	/^f010406d:	8d 34 33             	lea    (%ebx,%esi,1),%esi$/;"	l
f0104070	obj/kern/kernel.asm	/^f0104070:	81 c2 00 00 00 10    	add    $0x10000000,%edx$/;"	l
f0104076	obj/kern/kernel.asm	/^f0104076:	0f 22 da             	mov    %edx,%cr3$/;"	l
f0104079	obj/kern/kernel.asm	/^f0104079:	39 f3                	cmp    %esi,%ebx$/;"	l
f010407b	obj/kern/kernel.asm	/^f010407b:	73 54                	jae    f01040d1 <env_create+0xf8>$/;"	l
f010407d	obj/kern/kernel.asm	/^f010407d:	83 3b 01             	cmpl   $0x1,(%ebx)$/;"	l
f0104080	obj/kern/kernel.asm	/^f0104080:	75 48                	jne    f01040ca <env_create+0xf1>$/;"	l
f0104082	obj/kern/kernel.asm	/^f0104082:	8b 4b 14             	mov    0x14(%ebx),%ecx$/;"	l
f0104085	obj/kern/kernel.asm	/^f0104085:	8b 53 08             	mov    0x8(%ebx),%edx$/;"	l
f0104088	obj/kern/kernel.asm	/^f0104088:	89 f8                	mov    %edi,%eax$/;"	l
f010408a	obj/kern/kernel.asm	/^f010408a:	e8 9e fc ff ff       	call   f0103d2d <region_alloc>$/;"	l
f010408f	obj/kern/kernel.asm	/^f010408f:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f0104092	obj/kern/kernel.asm	/^f0104092:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104096	obj/kern/kernel.asm	/^f0104096:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104099	obj/kern/kernel.asm	/^f0104099:	03 43 04             	add    0x4(%ebx),%eax$/;"	l
f010409c	obj/kern/kernel.asm	/^f010409c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01040a0	obj/kern/kernel.asm	/^f01040a0:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f01040a3	obj/kern/kernel.asm	/^f01040a3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01040a6	obj/kern/kernel.asm	/^f01040a6:	e8 ba 1b 00 00       	call   f0105c65 <memmove>$/;"	l
f01040ab	obj/kern/kernel.asm	/^f01040ab:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f01040ae	obj/kern/kernel.asm	/^f01040ae:	8b 53 14             	mov    0x14(%ebx),%edx$/;"	l
f01040b1	obj/kern/kernel.asm	/^f01040b1:	29 c2                	sub    %eax,%edx$/;"	l
f01040b3	obj/kern/kernel.asm	/^f01040b3:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01040b7	obj/kern/kernel.asm	/^f01040b7:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01040be	obj/kern/kernel.asm	/^f01040be:	00 $/;"	l
f01040bf	obj/kern/kernel.asm	/^f01040bf:	03 43 08             	add    0x8(%ebx),%eax$/;"	l
f01040c2	obj/kern/kernel.asm	/^f01040c2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01040c5	obj/kern/kernel.asm	/^f01040c5:	e8 3c 1b 00 00       	call   f0105c06 <memset>$/;"	l
f01040ca	obj/kern/kernel.asm	/^f01040ca:	83 c3 20             	add    $0x20,%ebx$/;"	l
f01040cd	obj/kern/kernel.asm	/^f01040cd:	39 de                	cmp    %ebx,%esi$/;"	l
f01040cf	obj/kern/kernel.asm	/^f01040cf:	77 ac                	ja     f010407d <env_create+0xa4>$/;"	l
f01040d1	obj/kern/kernel.asm	/^f01040d1:	a1 ec ce 22 f0       	mov    0xf022ceec,%eax$/;"	l
f01040d6	obj/kern/kernel.asm	/^f01040d6:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01040db	obj/kern/kernel.asm	/^f01040db:	77 20                	ja     f01040fd <env_create+0x124>$/;"	l
f01040dd	obj/kern/kernel.asm	/^f01040dd:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01040e1	obj/kern/kernel.asm	/^f01040e1:	c7 44 24 08 48 6a 10 	movl   $0xf0106a48,0x8(%esp)$/;"	l
f01040e8	obj/kern/kernel.asm	/^f01040e8:	f0 $/;"	l
f01040e9	obj/kern/kernel.asm	/^f01040e9:	c7 44 24 04 7b 01 00 	movl   $0x17b,0x4(%esp)$/;"	l
f01040f0	obj/kern/kernel.asm	/^f01040f0:	00 $/;"	l
f01040f1	obj/kern/kernel.asm	/^f01040f1:	c7 04 24 17 7a 10 f0 	movl   $0xf0107a17,(%esp)$/;"	l
f01040f8	obj/kern/kernel.asm	/^f01040f8:	e8 88 bf ff ff       	call   f0100085 <_panic>$/;"	l
f01040fd	obj/kern/kernel.asm	/^f01040fd:	8d 80 00 00 00 10    	lea    0x10000000(%eax),%eax$/;"	l
f0104103	obj/kern/kernel.asm	/^f0104103:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0104106	obj/kern/kernel.asm	/^f0104106:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0104109	obj/kern/kernel.asm	/^f0104109:	8b 42 18             	mov    0x18(%edx),%eax$/;"	l
f010410c	obj/kern/kernel.asm	/^f010410c:	89 47 30             	mov    %eax,0x30(%edi)$/;"	l
f010410f	obj/kern/kernel.asm	/^f010410f:	c7 47 3c 00 e0 bf ee 	movl   $0xeebfe000,0x3c(%edi)$/;"	l
f0104116	obj/kern/kernel.asm	/^f0104116:	b9 00 10 00 00       	mov    $0x1000,%ecx$/;"	l
f010411b	obj/kern/kernel.asm	/^f010411b:	ba 00 d0 bf ee       	mov    $0xeebfd000,%edx$/;"	l
f0104120	obj/kern/kernel.asm	/^f0104120:	89 f8                	mov    %edi,%eax$/;"	l
f0104122	obj/kern/kernel.asm	/^f0104122:	e8 06 fc ff ff       	call   f0103d2d <region_alloc>$/;"	l
f0104127	obj/kern/kernel.asm	/^f0104127:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010412a	obj/kern/kernel.asm	/^f010412a:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f010412d	obj/kern/kernel.asm	/^f010412d:	89 50 50             	mov    %edx,0x50(%eax)$/;"	l
f0104130	obj/kern/kernel.asm	/^f0104130:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f0104133	obj/kern/kernel.asm	/^f0104133:	5b                   	pop    %ebx$/;"	l
f0104134	obj/kern/kernel.asm	/^f0104134:	5e                   	pop    %esi$/;"	l
f0104135	obj/kern/kernel.asm	/^f0104135:	5f                   	pop    %edi$/;"	l
f0104136	obj/kern/kernel.asm	/^f0104136:	5d                   	pop    %ebp$/;"	l
f0104137	obj/kern/kernel.asm	/^f0104137:	c3                   	ret    $/;"	l
f0104138	obj/kern/kernel.asm	/^f0104138:	c7 44 24 08 4d 7a 10 	movl   $0xf0107a4d,0x8(%esp)$/;"	l
f010413f	obj/kern/kernel.asm	/^f010413f:	f0 $/;"	l
f0104140	obj/kern/kernel.asm	/^f0104140:	c7 44 24 04 8b 01 00 	movl   $0x18b,0x4(%esp)$/;"	l
f0104147	obj/kern/kernel.asm	/^f0104147:	00 $/;"	l
f0104148	obj/kern/kernel.asm	/^f0104148:	c7 04 24 17 7a 10 f0 	movl   $0xf0107a17,(%esp)$/;"	l
f010414f	obj/kern/kernel.asm	/^f010414f:	e8 31 bf ff ff       	call   f0100085 <_panic>$/;"	l
f0104154	obj/kern/kernel.asm	/^f0104154 <mc146818_read>:$/;"	l
f0104154	obj/kern/kernel.asm	/^f0104154:	55                   	push   %ebp$/;"	l
f0104155	obj/kern/kernel.asm	/^f0104155:	89 e5                	mov    %esp,%ebp$/;"	l
f0104157	obj/kern/kernel.asm	/^f0104157:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f010415c	obj/kern/kernel.asm	/^f010415c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010415f	obj/kern/kernel.asm	/^f010415f:	ee                   	out    %al,(%dx)$/;"	l
f0104160	obj/kern/kernel.asm	/^f0104160:	b2 71                	mov    $0x71,%dl$/;"	l
f0104162	obj/kern/kernel.asm	/^f0104162:	ec                   	in     (%dx),%al$/;"	l
f0104163	obj/kern/kernel.asm	/^f0104163:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0104166	obj/kern/kernel.asm	/^f0104166:	5d                   	pop    %ebp$/;"	l
f0104167	obj/kern/kernel.asm	/^f0104167:	c3                   	ret    $/;"	l
f0104168	obj/kern/kernel.asm	/^f0104168 <mc146818_write>:$/;"	l
f0104168	obj/kern/kernel.asm	/^f0104168:	55                   	push   %ebp$/;"	l
f0104169	obj/kern/kernel.asm	/^f0104169:	89 e5                	mov    %esp,%ebp$/;"	l
f010416b	obj/kern/kernel.asm	/^f010416b:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0104170	obj/kern/kernel.asm	/^f0104170:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104173	obj/kern/kernel.asm	/^f0104173:	ee                   	out    %al,(%dx)$/;"	l
f0104174	obj/kern/kernel.asm	/^f0104174:	b2 71                	mov    $0x71,%dl$/;"	l
f0104176	obj/kern/kernel.asm	/^f0104176:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104179	obj/kern/kernel.asm	/^f0104179:	ee                   	out    %al,(%dx)$/;"	l
f010417a	obj/kern/kernel.asm	/^f010417a:	5d                   	pop    %ebp$/;"	l
f010417b	obj/kern/kernel.asm	/^f010417b:	c3                   	ret    $/;"	l
f010417c	obj/kern/kernel.asm	/^f010417c <irq_setmask_8259A>:$/;"	l
f010417c	obj/kern/kernel.asm	/^f010417c:	55                   	push   %ebp$/;"	l
f010417d	obj/kern/kernel.asm	/^f010417d:	89 e5                	mov    %esp,%ebp$/;"	l
f010417f	obj/kern/kernel.asm	/^f010417f:	56                   	push   %esi$/;"	l
f0104180	obj/kern/kernel.asm	/^f0104180:	53                   	push   %ebx$/;"	l
f0104181	obj/kern/kernel.asm	/^f0104181:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0104184	obj/kern/kernel.asm	/^f0104184:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104187	obj/kern/kernel.asm	/^f0104187:	89 c6                	mov    %eax,%esi$/;"	l
f0104189	obj/kern/kernel.asm	/^f0104189:	66 a3 70 13 12 f0    	mov    %ax,0xf0121370$/;"	l
f010418f	obj/kern/kernel.asm	/^f010418f:	83 3d 48 c2 22 f0 00 	cmpl   $0x0,0xf022c248$/;"	l
f0104196	obj/kern/kernel.asm	/^f0104196:	74 4e                	je     f01041e6 <irq_setmask_8259A+0x6a>$/;"	l
f0104198	obj/kern/kernel.asm	/^f0104198:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f010419d	obj/kern/kernel.asm	/^f010419d:	ee                   	out    %al,(%dx)$/;"	l
f010419e	obj/kern/kernel.asm	/^f010419e:	89 f0                	mov    %esi,%eax$/;"	l
f01041a0	obj/kern/kernel.asm	/^f01041a0:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f01041a4	obj/kern/kernel.asm	/^f01041a4:	b2 a1                	mov    $0xa1,%dl$/;"	l
f01041a6	obj/kern/kernel.asm	/^f01041a6:	ee                   	out    %al,(%dx)$/;"	l
f01041a7	obj/kern/kernel.asm	/^f01041a7:	c7 04 24 84 7a 10 f0 	movl   $0xf0107a84,(%esp)$/;"	l
f01041ae	obj/kern/kernel.asm	/^f01041ae:	e8 fc 00 00 00       	call   f01042af <cprintf>$/;"	l
f01041b3	obj/kern/kernel.asm	/^f01041b3:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01041b8	obj/kern/kernel.asm	/^f01041b8:	0f b7 f6             	movzwl %si,%esi$/;"	l
f01041bb	obj/kern/kernel.asm	/^f01041bb:	f7 d6                	not    %esi$/;"	l
f01041bd	obj/kern/kernel.asm	/^f01041bd:	0f a3 de             	bt     %ebx,%esi$/;"	l
f01041c0	obj/kern/kernel.asm	/^f01041c0:	73 10                	jae    f01041d2 <irq_setmask_8259A+0x56>$/;"	l
f01041c2	obj/kern/kernel.asm	/^f01041c2:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01041c6	obj/kern/kernel.asm	/^f01041c6:	c7 04 24 78 7f 10 f0 	movl   $0xf0107f78,(%esp)$/;"	l
f01041cd	obj/kern/kernel.asm	/^f01041cd:	e8 dd 00 00 00       	call   f01042af <cprintf>$/;"	l
f01041d2	obj/kern/kernel.asm	/^f01041d2:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01041d5	obj/kern/kernel.asm	/^f01041d5:	83 fb 10             	cmp    $0x10,%ebx$/;"	l
f01041d8	obj/kern/kernel.asm	/^f01041d8:	75 e3                	jne    f01041bd <irq_setmask_8259A+0x41>$/;"	l
f01041da	obj/kern/kernel.asm	/^f01041da:	c7 04 24 9f 78 10 f0 	movl   $0xf010789f,(%esp)$/;"	l
f01041e1	obj/kern/kernel.asm	/^f01041e1:	e8 c9 00 00 00       	call   f01042af <cprintf>$/;"	l
f01041e6	obj/kern/kernel.asm	/^f01041e6:	83 c4 10             	add    $0x10,%esp$/;"	l
f01041e9	obj/kern/kernel.asm	/^f01041e9:	5b                   	pop    %ebx$/;"	l
f01041ea	obj/kern/kernel.asm	/^f01041ea:	5e                   	pop    %esi$/;"	l
f01041eb	obj/kern/kernel.asm	/^f01041eb:	5d                   	pop    %ebp$/;"	l
f01041ec	obj/kern/kernel.asm	/^f01041ec:	c3                   	ret    $/;"	l
f01041ed	obj/kern/kernel.asm	/^f01041ed <pic_init>:$/;"	l
f01041ed	obj/kern/kernel.asm	/^f01041ed:	55                   	push   %ebp$/;"	l
f01041ee	obj/kern/kernel.asm	/^f01041ee:	89 e5                	mov    %esp,%ebp$/;"	l
f01041f0	obj/kern/kernel.asm	/^f01041f0:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01041f3	obj/kern/kernel.asm	/^f01041f3:	c7 05 48 c2 22 f0 01 	movl   $0x1,0xf022c248$/;"	l
f01041fa	obj/kern/kernel.asm	/^f01041fa:	00 00 00 $/;"	l
f01041fd	obj/kern/kernel.asm	/^f01041fd:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f0104202	obj/kern/kernel.asm	/^f0104202:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0104207	obj/kern/kernel.asm	/^f0104207:	ee                   	out    %al,(%dx)$/;"	l
f0104208	obj/kern/kernel.asm	/^f0104208:	b2 a1                	mov    $0xa1,%dl$/;"	l
f010420a	obj/kern/kernel.asm	/^f010420a:	ee                   	out    %al,(%dx)$/;"	l
f010420b	obj/kern/kernel.asm	/^f010420b:	b2 20                	mov    $0x20,%dl$/;"	l
f010420d	obj/kern/kernel.asm	/^f010420d:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f0104212	obj/kern/kernel.asm	/^f0104212:	ee                   	out    %al,(%dx)$/;"	l
f0104213	obj/kern/kernel.asm	/^f0104213:	b2 21                	mov    $0x21,%dl$/;"	l
f0104215	obj/kern/kernel.asm	/^f0104215:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010421a	obj/kern/kernel.asm	/^f010421a:	ee                   	out    %al,(%dx)$/;"	l
f010421b	obj/kern/kernel.asm	/^f010421b:	b8 04 00 00 00       	mov    $0x4,%eax$/;"	l
f0104220	obj/kern/kernel.asm	/^f0104220:	ee                   	out    %al,(%dx)$/;"	l
f0104221	obj/kern/kernel.asm	/^f0104221:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0104226	obj/kern/kernel.asm	/^f0104226:	ee                   	out    %al,(%dx)$/;"	l
f0104227	obj/kern/kernel.asm	/^f0104227:	b2 a0                	mov    $0xa0,%dl$/;"	l
f0104229	obj/kern/kernel.asm	/^f0104229:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f010422e	obj/kern/kernel.asm	/^f010422e:	ee                   	out    %al,(%dx)$/;"	l
f010422f	obj/kern/kernel.asm	/^f010422f:	b2 a1                	mov    $0xa1,%dl$/;"	l
f0104231	obj/kern/kernel.asm	/^f0104231:	b8 28 00 00 00       	mov    $0x28,%eax$/;"	l
f0104236	obj/kern/kernel.asm	/^f0104236:	ee                   	out    %al,(%dx)$/;"	l
f0104237	obj/kern/kernel.asm	/^f0104237:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f010423c	obj/kern/kernel.asm	/^f010423c:	ee                   	out    %al,(%dx)$/;"	l
f010423d	obj/kern/kernel.asm	/^f010423d:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0104242	obj/kern/kernel.asm	/^f0104242:	ee                   	out    %al,(%dx)$/;"	l
f0104243	obj/kern/kernel.asm	/^f0104243:	b2 20                	mov    $0x20,%dl$/;"	l
f0104245	obj/kern/kernel.asm	/^f0104245:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
f010424a	obj/kern/kernel.asm	/^f010424a:	ee                   	out    %al,(%dx)$/;"	l
f010424b	obj/kern/kernel.asm	/^f010424b:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0104250	obj/kern/kernel.asm	/^f0104250:	ee                   	out    %al,(%dx)$/;"	l
f0104251	obj/kern/kernel.asm	/^f0104251:	b2 a0                	mov    $0xa0,%dl$/;"	l
f0104253	obj/kern/kernel.asm	/^f0104253:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
f0104258	obj/kern/kernel.asm	/^f0104258:	ee                   	out    %al,(%dx)$/;"	l
f0104259	obj/kern/kernel.asm	/^f0104259:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f010425e	obj/kern/kernel.asm	/^f010425e:	ee                   	out    %al,(%dx)$/;"	l
f010425f	obj/kern/kernel.asm	/^f010425f:	0f b7 05 70 13 12 f0 	movzwl 0xf0121370,%eax$/;"	l
f0104266	obj/kern/kernel.asm	/^f0104266:	66 83 f8 ff          	cmp    $0xffffffff,%ax$/;"	l
f010426a	obj/kern/kernel.asm	/^f010426a:	74 0b                	je     f0104277 <pic_init+0x8a>$/;"	l
f010426c	obj/kern/kernel.asm	/^f010426c:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f010426f	obj/kern/kernel.asm	/^f010426f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104272	obj/kern/kernel.asm	/^f0104272:	e8 05 ff ff ff       	call   f010417c <irq_setmask_8259A>$/;"	l
f0104277	obj/kern/kernel.asm	/^f0104277:	c9                   	leave  $/;"	l
f0104278	obj/kern/kernel.asm	/^f0104278:	c3                   	ret    $/;"	l
f0104279	obj/kern/kernel.asm	/^f0104279:	00 00                	add    %al,(%eax)$/;"	l
f010427c	obj/kern/kernel.asm	/^f010427c <vcprintf>:$/;"	l
f010427c	obj/kern/kernel.asm	/^f010427c:	55                   	push   %ebp$/;"	l
f010427d	obj/kern/kernel.asm	/^f010427d:	89 e5                	mov    %esp,%ebp$/;"	l
f010427f	obj/kern/kernel.asm	/^f010427f:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0104282	obj/kern/kernel.asm	/^f0104282:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0104289	obj/kern/kernel.asm	/^f0104289:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010428c	obj/kern/kernel.asm	/^f010428c:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0104290	obj/kern/kernel.asm	/^f0104290:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104293	obj/kern/kernel.asm	/^f0104293:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104297	obj/kern/kernel.asm	/^f0104297:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f010429a	obj/kern/kernel.asm	/^f010429a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010429e	obj/kern/kernel.asm	/^f010429e:	c7 04 24 c9 42 10 f0 	movl   $0xf01042c9,(%esp)$/;"	l
f01042a5	obj/kern/kernel.asm	/^f01042a5:	e8 93 11 00 00       	call   f010543d <vprintfmt>$/;"	l
f01042aa	obj/kern/kernel.asm	/^f01042aa:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01042ad	obj/kern/kernel.asm	/^f01042ad:	c9                   	leave  $/;"	l
f01042ae	obj/kern/kernel.asm	/^f01042ae:	c3                   	ret    $/;"	l
f01042af	obj/kern/kernel.asm	/^f01042af <cprintf>:$/;"	l
f01042af	obj/kern/kernel.asm	/^f01042af:	55                   	push   %ebp$/;"	l
f01042b0	obj/kern/kernel.asm	/^f01042b0:	89 e5                	mov    %esp,%ebp$/;"	l
f01042b2	obj/kern/kernel.asm	/^f01042b2:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01042b5	obj/kern/kernel.asm	/^f01042b5:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
f01042b8	obj/kern/kernel.asm	/^f01042b8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01042bc	obj/kern/kernel.asm	/^f01042bc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01042bf	obj/kern/kernel.asm	/^f01042bf:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01042c2	obj/kern/kernel.asm	/^f01042c2:	e8 b5 ff ff ff       	call   f010427c <vcprintf>$/;"	l
f01042c7	obj/kern/kernel.asm	/^f01042c7:	c9                   	leave  $/;"	l
f01042c8	obj/kern/kernel.asm	/^f01042c8:	c3                   	ret    $/;"	l
f01042c9	obj/kern/kernel.asm	/^f01042c9 <putch>:$/;"	l
f01042c9	obj/kern/kernel.asm	/^f01042c9:	55                   	push   %ebp$/;"	l
f01042ca	obj/kern/kernel.asm	/^f01042ca:	89 e5                	mov    %esp,%ebp$/;"	l
f01042cc	obj/kern/kernel.asm	/^f01042cc:	53                   	push   %ebx$/;"	l
f01042cd	obj/kern/kernel.asm	/^f01042cd:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01042d0	obj/kern/kernel.asm	/^f01042d0:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01042d3	obj/kern/kernel.asm	/^f01042d3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01042d6	obj/kern/kernel.asm	/^f01042d6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01042d9	obj/kern/kernel.asm	/^f01042d9:	e8 ec c3 ff ff       	call   f01006ca <cputchar>$/;"	l
f01042de	obj/kern/kernel.asm	/^f01042de:	83 03 01             	addl   $0x1,(%ebx)$/;"	l
f01042e1	obj/kern/kernel.asm	/^f01042e1:	83 c4 14             	add    $0x14,%esp$/;"	l
f01042e4	obj/kern/kernel.asm	/^f01042e4:	5b                   	pop    %ebx$/;"	l
f01042e5	obj/kern/kernel.asm	/^f01042e5:	5d                   	pop    %ebp$/;"	l
f01042e6	obj/kern/kernel.asm	/^f01042e6:	c3                   	ret    $/;"	l
f01042f0	obj/kern/kernel.asm	/^f01042f0 <trap_init_percpu>:$/;"	l
f01042f0	obj/kern/kernel.asm	/^f01042f0:	55                   	push   %ebp$/;"	l
f01042f1	obj/kern/kernel.asm	/^f01042f1:	89 e5                	mov    %esp,%ebp$/;"	l
f01042f3	obj/kern/kernel.asm	/^f01042f3:	c7 05 64 ca 22 f0 00 	movl   $0xefc00000,0xf022ca64$/;"	l
f01042fa	obj/kern/kernel.asm	/^f01042fa:	00 c0 ef $/;"	l
f01042fd	obj/kern/kernel.asm	/^f01042fd:	66 c7 05 68 ca 22 f0 	movw   $0x10,0xf022ca68$/;"	l
f0104304	obj/kern/kernel.asm	/^f0104304:	10 00 $/;"	l
f0104306	obj/kern/kernel.asm	/^f0104306:	66 c7 05 28 13 12 f0 	movw   $0x68,0xf0121328$/;"	l
f010430d	obj/kern/kernel.asm	/^f010430d:	68 00 $/;"	l
f010430f	obj/kern/kernel.asm	/^f010430f:	b8 60 ca 22 f0       	mov    $0xf022ca60,%eax$/;"	l
f0104314	obj/kern/kernel.asm	/^f0104314:	66 a3 2a 13 12 f0    	mov    %ax,0xf012132a$/;"	l
f010431a	obj/kern/kernel.asm	/^f010431a:	89 c2                	mov    %eax,%edx$/;"	l
f010431c	obj/kern/kernel.asm	/^f010431c:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f010431f	obj/kern/kernel.asm	/^f010431f:	88 15 2c 13 12 f0    	mov    %dl,0xf012132c$/;"	l
f0104325	obj/kern/kernel.asm	/^f0104325:	c6 05 2e 13 12 f0 40 	movb   $0x40,0xf012132e$/;"	l
f010432c	obj/kern/kernel.asm	/^f010432c:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f010432f	obj/kern/kernel.asm	/^f010432f:	a2 2f 13 12 f0       	mov    %al,0xf012132f$/;"	l
f0104334	obj/kern/kernel.asm	/^f0104334:	c6 05 2d 13 12 f0 89 	movb   $0x89,0xf012132d$/;"	l
f010433b	obj/kern/kernel.asm	/^f010433b:	b8 28 00 00 00       	mov    $0x28,%eax$/;"	l
f0104340	obj/kern/kernel.asm	/^f0104340:	0f 00 d8             	ltr    %ax$/;"	l
f0104343	obj/kern/kernel.asm	/^f0104343:	b8 74 13 12 f0       	mov    $0xf0121374,%eax$/;"	l
f0104348	obj/kern/kernel.asm	/^f0104348:	0f 01 18             	lidtl  (%eax)$/;"	l
f010434b	obj/kern/kernel.asm	/^f010434b:	5d                   	pop    %ebp$/;"	l
f010434c	obj/kern/kernel.asm	/^f010434c:	c3                   	ret    $/;"	l
f010434d	obj/kern/kernel.asm	/^f010434d <trap_init>:$/;"	l
f010434d	obj/kern/kernel.asm	/^f010434d:	55                   	push   %ebp$/;"	l
f010434e	obj/kern/kernel.asm	/^f010434e:	89 e5                	mov    %esp,%ebp$/;"	l
f0104350	obj/kern/kernel.asm	/^f0104350:	b8 20 4b 10 f0       	mov    $0xf0104b20,%eax$/;"	l
f0104355	obj/kern/kernel.asm	/^f0104355:	66 a3 60 c2 22 f0    	mov    %ax,0xf022c260$/;"	l
f010435b	obj/kern/kernel.asm	/^f010435b:	66 c7 05 62 c2 22 f0 	movw   $0x8,0xf022c262$/;"	l
f0104362	obj/kern/kernel.asm	/^f0104362:	08 00 $/;"	l
f0104364	obj/kern/kernel.asm	/^f0104364:	c6 05 64 c2 22 f0 00 	movb   $0x0,0xf022c264$/;"	l
f010436b	obj/kern/kernel.asm	/^f010436b:	c6 05 65 c2 22 f0 8e 	movb   $0x8e,0xf022c265$/;"	l
f0104372	obj/kern/kernel.asm	/^f0104372:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104375	obj/kern/kernel.asm	/^f0104375:	66 a3 66 c2 22 f0    	mov    %ax,0xf022c266$/;"	l
f010437b	obj/kern/kernel.asm	/^f010437b:	b8 2a 4b 10 f0       	mov    $0xf0104b2a,%eax$/;"	l
f0104380	obj/kern/kernel.asm	/^f0104380:	66 a3 68 c2 22 f0    	mov    %ax,0xf022c268$/;"	l
f0104386	obj/kern/kernel.asm	/^f0104386:	66 c7 05 6a c2 22 f0 	movw   $0x8,0xf022c26a$/;"	l
f010438d	obj/kern/kernel.asm	/^f010438d:	08 00 $/;"	l
f010438f	obj/kern/kernel.asm	/^f010438f:	c6 05 6c c2 22 f0 00 	movb   $0x0,0xf022c26c$/;"	l
f0104396	obj/kern/kernel.asm	/^f0104396:	c6 05 6d c2 22 f0 8e 	movb   $0x8e,0xf022c26d$/;"	l
f010439d	obj/kern/kernel.asm	/^f010439d:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01043a0	obj/kern/kernel.asm	/^f01043a0:	66 a3 6e c2 22 f0    	mov    %ax,0xf022c26e$/;"	l
f01043a6	obj/kern/kernel.asm	/^f01043a6:	b8 34 4b 10 f0       	mov    $0xf0104b34,%eax$/;"	l
f01043ab	obj/kern/kernel.asm	/^f01043ab:	66 a3 70 c2 22 f0    	mov    %ax,0xf022c270$/;"	l
f01043b1	obj/kern/kernel.asm	/^f01043b1:	66 c7 05 72 c2 22 f0 	movw   $0x8,0xf022c272$/;"	l
f01043b8	obj/kern/kernel.asm	/^f01043b8:	08 00 $/;"	l
f01043ba	obj/kern/kernel.asm	/^f01043ba:	c6 05 74 c2 22 f0 00 	movb   $0x0,0xf022c274$/;"	l
f01043c1	obj/kern/kernel.asm	/^f01043c1:	c6 05 75 c2 22 f0 8e 	movb   $0x8e,0xf022c275$/;"	l
f01043c8	obj/kern/kernel.asm	/^f01043c8:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01043cb	obj/kern/kernel.asm	/^f01043cb:	66 a3 76 c2 22 f0    	mov    %ax,0xf022c276$/;"	l
f01043d1	obj/kern/kernel.asm	/^f01043d1:	b8 3e 4b 10 f0       	mov    $0xf0104b3e,%eax$/;"	l
f01043d6	obj/kern/kernel.asm	/^f01043d6:	66 a3 78 c2 22 f0    	mov    %ax,0xf022c278$/;"	l
f01043dc	obj/kern/kernel.asm	/^f01043dc:	66 c7 05 7a c2 22 f0 	movw   $0x8,0xf022c27a$/;"	l
f01043e3	obj/kern/kernel.asm	/^f01043e3:	08 00 $/;"	l
f01043e5	obj/kern/kernel.asm	/^f01043e5:	c6 05 7c c2 22 f0 00 	movb   $0x0,0xf022c27c$/;"	l
f01043ec	obj/kern/kernel.asm	/^f01043ec:	c6 05 7d c2 22 f0 ee 	movb   $0xee,0xf022c27d$/;"	l
f01043f3	obj/kern/kernel.asm	/^f01043f3:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01043f6	obj/kern/kernel.asm	/^f01043f6:	66 a3 7e c2 22 f0    	mov    %ax,0xf022c27e$/;"	l
f01043fc	obj/kern/kernel.asm	/^f01043fc:	b8 48 4b 10 f0       	mov    $0xf0104b48,%eax$/;"	l
f0104401	obj/kern/kernel.asm	/^f0104401:	66 a3 80 c2 22 f0    	mov    %ax,0xf022c280$/;"	l
f0104407	obj/kern/kernel.asm	/^f0104407:	66 c7 05 82 c2 22 f0 	movw   $0x8,0xf022c282$/;"	l
f010440e	obj/kern/kernel.asm	/^f010440e:	08 00 $/;"	l
f0104410	obj/kern/kernel.asm	/^f0104410:	c6 05 84 c2 22 f0 00 	movb   $0x0,0xf022c284$/;"	l
f0104417	obj/kern/kernel.asm	/^f0104417:	c6 05 85 c2 22 f0 8e 	movb   $0x8e,0xf022c285$/;"	l
f010441e	obj/kern/kernel.asm	/^f010441e:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104421	obj/kern/kernel.asm	/^f0104421:	66 a3 86 c2 22 f0    	mov    %ax,0xf022c286$/;"	l
f0104427	obj/kern/kernel.asm	/^f0104427:	b8 52 4b 10 f0       	mov    $0xf0104b52,%eax$/;"	l
f010442c	obj/kern/kernel.asm	/^f010442c:	66 a3 88 c2 22 f0    	mov    %ax,0xf022c288$/;"	l
f0104432	obj/kern/kernel.asm	/^f0104432:	66 c7 05 8a c2 22 f0 	movw   $0x8,0xf022c28a$/;"	l
f0104439	obj/kern/kernel.asm	/^f0104439:	08 00 $/;"	l
f010443b	obj/kern/kernel.asm	/^f010443b:	c6 05 8c c2 22 f0 00 	movb   $0x0,0xf022c28c$/;"	l
f0104442	obj/kern/kernel.asm	/^f0104442:	c6 05 8d c2 22 f0 8e 	movb   $0x8e,0xf022c28d$/;"	l
f0104449	obj/kern/kernel.asm	/^f0104449:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010444c	obj/kern/kernel.asm	/^f010444c:	66 a3 8e c2 22 f0    	mov    %ax,0xf022c28e$/;"	l
f0104452	obj/kern/kernel.asm	/^f0104452:	b8 5c 4b 10 f0       	mov    $0xf0104b5c,%eax$/;"	l
f0104457	obj/kern/kernel.asm	/^f0104457:	66 a3 90 c2 22 f0    	mov    %ax,0xf022c290$/;"	l
f010445d	obj/kern/kernel.asm	/^f010445d:	66 c7 05 92 c2 22 f0 	movw   $0x8,0xf022c292$/;"	l
f0104464	obj/kern/kernel.asm	/^f0104464:	08 00 $/;"	l
f0104466	obj/kern/kernel.asm	/^f0104466:	c6 05 94 c2 22 f0 00 	movb   $0x0,0xf022c294$/;"	l
f010446d	obj/kern/kernel.asm	/^f010446d:	c6 05 95 c2 22 f0 8e 	movb   $0x8e,0xf022c295$/;"	l
f0104474	obj/kern/kernel.asm	/^f0104474:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104477	obj/kern/kernel.asm	/^f0104477:	66 a3 96 c2 22 f0    	mov    %ax,0xf022c296$/;"	l
f010447d	obj/kern/kernel.asm	/^f010447d:	b8 62 4b 10 f0       	mov    $0xf0104b62,%eax$/;"	l
f0104482	obj/kern/kernel.asm	/^f0104482:	66 a3 98 c2 22 f0    	mov    %ax,0xf022c298$/;"	l
f0104488	obj/kern/kernel.asm	/^f0104488:	66 c7 05 9a c2 22 f0 	movw   $0x8,0xf022c29a$/;"	l
f010448f	obj/kern/kernel.asm	/^f010448f:	08 00 $/;"	l
f0104491	obj/kern/kernel.asm	/^f0104491:	c6 05 9c c2 22 f0 00 	movb   $0x0,0xf022c29c$/;"	l
f0104498	obj/kern/kernel.asm	/^f0104498:	c6 05 9d c2 22 f0 8e 	movb   $0x8e,0xf022c29d$/;"	l
f010449f	obj/kern/kernel.asm	/^f010449f:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01044a2	obj/kern/kernel.asm	/^f01044a2:	66 a3 9e c2 22 f0    	mov    %ax,0xf022c29e$/;"	l
f01044a8	obj/kern/kernel.asm	/^f01044a8:	b8 68 4b 10 f0       	mov    $0xf0104b68,%eax$/;"	l
f01044ad	obj/kern/kernel.asm	/^f01044ad:	66 a3 a0 c2 22 f0    	mov    %ax,0xf022c2a0$/;"	l
f01044b3	obj/kern/kernel.asm	/^f01044b3:	66 c7 05 a2 c2 22 f0 	movw   $0x8,0xf022c2a2$/;"	l
f01044ba	obj/kern/kernel.asm	/^f01044ba:	08 00 $/;"	l
f01044bc	obj/kern/kernel.asm	/^f01044bc:	c6 05 a4 c2 22 f0 00 	movb   $0x0,0xf022c2a4$/;"	l
f01044c3	obj/kern/kernel.asm	/^f01044c3:	c6 05 a5 c2 22 f0 8e 	movb   $0x8e,0xf022c2a5$/;"	l
f01044ca	obj/kern/kernel.asm	/^f01044ca:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01044cd	obj/kern/kernel.asm	/^f01044cd:	66 a3 a6 c2 22 f0    	mov    %ax,0xf022c2a6$/;"	l
f01044d3	obj/kern/kernel.asm	/^f01044d3:	b8 6c 4b 10 f0       	mov    $0xf0104b6c,%eax$/;"	l
f01044d8	obj/kern/kernel.asm	/^f01044d8:	66 a3 b0 c2 22 f0    	mov    %ax,0xf022c2b0$/;"	l
f01044de	obj/kern/kernel.asm	/^f01044de:	66 c7 05 b2 c2 22 f0 	movw   $0x8,0xf022c2b2$/;"	l
f01044e5	obj/kern/kernel.asm	/^f01044e5:	08 00 $/;"	l
f01044e7	obj/kern/kernel.asm	/^f01044e7:	c6 05 b4 c2 22 f0 00 	movb   $0x0,0xf022c2b4$/;"	l
f01044ee	obj/kern/kernel.asm	/^f01044ee:	c6 05 b5 c2 22 f0 8e 	movb   $0x8e,0xf022c2b5$/;"	l
f01044f5	obj/kern/kernel.asm	/^f01044f5:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01044f8	obj/kern/kernel.asm	/^f01044f8:	66 a3 b6 c2 22 f0    	mov    %ax,0xf022c2b6$/;"	l
f01044fe	obj/kern/kernel.asm	/^f01044fe:	b8 70 4b 10 f0       	mov    $0xf0104b70,%eax$/;"	l
f0104503	obj/kern/kernel.asm	/^f0104503:	66 a3 b8 c2 22 f0    	mov    %ax,0xf022c2b8$/;"	l
f0104509	obj/kern/kernel.asm	/^f0104509:	66 c7 05 ba c2 22 f0 	movw   $0x8,0xf022c2ba$/;"	l
f0104510	obj/kern/kernel.asm	/^f0104510:	08 00 $/;"	l
f0104512	obj/kern/kernel.asm	/^f0104512:	c6 05 bc c2 22 f0 00 	movb   $0x0,0xf022c2bc$/;"	l
f0104519	obj/kern/kernel.asm	/^f0104519:	c6 05 bd c2 22 f0 8e 	movb   $0x8e,0xf022c2bd$/;"	l
f0104520	obj/kern/kernel.asm	/^f0104520:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104523	obj/kern/kernel.asm	/^f0104523:	66 a3 be c2 22 f0    	mov    %ax,0xf022c2be$/;"	l
f0104529	obj/kern/kernel.asm	/^f0104529:	b8 74 4b 10 f0       	mov    $0xf0104b74,%eax$/;"	l
f010452e	obj/kern/kernel.asm	/^f010452e:	66 a3 c0 c2 22 f0    	mov    %ax,0xf022c2c0$/;"	l
f0104534	obj/kern/kernel.asm	/^f0104534:	66 c7 05 c2 c2 22 f0 	movw   $0x8,0xf022c2c2$/;"	l
f010453b	obj/kern/kernel.asm	/^f010453b:	08 00 $/;"	l
f010453d	obj/kern/kernel.asm	/^f010453d:	c6 05 c4 c2 22 f0 00 	movb   $0x0,0xf022c2c4$/;"	l
f0104544	obj/kern/kernel.asm	/^f0104544:	c6 05 c5 c2 22 f0 8e 	movb   $0x8e,0xf022c2c5$/;"	l
f010454b	obj/kern/kernel.asm	/^f010454b:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010454e	obj/kern/kernel.asm	/^f010454e:	66 a3 c6 c2 22 f0    	mov    %ax,0xf022c2c6$/;"	l
f0104554	obj/kern/kernel.asm	/^f0104554:	b8 78 4b 10 f0       	mov    $0xf0104b78,%eax$/;"	l
f0104559	obj/kern/kernel.asm	/^f0104559:	66 a3 c8 c2 22 f0    	mov    %ax,0xf022c2c8$/;"	l
f010455f	obj/kern/kernel.asm	/^f010455f:	66 c7 05 ca c2 22 f0 	movw   $0x8,0xf022c2ca$/;"	l
f0104566	obj/kern/kernel.asm	/^f0104566:	08 00 $/;"	l
f0104568	obj/kern/kernel.asm	/^f0104568:	c6 05 cc c2 22 f0 00 	movb   $0x0,0xf022c2cc$/;"	l
f010456f	obj/kern/kernel.asm	/^f010456f:	c6 05 cd c2 22 f0 8e 	movb   $0x8e,0xf022c2cd$/;"	l
f0104576	obj/kern/kernel.asm	/^f0104576:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104579	obj/kern/kernel.asm	/^f0104579:	66 a3 ce c2 22 f0    	mov    %ax,0xf022c2ce$/;"	l
f010457f	obj/kern/kernel.asm	/^f010457f:	b8 7c 4b 10 f0       	mov    $0xf0104b7c,%eax$/;"	l
f0104584	obj/kern/kernel.asm	/^f0104584:	66 a3 d0 c2 22 f0    	mov    %ax,0xf022c2d0$/;"	l
f010458a	obj/kern/kernel.asm	/^f010458a:	66 c7 05 d2 c2 22 f0 	movw   $0x8,0xf022c2d2$/;"	l
f0104591	obj/kern/kernel.asm	/^f0104591:	08 00 $/;"	l
f0104593	obj/kern/kernel.asm	/^f0104593:	c6 05 d4 c2 22 f0 00 	movb   $0x0,0xf022c2d4$/;"	l
f010459a	obj/kern/kernel.asm	/^f010459a:	c6 05 d5 c2 22 f0 8e 	movb   $0x8e,0xf022c2d5$/;"	l
f01045a1	obj/kern/kernel.asm	/^f01045a1:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01045a4	obj/kern/kernel.asm	/^f01045a4:	66 a3 d6 c2 22 f0    	mov    %ax,0xf022c2d6$/;"	l
f01045aa	obj/kern/kernel.asm	/^f01045aa:	b8 80 4b 10 f0       	mov    $0xf0104b80,%eax$/;"	l
f01045af	obj/kern/kernel.asm	/^f01045af:	66 a3 e0 c2 22 f0    	mov    %ax,0xf022c2e0$/;"	l
f01045b5	obj/kern/kernel.asm	/^f01045b5:	66 c7 05 e2 c2 22 f0 	movw   $0x8,0xf022c2e2$/;"	l
f01045bc	obj/kern/kernel.asm	/^f01045bc:	08 00 $/;"	l
f01045be	obj/kern/kernel.asm	/^f01045be:	c6 05 e4 c2 22 f0 00 	movb   $0x0,0xf022c2e4$/;"	l
f01045c5	obj/kern/kernel.asm	/^f01045c5:	c6 05 e5 c2 22 f0 8e 	movb   $0x8e,0xf022c2e5$/;"	l
f01045cc	obj/kern/kernel.asm	/^f01045cc:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01045cf	obj/kern/kernel.asm	/^f01045cf:	66 a3 e6 c2 22 f0    	mov    %ax,0xf022c2e6$/;"	l
f01045d5	obj/kern/kernel.asm	/^f01045d5:	b8 86 4b 10 f0       	mov    $0xf0104b86,%eax$/;"	l
f01045da	obj/kern/kernel.asm	/^f01045da:	66 a3 e8 c2 22 f0    	mov    %ax,0xf022c2e8$/;"	l
f01045e0	obj/kern/kernel.asm	/^f01045e0:	66 c7 05 ea c2 22 f0 	movw   $0x8,0xf022c2ea$/;"	l
f01045e7	obj/kern/kernel.asm	/^f01045e7:	08 00 $/;"	l
f01045e9	obj/kern/kernel.asm	/^f01045e9:	c6 05 ec c2 22 f0 00 	movb   $0x0,0xf022c2ec$/;"	l
f01045f0	obj/kern/kernel.asm	/^f01045f0:	c6 05 ed c2 22 f0 8e 	movb   $0x8e,0xf022c2ed$/;"	l
f01045f7	obj/kern/kernel.asm	/^f01045f7:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01045fa	obj/kern/kernel.asm	/^f01045fa:	66 a3 ee c2 22 f0    	mov    %ax,0xf022c2ee$/;"	l
f0104600	obj/kern/kernel.asm	/^f0104600:	b8 8a 4b 10 f0       	mov    $0xf0104b8a,%eax$/;"	l
f0104605	obj/kern/kernel.asm	/^f0104605:	66 a3 f0 c2 22 f0    	mov    %ax,0xf022c2f0$/;"	l
f010460b	obj/kern/kernel.asm	/^f010460b:	66 c7 05 f2 c2 22 f0 	movw   $0x8,0xf022c2f2$/;"	l
f0104612	obj/kern/kernel.asm	/^f0104612:	08 00 $/;"	l
f0104614	obj/kern/kernel.asm	/^f0104614:	c6 05 f4 c2 22 f0 00 	movb   $0x0,0xf022c2f4$/;"	l
f010461b	obj/kern/kernel.asm	/^f010461b:	c6 05 f5 c2 22 f0 8e 	movb   $0x8e,0xf022c2f5$/;"	l
f0104622	obj/kern/kernel.asm	/^f0104622:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104625	obj/kern/kernel.asm	/^f0104625:	66 a3 f6 c2 22 f0    	mov    %ax,0xf022c2f6$/;"	l
f010462b	obj/kern/kernel.asm	/^f010462b:	b8 90 4b 10 f0       	mov    $0xf0104b90,%eax$/;"	l
f0104630	obj/kern/kernel.asm	/^f0104630:	66 a3 f8 c2 22 f0    	mov    %ax,0xf022c2f8$/;"	l
f0104636	obj/kern/kernel.asm	/^f0104636:	66 c7 05 fa c2 22 f0 	movw   $0x8,0xf022c2fa$/;"	l
f010463d	obj/kern/kernel.asm	/^f010463d:	08 00 $/;"	l
f010463f	obj/kern/kernel.asm	/^f010463f:	c6 05 fc c2 22 f0 00 	movb   $0x0,0xf022c2fc$/;"	l
f0104646	obj/kern/kernel.asm	/^f0104646:	c6 05 fd c2 22 f0 8e 	movb   $0x8e,0xf022c2fd$/;"	l
f010464d	obj/kern/kernel.asm	/^f010464d:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104650	obj/kern/kernel.asm	/^f0104650:	66 a3 fe c2 22 f0    	mov    %ax,0xf022c2fe$/;"	l
f0104656	obj/kern/kernel.asm	/^f0104656:	b8 96 4b 10 f0       	mov    $0xf0104b96,%eax$/;"	l
f010465b	obj/kern/kernel.asm	/^f010465b:	66 a3 e0 c3 22 f0    	mov    %ax,0xf022c3e0$/;"	l
f0104661	obj/kern/kernel.asm	/^f0104661:	66 c7 05 e2 c3 22 f0 	movw   $0x8,0xf022c3e2$/;"	l
f0104668	obj/kern/kernel.asm	/^f0104668:	08 00 $/;"	l
f010466a	obj/kern/kernel.asm	/^f010466a:	c6 05 e4 c3 22 f0 00 	movb   $0x0,0xf022c3e4$/;"	l
f0104671	obj/kern/kernel.asm	/^f0104671:	c6 05 e5 c3 22 f0 ee 	movb   $0xee,0xf022c3e5$/;"	l
f0104678	obj/kern/kernel.asm	/^f0104678:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010467b	obj/kern/kernel.asm	/^f010467b:	66 a3 e6 c3 22 f0    	mov    %ax,0xf022c3e6$/;"	l
f0104681	obj/kern/kernel.asm	/^f0104681:	e8 6a fc ff ff       	call   f01042f0 <trap_init_percpu>$/;"	l
f0104686	obj/kern/kernel.asm	/^f0104686:	5d                   	pop    %ebp$/;"	l
f0104687	obj/kern/kernel.asm	/^f0104687:	c3                   	ret    $/;"	l
f0104688	obj/kern/kernel.asm	/^f0104688 <print_regs>:$/;"	l
f0104688	obj/kern/kernel.asm	/^f0104688:	55                   	push   %ebp$/;"	l
f0104689	obj/kern/kernel.asm	/^f0104689:	89 e5                	mov    %esp,%ebp$/;"	l
f010468b	obj/kern/kernel.asm	/^f010468b:	53                   	push   %ebx$/;"	l
f010468c	obj/kern/kernel.asm	/^f010468c:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010468f	obj/kern/kernel.asm	/^f010468f:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0104692	obj/kern/kernel.asm	/^f0104692:	8b 03                	mov    (%ebx),%eax$/;"	l
f0104694	obj/kern/kernel.asm	/^f0104694:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104698	obj/kern/kernel.asm	/^f0104698:	c7 04 24 98 7a 10 f0 	movl   $0xf0107a98,(%esp)$/;"	l
f010469f	obj/kern/kernel.asm	/^f010469f:	e8 0b fc ff ff       	call   f01042af <cprintf>$/;"	l
f01046a4	obj/kern/kernel.asm	/^f01046a4:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f01046a7	obj/kern/kernel.asm	/^f01046a7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01046ab	obj/kern/kernel.asm	/^f01046ab:	c7 04 24 a7 7a 10 f0 	movl   $0xf0107aa7,(%esp)$/;"	l
f01046b2	obj/kern/kernel.asm	/^f01046b2:	e8 f8 fb ff ff       	call   f01042af <cprintf>$/;"	l
f01046b7	obj/kern/kernel.asm	/^f01046b7:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f01046ba	obj/kern/kernel.asm	/^f01046ba:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01046be	obj/kern/kernel.asm	/^f01046be:	c7 04 24 b6 7a 10 f0 	movl   $0xf0107ab6,(%esp)$/;"	l
f01046c5	obj/kern/kernel.asm	/^f01046c5:	e8 e5 fb ff ff       	call   f01042af <cprintf>$/;"	l
f01046ca	obj/kern/kernel.asm	/^f01046ca:	8b 43 0c             	mov    0xc(%ebx),%eax$/;"	l
f01046cd	obj/kern/kernel.asm	/^f01046cd:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01046d1	obj/kern/kernel.asm	/^f01046d1:	c7 04 24 c5 7a 10 f0 	movl   $0xf0107ac5,(%esp)$/;"	l
f01046d8	obj/kern/kernel.asm	/^f01046d8:	e8 d2 fb ff ff       	call   f01042af <cprintf>$/;"	l
f01046dd	obj/kern/kernel.asm	/^f01046dd:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f01046e0	obj/kern/kernel.asm	/^f01046e0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01046e4	obj/kern/kernel.asm	/^f01046e4:	c7 04 24 d4 7a 10 f0 	movl   $0xf0107ad4,(%esp)$/;"	l
f01046eb	obj/kern/kernel.asm	/^f01046eb:	e8 bf fb ff ff       	call   f01042af <cprintf>$/;"	l
f01046f0	obj/kern/kernel.asm	/^f01046f0:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f01046f3	obj/kern/kernel.asm	/^f01046f3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01046f7	obj/kern/kernel.asm	/^f01046f7:	c7 04 24 e3 7a 10 f0 	movl   $0xf0107ae3,(%esp)$/;"	l
f01046fe	obj/kern/kernel.asm	/^f01046fe:	e8 ac fb ff ff       	call   f01042af <cprintf>$/;"	l
f0104703	obj/kern/kernel.asm	/^f0104703:	8b 43 18             	mov    0x18(%ebx),%eax$/;"	l
f0104706	obj/kern/kernel.asm	/^f0104706:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010470a	obj/kern/kernel.asm	/^f010470a:	c7 04 24 f2 7a 10 f0 	movl   $0xf0107af2,(%esp)$/;"	l
f0104711	obj/kern/kernel.asm	/^f0104711:	e8 99 fb ff ff       	call   f01042af <cprintf>$/;"	l
f0104716	obj/kern/kernel.asm	/^f0104716:	8b 43 1c             	mov    0x1c(%ebx),%eax$/;"	l
f0104719	obj/kern/kernel.asm	/^f0104719:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010471d	obj/kern/kernel.asm	/^f010471d:	c7 04 24 01 7b 10 f0 	movl   $0xf0107b01,(%esp)$/;"	l
f0104724	obj/kern/kernel.asm	/^f0104724:	e8 86 fb ff ff       	call   f01042af <cprintf>$/;"	l
f0104729	obj/kern/kernel.asm	/^f0104729:	83 c4 14             	add    $0x14,%esp$/;"	l
f010472c	obj/kern/kernel.asm	/^f010472c:	5b                   	pop    %ebx$/;"	l
f010472d	obj/kern/kernel.asm	/^f010472d:	5d                   	pop    %ebp$/;"	l
f010472e	obj/kern/kernel.asm	/^f010472e:	c3                   	ret    $/;"	l
f010472f	obj/kern/kernel.asm	/^f010472f <print_trapframe>:$/;"	l
f010472f	obj/kern/kernel.asm	/^f010472f:	55                   	push   %ebp$/;"	l
f0104730	obj/kern/kernel.asm	/^f0104730:	89 e5                	mov    %esp,%ebp$/;"	l
f0104732	obj/kern/kernel.asm	/^f0104732:	56                   	push   %esi$/;"	l
f0104733	obj/kern/kernel.asm	/^f0104733:	53                   	push   %ebx$/;"	l
f0104734	obj/kern/kernel.asm	/^f0104734:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0104737	obj/kern/kernel.asm	/^f0104737:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010473a	obj/kern/kernel.asm	/^f010473a:	e8 6f 1b 00 00       	call   f01062ae <cpunum>$/;"	l
f010473f	obj/kern/kernel.asm	/^f010473f:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104743	obj/kern/kernel.asm	/^f0104743:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0104747	obj/kern/kernel.asm	/^f0104747:	c7 04 24 10 7b 10 f0 	movl   $0xf0107b10,(%esp)$/;"	l
f010474e	obj/kern/kernel.asm	/^f010474e:	e8 5c fb ff ff       	call   f01042af <cprintf>$/;"	l
f0104753	obj/kern/kernel.asm	/^f0104753:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0104756	obj/kern/kernel.asm	/^f0104756:	e8 2d ff ff ff       	call   f0104688 <print_regs>$/;"	l
f010475b	obj/kern/kernel.asm	/^f010475b:	0f b7 43 20          	movzwl 0x20(%ebx),%eax$/;"	l
f010475f	obj/kern/kernel.asm	/^f010475f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104763	obj/kern/kernel.asm	/^f0104763:	c7 04 24 2e 7b 10 f0 	movl   $0xf0107b2e,(%esp)$/;"	l
f010476a	obj/kern/kernel.asm	/^f010476a:	e8 40 fb ff ff       	call   f01042af <cprintf>$/;"	l
f010476f	obj/kern/kernel.asm	/^f010476f:	0f b7 43 24          	movzwl 0x24(%ebx),%eax$/;"	l
f0104773	obj/kern/kernel.asm	/^f0104773:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104777	obj/kern/kernel.asm	/^f0104777:	c7 04 24 41 7b 10 f0 	movl   $0xf0107b41,(%esp)$/;"	l
f010477e	obj/kern/kernel.asm	/^f010477e:	e8 2c fb ff ff       	call   f01042af <cprintf>$/;"	l
f0104783	obj/kern/kernel.asm	/^f0104783:	8b 43 28             	mov    0x28(%ebx),%eax$/;"	l
f0104786	obj/kern/kernel.asm	/^f0104786:	83 f8 13             	cmp    $0x13,%eax$/;"	l
f0104789	obj/kern/kernel.asm	/^f0104789:	77 09                	ja     f0104794 <print_trapframe+0x65>$/;"	l
f010478b	obj/kern/kernel.asm	/^f010478b:	8b 14 85 60 7e 10 f0 	mov    -0xfef81a0(,%eax,4),%edx$/;"	l
f0104792	obj/kern/kernel.asm	/^f0104792:	eb 1c                	jmp    f01047b0 <print_trapframe+0x81>$/;"	l
f0104794	obj/kern/kernel.asm	/^f0104794:	ba 54 7b 10 f0       	mov    $0xf0107b54,%edx$/;"	l
f0104799	obj/kern/kernel.asm	/^f0104799:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f010479c	obj/kern/kernel.asm	/^f010479c:	74 12                	je     f01047b0 <print_trapframe+0x81>$/;"	l
f010479e	obj/kern/kernel.asm	/^f010479e:	8d 48 e0             	lea    -0x20(%eax),%ecx$/;"	l
f01047a1	obj/kern/kernel.asm	/^f01047a1:	ba 6f 7b 10 f0       	mov    $0xf0107b6f,%edx$/;"	l
f01047a6	obj/kern/kernel.asm	/^f01047a6:	83 f9 0f             	cmp    $0xf,%ecx$/;"	l
f01047a9	obj/kern/kernel.asm	/^f01047a9:	76 05                	jbe    f01047b0 <print_trapframe+0x81>$/;"	l
f01047ab	obj/kern/kernel.asm	/^f01047ab:	ba 60 7b 10 f0       	mov    $0xf0107b60,%edx$/;"	l
f01047b0	obj/kern/kernel.asm	/^f01047b0:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01047b4	obj/kern/kernel.asm	/^f01047b4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01047b8	obj/kern/kernel.asm	/^f01047b8:	c7 04 24 82 7b 10 f0 	movl   $0xf0107b82,(%esp)$/;"	l
f01047bf	obj/kern/kernel.asm	/^f01047bf:	e8 eb fa ff ff       	call   f01042af <cprintf>$/;"	l
f01047c4	obj/kern/kernel.asm	/^f01047c4:	3b 1d c8 ca 22 f0    	cmp    0xf022cac8,%ebx$/;"	l
f01047ca	obj/kern/kernel.asm	/^f01047ca:	75 19                	jne    f01047e5 <print_trapframe+0xb6>$/;"	l
f01047cc	obj/kern/kernel.asm	/^f01047cc:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f01047d0	obj/kern/kernel.asm	/^f01047d0:	75 13                	jne    f01047e5 <print_trapframe+0xb6>$/;"	l
f01047d2	obj/kern/kernel.asm	/^f01047d2:	0f 20 d0             	mov    %cr2,%eax$/;"	l
f01047d5	obj/kern/kernel.asm	/^f01047d5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01047d9	obj/kern/kernel.asm	/^f01047d9:	c7 04 24 94 7b 10 f0 	movl   $0xf0107b94,(%esp)$/;"	l
f01047e0	obj/kern/kernel.asm	/^f01047e0:	e8 ca fa ff ff       	call   f01042af <cprintf>$/;"	l
f01047e5	obj/kern/kernel.asm	/^f01047e5:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f01047e8	obj/kern/kernel.asm	/^f01047e8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01047ec	obj/kern/kernel.asm	/^f01047ec:	c7 04 24 a3 7b 10 f0 	movl   $0xf0107ba3,(%esp)$/;"	l
f01047f3	obj/kern/kernel.asm	/^f01047f3:	e8 b7 fa ff ff       	call   f01042af <cprintf>$/;"	l
f01047f8	obj/kern/kernel.asm	/^f01047f8:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f01047fc	obj/kern/kernel.asm	/^f01047fc:	75 47                	jne    f0104845 <print_trapframe+0x116>$/;"	l
f01047fe	obj/kern/kernel.asm	/^f01047fe:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f0104801	obj/kern/kernel.asm	/^f0104801:	be bd 7b 10 f0       	mov    $0xf0107bbd,%esi$/;"	l
f0104806	obj/kern/kernel.asm	/^f0104806:	a8 01                	test   $0x1,%al$/;"	l
f0104808	obj/kern/kernel.asm	/^f0104808:	75 05                	jne    f010480f <print_trapframe+0xe0>$/;"	l
f010480a	obj/kern/kernel.asm	/^f010480a:	be b1 7b 10 f0       	mov    $0xf0107bb1,%esi$/;"	l
f010480f	obj/kern/kernel.asm	/^f010480f:	b9 cd 7b 10 f0       	mov    $0xf0107bcd,%ecx$/;"	l
f0104814	obj/kern/kernel.asm	/^f0104814:	a8 02                	test   $0x2,%al$/;"	l
f0104816	obj/kern/kernel.asm	/^f0104816:	75 05                	jne    f010481d <print_trapframe+0xee>$/;"	l
f0104818	obj/kern/kernel.asm	/^f0104818:	b9 c8 7b 10 f0       	mov    $0xf0107bc8,%ecx$/;"	l
f010481d	obj/kern/kernel.asm	/^f010481d:	ba d3 7b 10 f0       	mov    $0xf0107bd3,%edx$/;"	l
f0104822	obj/kern/kernel.asm	/^f0104822:	a8 04                	test   $0x4,%al$/;"	l
f0104824	obj/kern/kernel.asm	/^f0104824:	75 05                	jne    f010482b <print_trapframe+0xfc>$/;"	l
f0104826	obj/kern/kernel.asm	/^f0104826:	ba cc 7c 10 f0       	mov    $0xf0107ccc,%edx$/;"	l
f010482b	obj/kern/kernel.asm	/^f010482b:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f010482f	obj/kern/kernel.asm	/^f010482f:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0104833	obj/kern/kernel.asm	/^f0104833:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0104837	obj/kern/kernel.asm	/^f0104837:	c7 04 24 d8 7b 10 f0 	movl   $0xf0107bd8,(%esp)$/;"	l
f010483e	obj/kern/kernel.asm	/^f010483e:	e8 6c fa ff ff       	call   f01042af <cprintf>$/;"	l
f0104843	obj/kern/kernel.asm	/^f0104843:	eb 0c                	jmp    f0104851 <print_trapframe+0x122>$/;"	l
f0104845	obj/kern/kernel.asm	/^f0104845:	c7 04 24 9f 78 10 f0 	movl   $0xf010789f,(%esp)$/;"	l
f010484c	obj/kern/kernel.asm	/^f010484c:	e8 5e fa ff ff       	call   f01042af <cprintf>$/;"	l
f0104851	obj/kern/kernel.asm	/^f0104851:	8b 43 30             	mov    0x30(%ebx),%eax$/;"	l
f0104854	obj/kern/kernel.asm	/^f0104854:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104858	obj/kern/kernel.asm	/^f0104858:	c7 04 24 e7 7b 10 f0 	movl   $0xf0107be7,(%esp)$/;"	l
f010485f	obj/kern/kernel.asm	/^f010485f:	e8 4b fa ff ff       	call   f01042af <cprintf>$/;"	l
f0104864	obj/kern/kernel.asm	/^f0104864:	0f b7 43 34          	movzwl 0x34(%ebx),%eax$/;"	l
f0104868	obj/kern/kernel.asm	/^f0104868:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010486c	obj/kern/kernel.asm	/^f010486c:	c7 04 24 f6 7b 10 f0 	movl   $0xf0107bf6,(%esp)$/;"	l
f0104873	obj/kern/kernel.asm	/^f0104873:	e8 37 fa ff ff       	call   f01042af <cprintf>$/;"	l
f0104878	obj/kern/kernel.asm	/^f0104878:	8b 43 38             	mov    0x38(%ebx),%eax$/;"	l
f010487b	obj/kern/kernel.asm	/^f010487b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010487f	obj/kern/kernel.asm	/^f010487f:	c7 04 24 09 7c 10 f0 	movl   $0xf0107c09,(%esp)$/;"	l
f0104886	obj/kern/kernel.asm	/^f0104886:	e8 24 fa ff ff       	call   f01042af <cprintf>$/;"	l
f010488b	obj/kern/kernel.asm	/^f010488b:	f6 43 34 03          	testb  $0x3,0x34(%ebx)$/;"	l
f010488f	obj/kern/kernel.asm	/^f010488f:	74 27                	je     f01048b8 <print_trapframe+0x189>$/;"	l
f0104891	obj/kern/kernel.asm	/^f0104891:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f0104894	obj/kern/kernel.asm	/^f0104894:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104898	obj/kern/kernel.asm	/^f0104898:	c7 04 24 18 7c 10 f0 	movl   $0xf0107c18,(%esp)$/;"	l
f010489f	obj/kern/kernel.asm	/^f010489f:	e8 0b fa ff ff       	call   f01042af <cprintf>$/;"	l
f01048a4	obj/kern/kernel.asm	/^f01048a4:	0f b7 43 40          	movzwl 0x40(%ebx),%eax$/;"	l
f01048a8	obj/kern/kernel.asm	/^f01048a8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01048ac	obj/kern/kernel.asm	/^f01048ac:	c7 04 24 27 7c 10 f0 	movl   $0xf0107c27,(%esp)$/;"	l
f01048b3	obj/kern/kernel.asm	/^f01048b3:	e8 f7 f9 ff ff       	call   f01042af <cprintf>$/;"	l
f01048b8	obj/kern/kernel.asm	/^f01048b8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01048bb	obj/kern/kernel.asm	/^f01048bb:	5b                   	pop    %ebx$/;"	l
f01048bc	obj/kern/kernel.asm	/^f01048bc:	5e                   	pop    %esi$/;"	l
f01048bd	obj/kern/kernel.asm	/^f01048bd:	5d                   	pop    %ebp$/;"	l
f01048be	obj/kern/kernel.asm	/^f01048be:	c3                   	ret    $/;"	l
f01048bf	obj/kern/kernel.asm	/^f01048bf <page_fault_handler>:$/;"	l
f01048bf	obj/kern/kernel.asm	/^f01048bf:	55                   	push   %ebp$/;"	l
f01048c0	obj/kern/kernel.asm	/^f01048c0:	89 e5                	mov    %esp,%ebp$/;"	l
f01048c2	obj/kern/kernel.asm	/^f01048c2:	83 ec 28             	sub    $0x28,%esp$/;"	l
f01048c5	obj/kern/kernel.asm	/^f01048c5:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f01048c8	obj/kern/kernel.asm	/^f01048c8:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f01048cb	obj/kern/kernel.asm	/^f01048cb:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f01048ce	obj/kern/kernel.asm	/^f01048ce:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01048d1	obj/kern/kernel.asm	/^f01048d1:	c7 04 24 18 7e 10 f0 	movl   $0xf0107e18,(%esp)$/;"	l
f01048d8	obj/kern/kernel.asm	/^f01048d8:	e8 d2 f9 ff ff       	call   f01042af <cprintf>$/;"	l
f01048dd	obj/kern/kernel.asm	/^f01048dd:	0f 20 d3             	mov    %cr2,%ebx$/;"	l
f01048e0	obj/kern/kernel.asm	/^f01048e0:	f6 46 34 03          	testb  $0x3,0x34(%esi)$/;"	l
f01048e4	obj/kern/kernel.asm	/^f01048e4:	75 1c                	jne    f0104902 <page_fault_handler+0x43>$/;"	l
f01048e6	obj/kern/kernel.asm	/^f01048e6:	c7 44 24 08 3a 7c 10 	movl   $0xf0107c3a,0x8(%esp)$/;"	l
f01048ed	obj/kern/kernel.asm	/^f01048ed:	f0 $/;"	l
f01048ee	obj/kern/kernel.asm	/^f01048ee:	c7 44 24 04 3a 01 00 	movl   $0x13a,0x4(%esp)$/;"	l
f01048f5	obj/kern/kernel.asm	/^f01048f5:	00 $/;"	l
f01048f6	obj/kern/kernel.asm	/^f01048f6:	c7 04 24 55 7c 10 f0 	movl   $0xf0107c55,(%esp)$/;"	l
f01048fd	obj/kern/kernel.asm	/^f01048fd:	e8 83 b7 ff ff       	call   f0100085 <_panic>$/;"	l
f0104902	obj/kern/kernel.asm	/^f0104902:	8b 7e 30             	mov    0x30(%esi),%edi$/;"	l
f0104905	obj/kern/kernel.asm	/^f0104905:	e8 a4 19 00 00       	call   f01062ae <cpunum>$/;"	l
f010490a	obj/kern/kernel.asm	/^f010490a:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f010490e	obj/kern/kernel.asm	/^f010490e:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0104912	obj/kern/kernel.asm	/^f0104912:	bb 20 d0 22 f0       	mov    $0xf022d020,%ebx$/;"	l
f0104917	obj/kern/kernel.asm	/^f0104917:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010491a	obj/kern/kernel.asm	/^f010491a:	8b 44 18 08          	mov    0x8(%eax,%ebx,1),%eax$/;"	l
f010491e	obj/kern/kernel.asm	/^f010491e:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0104921	obj/kern/kernel.asm	/^f0104921:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104925	obj/kern/kernel.asm	/^f0104925:	c7 04 24 38 7e 10 f0 	movl   $0xf0107e38,(%esp)$/;"	l
f010492c	obj/kern/kernel.asm	/^f010492c:	e8 7e f9 ff ff       	call   f01042af <cprintf>$/;"	l
f0104931	obj/kern/kernel.asm	/^f0104931:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104934	obj/kern/kernel.asm	/^f0104934:	e8 f6 fd ff ff       	call   f010472f <print_trapframe>$/;"	l
f0104939	obj/kern/kernel.asm	/^f0104939:	e8 70 19 00 00       	call   f01062ae <cpunum>$/;"	l
f010493e	obj/kern/kernel.asm	/^f010493e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104941	obj/kern/kernel.asm	/^f0104941:	8b 44 18 08          	mov    0x8(%eax,%ebx,1),%eax$/;"	l
f0104945	obj/kern/kernel.asm	/^f0104945:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104948	obj/kern/kernel.asm	/^f0104948:	e8 82 f3 ff ff       	call   f0103ccf <env_destroy>$/;"	l
f010494d	obj/kern/kernel.asm	/^f010494d:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f0104950	obj/kern/kernel.asm	/^f0104950:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f0104953	obj/kern/kernel.asm	/^f0104953:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f0104956	obj/kern/kernel.asm	/^f0104956:	89 ec                	mov    %ebp,%esp$/;"	l
f0104958	obj/kern/kernel.asm	/^f0104958:	5d                   	pop    %ebp$/;"	l
f0104959	obj/kern/kernel.asm	/^f0104959:	c3                   	ret    $/;"	l
f010495a	obj/kern/kernel.asm	/^f010495a <trap>:$/;"	l
f010495a	obj/kern/kernel.asm	/^f010495a:	55                   	push   %ebp$/;"	l
f010495b	obj/kern/kernel.asm	/^f010495b:	89 e5                	mov    %esp,%ebp$/;"	l
f010495d	obj/kern/kernel.asm	/^f010495d:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0104960	obj/kern/kernel.asm	/^f0104960:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f0104963	obj/kern/kernel.asm	/^f0104963:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f0104966	obj/kern/kernel.asm	/^f0104966:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f0104969	obj/kern/kernel.asm	/^f0104969:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f010496c	obj/kern/kernel.asm	/^f010496c:	fc                   	cld    $/;"	l
f010496d	obj/kern/kernel.asm	/^f010496d:	83 3d e0 ce 22 f0 00 	cmpl   $0x0,0xf022cee0$/;"	l
f0104974	obj/kern/kernel.asm	/^f0104974:	74 01                	je     f0104977 <trap+0x1d>$/;"	l
f0104976	obj/kern/kernel.asm	/^f0104976:	f4                   	hlt    $/;"	l
f0104977	obj/kern/kernel.asm	/^f0104977:	9c                   	pushf  $/;"	l
f0104978	obj/kern/kernel.asm	/^f0104978:	58                   	pop    %eax$/;"	l
f0104979	obj/kern/kernel.asm	/^f0104979:	f6 c4 02             	test   $0x2,%ah$/;"	l
f010497c	obj/kern/kernel.asm	/^f010497c:	74 24                	je     f01049a2 <trap+0x48>$/;"	l
f010497e	obj/kern/kernel.asm	/^f010497e:	c7 44 24 0c 61 7c 10 	movl   $0xf0107c61,0xc(%esp)$/;"	l
f0104985	obj/kern/kernel.asm	/^f0104985:	f0 $/;"	l
f0104986	obj/kern/kernel.asm	/^f0104986:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f010498d	obj/kern/kernel.asm	/^f010498d:	f0 $/;"	l
f010498e	obj/kern/kernel.asm	/^f010498e:	c7 44 24 04 04 01 00 	movl   $0x104,0x4(%esp)$/;"	l
f0104995	obj/kern/kernel.asm	/^f0104995:	00 $/;"	l
f0104996	obj/kern/kernel.asm	/^f0104996:	c7 04 24 55 7c 10 f0 	movl   $0xf0107c55,(%esp)$/;"	l
f010499d	obj/kern/kernel.asm	/^f010499d:	e8 e3 b6 ff ff       	call   f0100085 <_panic>$/;"	l
f01049a2	obj/kern/kernel.asm	/^f01049a2:	0f b7 46 34          	movzwl 0x34(%esi),%eax$/;"	l
f01049a6	obj/kern/kernel.asm	/^f01049a6:	83 e0 03             	and    $0x3,%eax$/;"	l
f01049a9	obj/kern/kernel.asm	/^f01049a9:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f01049ac	obj/kern/kernel.asm	/^f01049ac:	0f 85 9d 00 00 00    	jne    f0104a4f <trap+0xf5>$/;"	l
f01049b2	obj/kern/kernel.asm	/^f01049b2:	e8 f7 18 00 00       	call   f01062ae <cpunum>$/;"	l
f01049b7	obj/kern/kernel.asm	/^f01049b7:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01049ba	obj/kern/kernel.asm	/^f01049ba:	83 b8 28 d0 22 f0 00 	cmpl   $0x0,-0xfdd2fd8(%eax)$/;"	l
f01049c1	obj/kern/kernel.asm	/^f01049c1:	75 24                	jne    f01049e7 <trap+0x8d>$/;"	l
f01049c3	obj/kern/kernel.asm	/^f01049c3:	c7 44 24 0c 7a 7c 10 	movl   $0xf0107c7a,0xc(%esp)$/;"	l
f01049ca	obj/kern/kernel.asm	/^f01049ca:	f0 $/;"	l
f01049cb	obj/kern/kernel.asm	/^f01049cb:	c7 44 24 08 a7 76 10 	movl   $0xf01076a7,0x8(%esp)$/;"	l
f01049d2	obj/kern/kernel.asm	/^f01049d2:	f0 $/;"	l
f01049d3	obj/kern/kernel.asm	/^f01049d3:	c7 44 24 04 0b 01 00 	movl   $0x10b,0x4(%esp)$/;"	l
f01049da	obj/kern/kernel.asm	/^f01049da:	00 $/;"	l
f01049db	obj/kern/kernel.asm	/^f01049db:	c7 04 24 55 7c 10 f0 	movl   $0xf0107c55,(%esp)$/;"	l
f01049e2	obj/kern/kernel.asm	/^f01049e2:	e8 9e b6 ff ff       	call   f0100085 <_panic>$/;"	l
f01049e7	obj/kern/kernel.asm	/^f01049e7:	e8 c2 18 00 00       	call   f01062ae <cpunum>$/;"	l
f01049ec	obj/kern/kernel.asm	/^f01049ec:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01049ef	obj/kern/kernel.asm	/^f01049ef:	8b 80 28 d0 22 f0    	mov    -0xfdd2fd8(%eax),%eax$/;"	l
f01049f5	obj/kern/kernel.asm	/^f01049f5:	83 78 54 01          	cmpl   $0x1,0x54(%eax)$/;"	l
f01049f9	obj/kern/kernel.asm	/^f01049f9:	75 2e                	jne    f0104a29 <trap+0xcf>$/;"	l
f01049fb	obj/kern/kernel.asm	/^f01049fb:	e8 ae 18 00 00       	call   f01062ae <cpunum>$/;"	l
f0104a00	obj/kern/kernel.asm	/^f0104a00:	be 20 d0 22 f0       	mov    $0xf022d020,%esi$/;"	l
f0104a05	obj/kern/kernel.asm	/^f0104a05:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104a08	obj/kern/kernel.asm	/^f0104a08:	8b 44 30 08          	mov    0x8(%eax,%esi,1),%eax$/;"	l
f0104a0c	obj/kern/kernel.asm	/^f0104a0c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104a0f	obj/kern/kernel.asm	/^f0104a0f:	e8 b2 f0 ff ff       	call   f0103ac6 <env_free>$/;"	l
f0104a14	obj/kern/kernel.asm	/^f0104a14:	e8 95 18 00 00       	call   f01062ae <cpunum>$/;"	l
f0104a19	obj/kern/kernel.asm	/^f0104a19:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104a1c	obj/kern/kernel.asm	/^f0104a1c:	c7 44 30 08 00 00 00 	movl   $0x0,0x8(%eax,%esi,1)$/;"	l
f0104a23	obj/kern/kernel.asm	/^f0104a23:	00 $/;"	l
f0104a24	obj/kern/kernel.asm	/^f0104a24:	e8 c7 01 00 00       	call   f0104bf0 <sched_yield>$/;"	l
f0104a29	obj/kern/kernel.asm	/^f0104a29:	e8 80 18 00 00       	call   f01062ae <cpunum>$/;"	l
f0104a2e	obj/kern/kernel.asm	/^f0104a2e:	bb 20 d0 22 f0       	mov    $0xf022d020,%ebx$/;"	l
f0104a33	obj/kern/kernel.asm	/^f0104a33:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104a36	obj/kern/kernel.asm	/^f0104a36:	8b 44 18 08          	mov    0x8(%eax,%ebx,1),%eax$/;"	l
f0104a3a	obj/kern/kernel.asm	/^f0104a3a:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f0104a3f	obj/kern/kernel.asm	/^f0104a3f:	89 c7                	mov    %eax,%edi$/;"	l
f0104a41	obj/kern/kernel.asm	/^f0104a41:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0104a43	obj/kern/kernel.asm	/^f0104a43:	e8 66 18 00 00       	call   f01062ae <cpunum>$/;"	l
f0104a48	obj/kern/kernel.asm	/^f0104a48:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104a4b	obj/kern/kernel.asm	/^f0104a4b:	8b 74 18 08          	mov    0x8(%eax,%ebx,1),%esi$/;"	l
f0104a4f	obj/kern/kernel.asm	/^f0104a4f:	89 35 c8 ca 22 f0    	mov    %esi,0xf022cac8$/;"	l
f0104a55	obj/kern/kernel.asm	/^f0104a55:	83 7e 28 27          	cmpl   $0x27,0x28(%esi)$/;"	l
f0104a59	obj/kern/kernel.asm	/^f0104a59:	75 16                	jne    f0104a71 <trap+0x117>$/;"	l
f0104a5b	obj/kern/kernel.asm	/^f0104a5b:	c7 04 24 81 7c 10 f0 	movl   $0xf0107c81,(%esp)$/;"	l
f0104a62	obj/kern/kernel.asm	/^f0104a62:	e8 48 f8 ff ff       	call   f01042af <cprintf>$/;"	l
f0104a67	obj/kern/kernel.asm	/^f0104a67:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104a6a	obj/kern/kernel.asm	/^f0104a6a:	e8 c0 fc ff ff       	call   f010472f <print_trapframe>$/;"	l
f0104a6f	obj/kern/kernel.asm	/^f0104a6f:	eb 6d                	jmp    f0104ade <trap+0x184>$/;"	l
f0104a71	obj/kern/kernel.asm	/^f0104a71:	c7 04 24 9e 7c 10 f0 	movl   $0xf0107c9e,(%esp)$/;"	l
f0104a78	obj/kern/kernel.asm	/^f0104a78:	e8 32 f8 ff ff       	call   f01042af <cprintf>$/;"	l
f0104a7d	obj/kern/kernel.asm	/^f0104a7d:	8b 46 28             	mov    0x28(%esi),%eax$/;"	l
f0104a80	obj/kern/kernel.asm	/^f0104a80:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
f0104a83	obj/kern/kernel.asm	/^f0104a83:	75 0a                	jne    f0104a8f <trap+0x135>$/;"	l
f0104a85	obj/kern/kernel.asm	/^f0104a85:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104a88	obj/kern/kernel.asm	/^f0104a88:	e8 32 fe ff ff       	call   f01048bf <page_fault_handler>$/;"	l
f0104a8d	obj/kern/kernel.asm	/^f0104a8d:	eb 0e                	jmp    f0104a9d <trap+0x143>$/;"	l
f0104a8f	obj/kern/kernel.asm	/^f0104a8f:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0104a92	obj/kern/kernel.asm	/^f0104a92:	75 09                	jne    f0104a9d <trap+0x143>$/;"	l
f0104a94	obj/kern/kernel.asm	/^f0104a94:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104a97	obj/kern/kernel.asm	/^f0104a97:	90                   	nop$/;"	l
f0104a98	obj/kern/kernel.asm	/^f0104a98:	e8 e5 c0 ff ff       	call   f0100b82 <monitor>$/;"	l
f0104a9d	obj/kern/kernel.asm	/^f0104a9d:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104aa0	obj/kern/kernel.asm	/^f0104aa0:	e8 8a fc ff ff       	call   f010472f <print_trapframe>$/;"	l
f0104aa5	obj/kern/kernel.asm	/^f0104aa5:	66 83 7e 34 08       	cmpw   $0x8,0x34(%esi)$/;"	l
f0104aaa	obj/kern/kernel.asm	/^f0104aaa:	75 1c                	jne    f0104ac8 <trap+0x16e>$/;"	l
f0104aac	obj/kern/kernel.asm	/^f0104aac:	c7 44 24 08 ba 7c 10 	movl   $0xf0107cba,0x8(%esp)$/;"	l
f0104ab3	obj/kern/kernel.asm	/^f0104ab3:	f0 $/;"	l
f0104ab4	obj/kern/kernel.asm	/^f0104ab4:	c7 44 24 04 ee 00 00 	movl   $0xee,0x4(%esp)$/;"	l
f0104abb	obj/kern/kernel.asm	/^f0104abb:	00 $/;"	l
f0104abc	obj/kern/kernel.asm	/^f0104abc:	c7 04 24 55 7c 10 f0 	movl   $0xf0107c55,(%esp)$/;"	l
f0104ac3	obj/kern/kernel.asm	/^f0104ac3:	e8 bd b5 ff ff       	call   f0100085 <_panic>$/;"	l
f0104ac8	obj/kern/kernel.asm	/^f0104ac8:	e8 e1 17 00 00       	call   f01062ae <cpunum>$/;"	l
f0104acd	obj/kern/kernel.asm	/^f0104acd:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104ad0	obj/kern/kernel.asm	/^f0104ad0:	8b 80 28 d0 22 f0    	mov    -0xfdd2fd8(%eax),%eax$/;"	l
f0104ad6	obj/kern/kernel.asm	/^f0104ad6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104ad9	obj/kern/kernel.asm	/^f0104ad9:	e8 f1 f1 ff ff       	call   f0103ccf <env_destroy>$/;"	l
f0104ade	obj/kern/kernel.asm	/^f0104ade:	e8 cb 17 00 00       	call   f01062ae <cpunum>$/;"	l
f0104ae3	obj/kern/kernel.asm	/^f0104ae3:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104ae6	obj/kern/kernel.asm	/^f0104ae6:	83 b8 28 d0 22 f0 00 	cmpl   $0x0,-0xfdd2fd8(%eax)$/;"	l
f0104aed	obj/kern/kernel.asm	/^f0104aed:	74 2a                	je     f0104b19 <trap+0x1bf>$/;"	l
f0104aef	obj/kern/kernel.asm	/^f0104aef:	e8 ba 17 00 00       	call   f01062ae <cpunum>$/;"	l
f0104af4	obj/kern/kernel.asm	/^f0104af4:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104af7	obj/kern/kernel.asm	/^f0104af7:	8b 80 28 d0 22 f0    	mov    -0xfdd2fd8(%eax),%eax$/;"	l
f0104afd	obj/kern/kernel.asm	/^f0104afd:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0104b01	obj/kern/kernel.asm	/^f0104b01:	75 16                	jne    f0104b19 <trap+0x1bf>$/;"	l
f0104b03	obj/kern/kernel.asm	/^f0104b03:	e8 a6 17 00 00       	call   f01062ae <cpunum>$/;"	l
f0104b08	obj/kern/kernel.asm	/^f0104b08:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104b0b	obj/kern/kernel.asm	/^f0104b0b:	8b 80 28 d0 22 f0    	mov    -0xfdd2fd8(%eax),%eax$/;"	l
f0104b11	obj/kern/kernel.asm	/^f0104b11:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104b14	obj/kern/kernel.asm	/^f0104b14:	e8 c9 ee ff ff       	call   f01039e2 <env_run>$/;"	l
f0104b19	obj/kern/kernel.asm	/^f0104b19:	e8 d2 00 00 00       	call   f0104bf0 <sched_yield>$/;"	l
f0104b20	obj/kern/kernel.asm	/^f0104b20 <handler_divide>:$/;"	l
f0104b20	obj/kern/kernel.asm	/^f0104b20:	6a 00                	push   $0x0$/;"	l
f0104b22	obj/kern/kernel.asm	/^f0104b22:	6a 00                	push   $0x0$/;"	l
f0104b24	obj/kern/kernel.asm	/^f0104b24:	e9 b3 00 00 00       	jmp    f0104bdc <_alltraps>$/;"	l
f0104b29	obj/kern/kernel.asm	/^f0104b29:	90                   	nop$/;"	l
f0104b2a	obj/kern/kernel.asm	/^f0104b2a <handler_debug>:$/;"	l
f0104b2a	obj/kern/kernel.asm	/^f0104b2a:	6a 00                	push   $0x0$/;"	l
f0104b2c	obj/kern/kernel.asm	/^f0104b2c:	6a 01                	push   $0x1$/;"	l
f0104b2e	obj/kern/kernel.asm	/^f0104b2e:	e9 a9 00 00 00       	jmp    f0104bdc <_alltraps>$/;"	l
f0104b33	obj/kern/kernel.asm	/^f0104b33:	90                   	nop$/;"	l
f0104b34	obj/kern/kernel.asm	/^f0104b34 <handler_nmi>:$/;"	l
f0104b34	obj/kern/kernel.asm	/^f0104b34:	6a 00                	push   $0x0$/;"	l
f0104b36	obj/kern/kernel.asm	/^f0104b36:	6a 02                	push   $0x2$/;"	l
f0104b38	obj/kern/kernel.asm	/^f0104b38:	e9 9f 00 00 00       	jmp    f0104bdc <_alltraps>$/;"	l
f0104b3d	obj/kern/kernel.asm	/^f0104b3d:	90                   	nop$/;"	l
f0104b3e	obj/kern/kernel.asm	/^f0104b3e <handler_brkpt>:$/;"	l
f0104b3e	obj/kern/kernel.asm	/^f0104b3e:	6a 00                	push   $0x0$/;"	l
f0104b40	obj/kern/kernel.asm	/^f0104b40:	6a 03                	push   $0x3$/;"	l
f0104b42	obj/kern/kernel.asm	/^f0104b42:	e9 95 00 00 00       	jmp    f0104bdc <_alltraps>$/;"	l
f0104b47	obj/kern/kernel.asm	/^f0104b47:	90                   	nop$/;"	l
f0104b48	obj/kern/kernel.asm	/^f0104b48 <handler_oflow>:$/;"	l
f0104b48	obj/kern/kernel.asm	/^f0104b48:	6a 00                	push   $0x0$/;"	l
f0104b4a	obj/kern/kernel.asm	/^f0104b4a:	6a 04                	push   $0x4$/;"	l
f0104b4c	obj/kern/kernel.asm	/^f0104b4c:	e9 8b 00 00 00       	jmp    f0104bdc <_alltraps>$/;"	l
f0104b51	obj/kern/kernel.asm	/^f0104b51:	90                   	nop$/;"	l
f0104b52	obj/kern/kernel.asm	/^f0104b52 <handler_bound>:$/;"	l
f0104b52	obj/kern/kernel.asm	/^f0104b52:	6a 00                	push   $0x0$/;"	l
f0104b54	obj/kern/kernel.asm	/^f0104b54:	6a 05                	push   $0x5$/;"	l
f0104b56	obj/kern/kernel.asm	/^f0104b56:	e9 81 00 00 00       	jmp    f0104bdc <_alltraps>$/;"	l
f0104b5b	obj/kern/kernel.asm	/^f0104b5b:	90                   	nop$/;"	l
f0104b5c	obj/kern/kernel.asm	/^f0104b5c <handler_illop>:$/;"	l
f0104b5c	obj/kern/kernel.asm	/^f0104b5c:	6a 00                	push   $0x0$/;"	l
f0104b5e	obj/kern/kernel.asm	/^f0104b5e:	6a 06                	push   $0x6$/;"	l
f0104b60	obj/kern/kernel.asm	/^f0104b60:	eb 7a                	jmp    f0104bdc <_alltraps>$/;"	l
f0104b62	obj/kern/kernel.asm	/^f0104b62 <handler_device>:$/;"	l
f0104b62	obj/kern/kernel.asm	/^f0104b62:	6a 00                	push   $0x0$/;"	l
f0104b64	obj/kern/kernel.asm	/^f0104b64:	6a 07                	push   $0x7$/;"	l
f0104b66	obj/kern/kernel.asm	/^f0104b66:	eb 74                	jmp    f0104bdc <_alltraps>$/;"	l
f0104b68	obj/kern/kernel.asm	/^f0104b68 <handler_dblflt>:$/;"	l
f0104b68	obj/kern/kernel.asm	/^f0104b68:	6a 08                	push   $0x8$/;"	l
f0104b6a	obj/kern/kernel.asm	/^f0104b6a:	eb 70                	jmp    f0104bdc <_alltraps>$/;"	l
f0104b6c	obj/kern/kernel.asm	/^f0104b6c <handler_tss>:$/;"	l
f0104b6c	obj/kern/kernel.asm	/^f0104b6c:	6a 0a                	push   $0xa$/;"	l
f0104b6e	obj/kern/kernel.asm	/^f0104b6e:	eb 6c                	jmp    f0104bdc <_alltraps>$/;"	l
f0104b70	obj/kern/kernel.asm	/^f0104b70 <handler_segnp>:$/;"	l
f0104b70	obj/kern/kernel.asm	/^f0104b70:	6a 0b                	push   $0xb$/;"	l
f0104b72	obj/kern/kernel.asm	/^f0104b72:	eb 68                	jmp    f0104bdc <_alltraps>$/;"	l
f0104b74	obj/kern/kernel.asm	/^f0104b74 <handler_stack>:$/;"	l
f0104b74	obj/kern/kernel.asm	/^f0104b74:	6a 0c                	push   $0xc$/;"	l
f0104b76	obj/kern/kernel.asm	/^f0104b76:	eb 64                	jmp    f0104bdc <_alltraps>$/;"	l
f0104b78	obj/kern/kernel.asm	/^f0104b78 <handler_gpflt>:$/;"	l
f0104b78	obj/kern/kernel.asm	/^f0104b78:	6a 0d                	push   $0xd$/;"	l
f0104b7a	obj/kern/kernel.asm	/^f0104b7a:	eb 60                	jmp    f0104bdc <_alltraps>$/;"	l
f0104b7c	obj/kern/kernel.asm	/^f0104b7c <handler_pgflt>:$/;"	l
f0104b7c	obj/kern/kernel.asm	/^f0104b7c:	6a 0e                	push   $0xe$/;"	l
f0104b7e	obj/kern/kernel.asm	/^f0104b7e:	eb 5c                	jmp    f0104bdc <_alltraps>$/;"	l
f0104b80	obj/kern/kernel.asm	/^f0104b80 <handler_fperr>:$/;"	l
f0104b80	obj/kern/kernel.asm	/^f0104b80:	6a 00                	push   $0x0$/;"	l
f0104b82	obj/kern/kernel.asm	/^f0104b82:	6a 10                	push   $0x10$/;"	l
f0104b84	obj/kern/kernel.asm	/^f0104b84:	eb 56                	jmp    f0104bdc <_alltraps>$/;"	l
f0104b86	obj/kern/kernel.asm	/^f0104b86 <handler_align>:$/;"	l
f0104b86	obj/kern/kernel.asm	/^f0104b86:	6a 11                	push   $0x11$/;"	l
f0104b88	obj/kern/kernel.asm	/^f0104b88:	eb 52                	jmp    f0104bdc <_alltraps>$/;"	l
f0104b8a	obj/kern/kernel.asm	/^f0104b8a <handler_mchk>:$/;"	l
f0104b8a	obj/kern/kernel.asm	/^f0104b8a:	6a 00                	push   $0x0$/;"	l
f0104b8c	obj/kern/kernel.asm	/^f0104b8c:	6a 12                	push   $0x12$/;"	l
f0104b8e	obj/kern/kernel.asm	/^f0104b8e:	eb 4c                	jmp    f0104bdc <_alltraps>$/;"	l
f0104b90	obj/kern/kernel.asm	/^f0104b90 <handler_simderr>:$/;"	l
f0104b90	obj/kern/kernel.asm	/^f0104b90:	6a 00                	push   $0x0$/;"	l
f0104b92	obj/kern/kernel.asm	/^f0104b92:	6a 13                	push   $0x13$/;"	l
f0104b94	obj/kern/kernel.asm	/^f0104b94:	eb 46                	jmp    f0104bdc <_alltraps>$/;"	l
f0104b96	obj/kern/kernel.asm	/^f0104b96 <handler_syscall>:$/;"	l
f0104b96	obj/kern/kernel.asm	/^f0104b96:	6a 00                	push   $0x0$/;"	l
f0104b98	obj/kern/kernel.asm	/^f0104b98:	6a 30                	push   $0x30$/;"	l
f0104b9a	obj/kern/kernel.asm	/^f0104b9a:	eb 40                	jmp    f0104bdc <_alltraps>$/;"	l
f0104b9c	obj/kern/kernel.asm	/^f0104b9c <sysenter_handler>:$/;"	l
f0104b9c	obj/kern/kernel.asm	/^f0104b9c:	66 6a 00             	pushw  $0x0$/;"	l
f0104b9f	obj/kern/kernel.asm	/^f0104b9f:	66 6a 23             	pushw  $0x23$/;"	l
f0104ba2	obj/kern/kernel.asm	/^f0104ba2:	55                   	push   %ebp$/;"	l
f0104ba3	obj/kern/kernel.asm	/^f0104ba3:	9c                   	pushf  $/;"	l
f0104ba4	obj/kern/kernel.asm	/^f0104ba4:	66 6a 00             	pushw  $0x0$/;"	l
f0104ba7	obj/kern/kernel.asm	/^f0104ba7:	66 6a 1b             	pushw  $0x1b$/;"	l
f0104baa	obj/kern/kernel.asm	/^f0104baa:	56                   	push   %esi$/;"	l
f0104bab	obj/kern/kernel.asm	/^f0104bab:	6a 00                	push   $0x0$/;"	l
f0104bad	obj/kern/kernel.asm	/^f0104bad:	6a 00                	push   $0x0$/;"	l
f0104baf	obj/kern/kernel.asm	/^f0104baf:	66 6a 00             	pushw  $0x0$/;"	l
f0104bb2	obj/kern/kernel.asm	/^f0104bb2:	66 1e                	pushw  %ds$/;"	l
f0104bb4	obj/kern/kernel.asm	/^f0104bb4:	66 6a 00             	pushw  $0x0$/;"	l
f0104bb7	obj/kern/kernel.asm	/^f0104bb7:	66 06                	pushw  %es$/;"	l
f0104bb9	obj/kern/kernel.asm	/^f0104bb9:	60                   	pusha  $/;"	l
f0104bba	obj/kern/kernel.asm	/^f0104bba:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
f0104bbe	obj/kern/kernel.asm	/^f0104bbe:	8e d8                	mov    %eax,%ds$/;"	l
f0104bc0	obj/kern/kernel.asm	/^f0104bc0:	8e c0                	mov    %eax,%es$/;"	l
f0104bc2	obj/kern/kernel.asm	/^f0104bc2:	54                   	push   %esp$/;"	l
f0104bc3	obj/kern/kernel.asm	/^f0104bc3:	e8 80 02 00 00       	call   f0104e48 <syscall_dummy>$/;"	l
f0104bc8	obj/kern/kernel.asm	/^f0104bc8:	5c                   	pop    %esp$/;"	l
f0104bc9	obj/kern/kernel.asm	/^f0104bc9:	61                   	popa   $/;"	l
f0104bca	obj/kern/kernel.asm	/^f0104bca:	07                   	pop    %es$/;"	l
f0104bcb	obj/kern/kernel.asm	/^f0104bcb:	1f                   	pop    %ds$/;"	l
f0104bcc	obj/kern/kernel.asm	/^f0104bcc:	89 e9                	mov    %ebp,%ecx$/;"	l
f0104bce	obj/kern/kernel.asm	/^f0104bce:	89 f2                	mov    %esi,%edx$/;"	l
f0104bd0	obj/kern/kernel.asm	/^f0104bd0:	0f 35                	sysexit $/;"	l
f0104bd2	obj/kern/kernel.asm	/^f0104bd2:	57                   	push   %edi$/;"	l
f0104bd3	obj/kern/kernel.asm	/^f0104bd3:	53                   	push   %ebx$/;"	l
f0104bd4	obj/kern/kernel.asm	/^f0104bd4:	51                   	push   %ecx$/;"	l
f0104bd5	obj/kern/kernel.asm	/^f0104bd5:	52                   	push   %edx$/;"	l
f0104bd6	obj/kern/kernel.asm	/^f0104bd6:	50                   	push   %eax$/;"	l
f0104bd7	obj/kern/kernel.asm	/^f0104bd7:	e8 b4 00 00 00       	call   f0104c90 <syscall>$/;"	l
f0104bdc	obj/kern/kernel.asm	/^f0104bdc <_alltraps>:$/;"	l
f0104bdc	obj/kern/kernel.asm	/^f0104bdc:	1e                   	push   %ds$/;"	l
f0104bdd	obj/kern/kernel.asm	/^f0104bdd:	06                   	push   %es$/;"	l
f0104bde	obj/kern/kernel.asm	/^f0104bde:	60                   	pusha  $/;"	l
f0104bdf	obj/kern/kernel.asm	/^f0104bdf:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
f0104be3	obj/kern/kernel.asm	/^f0104be3:	8e d8                	mov    %eax,%ds$/;"	l
f0104be5	obj/kern/kernel.asm	/^f0104be5:	8e c0                	mov    %eax,%es$/;"	l
f0104be7	obj/kern/kernel.asm	/^f0104be7:	54                   	push   %esp$/;"	l
f0104be8	obj/kern/kernel.asm	/^f0104be8:	e8 6d fd ff ff       	call   f010495a <trap>$/;"	l
f0104bed	obj/kern/kernel.asm	/^f0104bed:	00 00                	add    %al,(%eax)$/;"	l
f0104bf0	obj/kern/kernel.asm	/^f0104bf0 <sched_yield>:$/;"	l
f0104bf0	obj/kern/kernel.asm	/^f0104bf0:	55                   	push   %ebp$/;"	l
f0104bf1	obj/kern/kernel.asm	/^f0104bf1:	89 e5                	mov    %esp,%ebp$/;"	l
f0104bf3	obj/kern/kernel.asm	/^f0104bf3:	53                   	push   %ebx$/;"	l
f0104bf4	obj/kern/kernel.asm	/^f0104bf4:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0104bf7	obj/kern/kernel.asm	/^f0104bf7:	8b 1d 40 c2 22 f0    	mov    0xf022c240,%ebx$/;"	l
f0104bfd	obj/kern/kernel.asm	/^f0104bfd:	89 d8                	mov    %ebx,%eax$/;"	l
f0104bff	obj/kern/kernel.asm	/^f0104bff:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104c04	obj/kern/kernel.asm	/^f0104c04:	83 78 50 01          	cmpl   $0x1,0x50(%eax)$/;"	l
f0104c08	obj/kern/kernel.asm	/^f0104c08:	74 0b                	je     f0104c15 <sched_yield+0x25>$/;"	l
f0104c0a	obj/kern/kernel.asm	/^f0104c0a:	8b 48 54             	mov    0x54(%eax),%ecx$/;"	l
f0104c0d	obj/kern/kernel.asm	/^f0104c0d:	83 e9 02             	sub    $0x2,%ecx$/;"	l
f0104c10	obj/kern/kernel.asm	/^f0104c10:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f0104c13	obj/kern/kernel.asm	/^f0104c13:	76 10                	jbe    f0104c25 <sched_yield+0x35>$/;"	l
f0104c15	obj/kern/kernel.asm	/^f0104c15:	83 c2 01             	add    $0x1,%edx$/;"	l
f0104c18	obj/kern/kernel.asm	/^f0104c18:	83 c0 7c             	add    $0x7c,%eax$/;"	l
f0104c1b	obj/kern/kernel.asm	/^f0104c1b:	81 fa 00 04 00 00    	cmp    $0x400,%edx$/;"	l
f0104c21	obj/kern/kernel.asm	/^f0104c21:	75 e1                	jne    f0104c04 <sched_yield+0x14>$/;"	l
f0104c23	obj/kern/kernel.asm	/^f0104c23:	eb 08                	jmp    f0104c2d <sched_yield+0x3d>$/;"	l
f0104c25	obj/kern/kernel.asm	/^f0104c25:	81 fa 00 04 00 00    	cmp    $0x400,%edx$/;"	l
f0104c2b	obj/kern/kernel.asm	/^f0104c2b:	75 1a                	jne    f0104c47 <sched_yield+0x57>$/;"	l
f0104c2d	obj/kern/kernel.asm	/^f0104c2d:	c7 04 24 b0 7e 10 f0 	movl   $0xf0107eb0,(%esp)$/;"	l
f0104c34	obj/kern/kernel.asm	/^f0104c34:	e8 76 f6 ff ff       	call   f01042af <cprintf>$/;"	l
f0104c39	obj/kern/kernel.asm	/^f0104c39:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0104c40	obj/kern/kernel.asm	/^f0104c40:	e8 3d bf ff ff       	call   f0100b82 <monitor>$/;"	l
f0104c45	obj/kern/kernel.asm	/^f0104c45:	eb f2                	jmp    f0104c39 <sched_yield+0x49>$/;"	l
f0104c47	obj/kern/kernel.asm	/^f0104c47:	e8 62 16 00 00       	call   f01062ae <cpunum>$/;"	l
f0104c4c	obj/kern/kernel.asm	/^f0104c4c:	6b c0 7c             	imul   $0x7c,%eax,%eax$/;"	l
f0104c4f	obj/kern/kernel.asm	/^f0104c4f:	01 c3                	add    %eax,%ebx$/;"	l
f0104c51	obj/kern/kernel.asm	/^f0104c51:	8b 43 54             	mov    0x54(%ebx),%eax$/;"	l
f0104c54	obj/kern/kernel.asm	/^f0104c54:	83 e8 02             	sub    $0x2,%eax$/;"	l
f0104c57	obj/kern/kernel.asm	/^f0104c57:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0104c5a	obj/kern/kernel.asm	/^f0104c5a:	76 25                	jbe    f0104c81 <sched_yield+0x91>$/;"	l
f0104c5c	obj/kern/kernel.asm	/^f0104c5c:	e8 4d 16 00 00       	call   f01062ae <cpunum>$/;"	l
f0104c61	obj/kern/kernel.asm	/^f0104c61:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0104c65	obj/kern/kernel.asm	/^f0104c65:	c7 44 24 08 d0 7e 10 	movl   $0xf0107ed0,0x8(%esp)$/;"	l
f0104c6c	obj/kern/kernel.asm	/^f0104c6c:	f0 $/;"	l
f0104c6d	obj/kern/kernel.asm	/^f0104c6d:	c7 44 24 04 33 00 00 	movl   $0x33,0x4(%esp)$/;"	l
f0104c74	obj/kern/kernel.asm	/^f0104c74:	00 $/;"	l
f0104c75	obj/kern/kernel.asm	/^f0104c75:	c7 04 24 ed 7e 10 f0 	movl   $0xf0107eed,(%esp)$/;"	l
f0104c7c	obj/kern/kernel.asm	/^f0104c7c:	e8 04 b4 ff ff       	call   f0100085 <_panic>$/;"	l
f0104c81	obj/kern/kernel.asm	/^f0104c81:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0104c84	obj/kern/kernel.asm	/^f0104c84:	e8 59 ed ff ff       	call   f01039e2 <env_run>$/;"	l
f0104c89	obj/kern/kernel.asm	/^f0104c89:	00 00                	add    %al,(%eax)$/;"	l
f0104c8b	obj/kern/kernel.asm	/^f0104c8b:	00 00                	add    %al,(%eax)$/;"	l
f0104c8d	obj/kern/kernel.asm	/^f0104c8d:	00 00                	add    %al,(%eax)$/;"	l
f0104c90	obj/kern/kernel.asm	/^f0104c90 <syscall>:$/;"	l
f0104c90	obj/kern/kernel.asm	/^f0104c90:	55                   	push   %ebp$/;"	l
f0104c91	obj/kern/kernel.asm	/^f0104c91:	89 e5                	mov    %esp,%ebp$/;"	l
f0104c93	obj/kern/kernel.asm	/^f0104c93:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0104c96	obj/kern/kernel.asm	/^f0104c96:	89 5d f8             	mov    %ebx,-0x8(%ebp)$/;"	l
f0104c99	obj/kern/kernel.asm	/^f0104c99:	89 75 fc             	mov    %esi,-0x4(%ebp)$/;"	l
f0104c9c	obj/kern/kernel.asm	/^f0104c9c:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0104c9f	obj/kern/kernel.asm	/^f0104c9f:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0104ca2	obj/kern/kernel.asm	/^f0104ca2:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0104ca5	obj/kern/kernel.asm	/^f0104ca5:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104caa	obj/kern/kernel.asm	/^f0104caa:	83 fa 04             	cmp    $0x4,%edx$/;"	l
f0104cad	obj/kern/kernel.asm	/^f0104cad:	0f 87 8b 01 00 00    	ja     f0104e3e <syscall+0x1ae>$/;"	l
f0104cb3	obj/kern/kernel.asm	/^f0104cb3:	ff 24 95 44 7f 10 f0 	jmp    *-0xfef80bc(,%edx,4)$/;"	l
f0104cba	obj/kern/kernel.asm	/^f0104cba:	e8 ef 15 00 00       	call   f01062ae <cpunum>$/;"	l
f0104cbf	obj/kern/kernel.asm	/^f0104cbf:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104cc2	obj/kern/kernel.asm	/^f0104cc2:	8b 80 28 d0 22 f0    	mov    -0xfdd2fd8(%eax),%eax$/;"	l
f0104cc8	obj/kern/kernel.asm	/^f0104cc8:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0104ccb	obj/kern/kernel.asm	/^f0104ccb:	e9 6e 01 00 00       	jmp    f0104e3e <syscall+0x1ae>$/;"	l
f0104cd0	obj/kern/kernel.asm	/^f0104cd0:	e8 d9 15 00 00       	call   f01062ae <cpunum>$/;"	l
f0104cd5	obj/kern/kernel.asm	/^f0104cd5:	c7 44 24 0c 05 00 00 	movl   $0x5,0xc(%esp)$/;"	l
f0104cdc	obj/kern/kernel.asm	/^f0104cdc:	00 $/;"	l
f0104cdd	obj/kern/kernel.asm	/^f0104cdd:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f0104ce1	obj/kern/kernel.asm	/^f0104ce1:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0104ce5	obj/kern/kernel.asm	/^f0104ce5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104ce8	obj/kern/kernel.asm	/^f0104ce8:	8b 80 28 d0 22 f0    	mov    -0xfdd2fd8(%eax),%eax$/;"	l
f0104cee	obj/kern/kernel.asm	/^f0104cee:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104cf1	obj/kern/kernel.asm	/^f0104cf1:	e8 87 ca ff ff       	call   f010177d <user_mem_assert>$/;"	l
f0104cf6	obj/kern/kernel.asm	/^f0104cf6:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0104cfa	obj/kern/kernel.asm	/^f0104cfa:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0104cfe	obj/kern/kernel.asm	/^f0104cfe:	c7 04 24 fa 7e 10 f0 	movl   $0xf0107efa,(%esp)$/;"	l
f0104d05	obj/kern/kernel.asm	/^f0104d05:	e8 a5 f5 ff ff       	call   f01042af <cprintf>$/;"	l
f0104d0a	obj/kern/kernel.asm	/^f0104d0a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104d0f	obj/kern/kernel.asm	/^f0104d0f:	e9 2a 01 00 00       	jmp    f0104e3e <syscall+0x1ae>$/;"	l
f0104d14	obj/kern/kernel.asm	/^f0104d14:	e8 56 b7 ff ff       	call   f010046f <cons_getc>$/;"	l
f0104d19	obj/kern/kernel.asm	/^f0104d19:	e9 20 01 00 00       	jmp    f0104e3e <syscall+0x1ae>$/;"	l
f0104d1e	obj/kern/kernel.asm	/^f0104d1e:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0104d25	obj/kern/kernel.asm	/^f0104d25:	00 $/;"	l
f0104d26	obj/kern/kernel.asm	/^f0104d26:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0104d29	obj/kern/kernel.asm	/^f0104d29:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104d2d	obj/kern/kernel.asm	/^f0104d2d:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0104d30	obj/kern/kernel.asm	/^f0104d30:	e8 c4 eb ff ff       	call   f01038f9 <envid2env>$/;"	l
f0104d35	obj/kern/kernel.asm	/^f0104d35:	85 c0                	test   %eax,%eax$/;"	l
f0104d37	obj/kern/kernel.asm	/^f0104d37:	0f 88 01 01 00 00    	js     f0104e3e <syscall+0x1ae>$/;"	l
f0104d3d	obj/kern/kernel.asm	/^f0104d3d:	e8 6c 15 00 00       	call   f01062ae <cpunum>$/;"	l
f0104d42	obj/kern/kernel.asm	/^f0104d42:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0104d45	obj/kern/kernel.asm	/^f0104d45:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104d48	obj/kern/kernel.asm	/^f0104d48:	39 90 28 d0 22 f0    	cmp    %edx,-0xfdd2fd8(%eax)$/;"	l
f0104d4e	obj/kern/kernel.asm	/^f0104d4e:	75 23                	jne    f0104d73 <syscall+0xe3>$/;"	l
f0104d50	obj/kern/kernel.asm	/^f0104d50:	e8 59 15 00 00       	call   f01062ae <cpunum>$/;"	l
f0104d55	obj/kern/kernel.asm	/^f0104d55:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104d58	obj/kern/kernel.asm	/^f0104d58:	8b 80 28 d0 22 f0    	mov    -0xfdd2fd8(%eax),%eax$/;"	l
f0104d5e	obj/kern/kernel.asm	/^f0104d5e:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0104d61	obj/kern/kernel.asm	/^f0104d61:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104d65	obj/kern/kernel.asm	/^f0104d65:	c7 04 24 ff 7e 10 f0 	movl   $0xf0107eff,(%esp)$/;"	l
f0104d6c	obj/kern/kernel.asm	/^f0104d6c:	e8 3e f5 ff ff       	call   f01042af <cprintf>$/;"	l
f0104d71	obj/kern/kernel.asm	/^f0104d71:	eb 28                	jmp    f0104d9b <syscall+0x10b>$/;"	l
f0104d73	obj/kern/kernel.asm	/^f0104d73:	8b 5a 48             	mov    0x48(%edx),%ebx$/;"	l
f0104d76	obj/kern/kernel.asm	/^f0104d76:	e8 33 15 00 00       	call   f01062ae <cpunum>$/;"	l
f0104d7b	obj/kern/kernel.asm	/^f0104d7b:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0104d7f	obj/kern/kernel.asm	/^f0104d7f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104d82	obj/kern/kernel.asm	/^f0104d82:	8b 80 28 d0 22 f0    	mov    -0xfdd2fd8(%eax),%eax$/;"	l
f0104d88	obj/kern/kernel.asm	/^f0104d88:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0104d8b	obj/kern/kernel.asm	/^f0104d8b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104d8f	obj/kern/kernel.asm	/^f0104d8f:	c7 04 24 1a 7f 10 f0 	movl   $0xf0107f1a,(%esp)$/;"	l
f0104d96	obj/kern/kernel.asm	/^f0104d96:	e8 14 f5 ff ff       	call   f01042af <cprintf>$/;"	l
f0104d9b	obj/kern/kernel.asm	/^f0104d9b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0104d9e	obj/kern/kernel.asm	/^f0104d9e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104da1	obj/kern/kernel.asm	/^f0104da1:	e8 29 ef ff ff       	call   f0103ccf <env_destroy>$/;"	l
f0104da6	obj/kern/kernel.asm	/^f0104da6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104dab	obj/kern/kernel.asm	/^f0104dab:	e9 8e 00 00 00       	jmp    f0104e3e <syscall+0x1ae>$/;"	l
f0104db0	obj/kern/kernel.asm	/^f0104db0:	81 fb ff ff ff ef    	cmp    $0xefffffff,%ebx$/;"	l
f0104db6	obj/kern/kernel.asm	/^f0104db6:	77 20                	ja     f0104dd8 <syscall+0x148>$/;"	l
f0104db8	obj/kern/kernel.asm	/^f0104db8:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0104dbc	obj/kern/kernel.asm	/^f0104dbc:	c7 44 24 08 48 6a 10 	movl   $0xf0106a48,0x8(%esp)$/;"	l
f0104dc3	obj/kern/kernel.asm	/^f0104dc3:	f0 $/;"	l
f0104dc4	obj/kern/kernel.asm	/^f0104dc4:	c7 44 24 04 47 00 00 	movl   $0x47,0x4(%esp)$/;"	l
f0104dcb	obj/kern/kernel.asm	/^f0104dcb:	00 $/;"	l
f0104dcc	obj/kern/kernel.asm	/^f0104dcc:	c7 04 24 32 7f 10 f0 	movl   $0xf0107f32,(%esp)$/;"	l
f0104dd3	obj/kern/kernel.asm	/^f0104dd3:	e8 ad b2 ff ff       	call   f0100085 <_panic>$/;"	l
f0104dd8	obj/kern/kernel.asm	/^f0104dd8:	81 c3 00 00 00 10    	add    $0x10000000,%ebx$/;"	l
f0104dde	obj/kern/kernel.asm	/^f0104dde:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f0104de1	obj/kern/kernel.asm	/^f0104de1:	3b 1d e8 ce 22 f0    	cmp    0xf022cee8,%ebx$/;"	l
f0104de7	obj/kern/kernel.asm	/^f0104de7:	72 1c                	jb     f0104e05 <syscall+0x175>$/;"	l
f0104de9	obj/kern/kernel.asm	/^f0104de9:	c7 44 24 08 60 70 10 	movl   $0xf0107060,0x8(%esp)$/;"	l
f0104df0	obj/kern/kernel.asm	/^f0104df0:	f0 $/;"	l
f0104df1	obj/kern/kernel.asm	/^f0104df1:	c7 44 24 04 4f 00 00 	movl   $0x4f,0x4(%esp)$/;"	l
f0104df8	obj/kern/kernel.asm	/^f0104df8:	00 $/;"	l
f0104df9	obj/kern/kernel.asm	/^f0104df9:	c7 04 24 8d 76 10 f0 	movl   $0xf010768d,(%esp)$/;"	l
f0104e00	obj/kern/kernel.asm	/^f0104e00:	e8 80 b2 ff ff       	call   f0100085 <_panic>$/;"	l
f0104e05	obj/kern/kernel.asm	/^f0104e05:	c1 e3 03             	shl    $0x3,%ebx$/;"	l
f0104e08	obj/kern/kernel.asm	/^f0104e08:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0104e0d	obj/kern/kernel.asm	/^f0104e0d:	03 1d f0 ce 22 f0    	add    0xf022cef0,%ebx$/;"	l
f0104e13	obj/kern/kernel.asm	/^f0104e13:	74 29                	je     f0104e3e <syscall+0x1ae>$/;"	l
f0104e15	obj/kern/kernel.asm	/^f0104e15:	e8 94 14 00 00       	call   f01062ae <cpunum>$/;"	l
f0104e1a	obj/kern/kernel.asm	/^f0104e1a:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
f0104e21	obj/kern/kernel.asm	/^f0104e21:	00 $/;"	l
f0104e22	obj/kern/kernel.asm	/^f0104e22:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f0104e26	obj/kern/kernel.asm	/^f0104e26:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0104e2a	obj/kern/kernel.asm	/^f0104e2a:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104e2d	obj/kern/kernel.asm	/^f0104e2d:	8b 80 28 d0 22 f0    	mov    -0xfdd2fd8(%eax),%eax$/;"	l
f0104e33	obj/kern/kernel.asm	/^f0104e33:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0104e36	obj/kern/kernel.asm	/^f0104e36:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104e39	obj/kern/kernel.asm	/^f0104e39:	e8 54 ca ff ff       	call   f0101892 <page_insert>$/;"	l
f0104e3e	obj/kern/kernel.asm	/^f0104e3e:	8b 5d f8             	mov    -0x8(%ebp),%ebx$/;"	l
f0104e41	obj/kern/kernel.asm	/^f0104e41:	8b 75 fc             	mov    -0x4(%ebp),%esi$/;"	l
f0104e44	obj/kern/kernel.asm	/^f0104e44:	89 ec                	mov    %ebp,%esp$/;"	l
f0104e46	obj/kern/kernel.asm	/^f0104e46:	5d                   	pop    %ebp$/;"	l
f0104e47	obj/kern/kernel.asm	/^f0104e47:	c3                   	ret    $/;"	l
f0104e48	obj/kern/kernel.asm	/^f0104e48 <syscall_dummy>:$/;"	l
f0104e48	obj/kern/kernel.asm	/^f0104e48:	55                   	push   %ebp$/;"	l
f0104e49	obj/kern/kernel.asm	/^f0104e49:	89 e5                	mov    %esp,%ebp$/;"	l
f0104e4b	obj/kern/kernel.asm	/^f0104e4b:	83 ec 38             	sub    $0x38,%esp$/;"	l
f0104e4e	obj/kern/kernel.asm	/^f0104e4e:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f0104e51	obj/kern/kernel.asm	/^f0104e51:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f0104e54	obj/kern/kernel.asm	/^f0104e54:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f0104e57	obj/kern/kernel.asm	/^f0104e57:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0104e5a	obj/kern/kernel.asm	/^f0104e5a:	e8 4f 14 00 00       	call   f01062ae <cpunum>$/;"	l
f0104e5f	obj/kern/kernel.asm	/^f0104e5f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104e62	obj/kern/kernel.asm	/^f0104e62:	8b 80 28 d0 22 f0    	mov    -0xfdd2fd8(%eax),%eax$/;"	l
f0104e68	obj/kern/kernel.asm	/^f0104e68:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f0104e6d	obj/kern/kernel.asm	/^f0104e6d:	89 c7                	mov    %eax,%edi$/;"	l
f0104e6f	obj/kern/kernel.asm	/^f0104e6f:	89 de                	mov    %ebx,%esi$/;"	l
f0104e71	obj/kern/kernel.asm	/^f0104e71:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0104e73	obj/kern/kernel.asm	/^f0104e73:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)$/;"	l
f0104e7a	obj/kern/kernel.asm	/^f0104e7a:	00 $/;"	l
f0104e7b	obj/kern/kernel.asm	/^f0104e7b:	8b 03                	mov    (%ebx),%eax$/;"	l
f0104e7d	obj/kern/kernel.asm	/^f0104e7d:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0104e81	obj/kern/kernel.asm	/^f0104e81:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f0104e84	obj/kern/kernel.asm	/^f0104e84:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0104e88	obj/kern/kernel.asm	/^f0104e88:	8b 43 18             	mov    0x18(%ebx),%eax$/;"	l
f0104e8b	obj/kern/kernel.asm	/^f0104e8b:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104e8f	obj/kern/kernel.asm	/^f0104e8f:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f0104e92	obj/kern/kernel.asm	/^f0104e92:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104e96	obj/kern/kernel.asm	/^f0104e96:	8b 43 1c             	mov    0x1c(%ebx),%eax$/;"	l
f0104e99	obj/kern/kernel.asm	/^f0104e99:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104e9c	obj/kern/kernel.asm	/^f0104e9c:	e8 ef fd ff ff       	call   f0104c90 <syscall>$/;"	l
f0104ea1	obj/kern/kernel.asm	/^f0104ea1:	89 43 1c             	mov    %eax,0x1c(%ebx)$/;"	l
f0104ea4	obj/kern/kernel.asm	/^f0104ea4:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f0104ea7	obj/kern/kernel.asm	/^f0104ea7:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f0104eaa	obj/kern/kernel.asm	/^f0104eaa:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f0104ead	obj/kern/kernel.asm	/^f0104ead:	89 ec                	mov    %ebp,%esp$/;"	l
f0104eaf	obj/kern/kernel.asm	/^f0104eaf:	5d                   	pop    %ebp$/;"	l
f0104eb0	obj/kern/kernel.asm	/^f0104eb0:	c3                   	ret    $/;"	l
f0104ec0	obj/kern/kernel.asm	/^f0104ec0 <stab_binsearch>:$/;"	l
f0104ec0	obj/kern/kernel.asm	/^f0104ec0:	55                   	push   %ebp$/;"	l
f0104ec1	obj/kern/kernel.asm	/^f0104ec1:	89 e5                	mov    %esp,%ebp$/;"	l
f0104ec3	obj/kern/kernel.asm	/^f0104ec3:	57                   	push   %edi$/;"	l
f0104ec4	obj/kern/kernel.asm	/^f0104ec4:	56                   	push   %esi$/;"	l
f0104ec5	obj/kern/kernel.asm	/^f0104ec5:	53                   	push   %ebx$/;"	l
f0104ec6	obj/kern/kernel.asm	/^f0104ec6:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0104ec9	obj/kern/kernel.asm	/^f0104ec9:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0104ecc	obj/kern/kernel.asm	/^f0104ecc:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
f0104ecf	obj/kern/kernel.asm	/^f0104ecf:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0104ed2	obj/kern/kernel.asm	/^f0104ed2:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0104ed5	obj/kern/kernel.asm	/^f0104ed5:	8b 1a                	mov    (%edx),%ebx$/;"	l
f0104ed7	obj/kern/kernel.asm	/^f0104ed7:	8b 01                	mov    (%ecx),%eax$/;"	l
f0104ed9	obj/kern/kernel.asm	/^f0104ed9:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0104edc	obj/kern/kernel.asm	/^f0104edc:	39 c3                	cmp    %eax,%ebx$/;"	l
f0104ede	obj/kern/kernel.asm	/^f0104ede:	0f 8f 9c 00 00 00    	jg     f0104f80 <stab_binsearch+0xc0>$/;"	l
f0104ee4	obj/kern/kernel.asm	/^f0104ee4:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0104eeb	obj/kern/kernel.asm	/^f0104eeb:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0104eee	obj/kern/kernel.asm	/^f0104eee:	01 d8                	add    %ebx,%eax$/;"	l
f0104ef0	obj/kern/kernel.asm	/^f0104ef0:	89 c7                	mov    %eax,%edi$/;"	l
f0104ef2	obj/kern/kernel.asm	/^f0104ef2:	c1 ef 1f             	shr    $0x1f,%edi$/;"	l
f0104ef5	obj/kern/kernel.asm	/^f0104ef5:	01 c7                	add    %eax,%edi$/;"	l
f0104ef7	obj/kern/kernel.asm	/^f0104ef7:	d1 ff                	sar    %edi$/;"	d
f0104ef9	obj/kern/kernel.asm	/^f0104ef9:	39 df                	cmp    %ebx,%edi$/;"	l
f0104efb	obj/kern/kernel.asm	/^f0104efb:	7c 33                	jl     f0104f30 <stab_binsearch+0x70>$/;"	l
f0104efd	obj/kern/kernel.asm	/^f0104efd:	8d 04 7f             	lea    (%edi,%edi,2),%eax$/;"	l
f0104f00	obj/kern/kernel.asm	/^f0104f00:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f0104f03	obj/kern/kernel.asm	/^f0104f03:	0f b6 44 82 04       	movzbl 0x4(%edx,%eax,4),%eax$/;"	l
f0104f08	obj/kern/kernel.asm	/^f0104f08:	39 f0                	cmp    %esi,%eax$/;"	l
f0104f0a	obj/kern/kernel.asm	/^f0104f0a:	0f 84 bc 00 00 00    	je     f0104fcc <stab_binsearch+0x10c>$/;"	l
f0104f10	obj/kern/kernel.asm	/^f0104f10:	8d 44 7f fd          	lea    -0x3(%edi,%edi,2),%eax$/;"	l
f0104f14	obj/kern/kernel.asm	/^f0104f14:	8d 54 82 04          	lea    0x4(%edx,%eax,4),%edx$/;"	l
f0104f18	obj/kern/kernel.asm	/^f0104f18:	89 f8                	mov    %edi,%eax$/;"	l
f0104f1a	obj/kern/kernel.asm	/^f0104f1a:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104f1d	obj/kern/kernel.asm	/^f0104f1d:	39 d8                	cmp    %ebx,%eax$/;"	l
f0104f1f	obj/kern/kernel.asm	/^f0104f1f:	7c 0f                	jl     f0104f30 <stab_binsearch+0x70>$/;"	l
f0104f21	obj/kern/kernel.asm	/^f0104f21:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0104f24	obj/kern/kernel.asm	/^f0104f24:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0104f27	obj/kern/kernel.asm	/^f0104f27:	39 f1                	cmp    %esi,%ecx$/;"	l
f0104f29	obj/kern/kernel.asm	/^f0104f29:	75 ef                	jne    f0104f1a <stab_binsearch+0x5a>$/;"	l
f0104f2b	obj/kern/kernel.asm	/^f0104f2b:	e9 9e 00 00 00       	jmp    f0104fce <stab_binsearch+0x10e>$/;"	l
f0104f30	obj/kern/kernel.asm	/^f0104f30:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f0104f33	obj/kern/kernel.asm	/^f0104f33:	eb 3c                	jmp    f0104f71 <stab_binsearch+0xb1>$/;"	l
f0104f35	obj/kern/kernel.asm	/^f0104f35:	8b 4d e8             	mov    -0x18(%ebp),%ecx$/;"	l
f0104f38	obj/kern/kernel.asm	/^f0104f38:	89 01                	mov    %eax,(%ecx)$/;"	l
f0104f3a	obj/kern/kernel.asm	/^f0104f3a:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f0104f3d	obj/kern/kernel.asm	/^f0104f3d:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)$/;"	l
f0104f44	obj/kern/kernel.asm	/^f0104f44:	eb 2b                	jmp    f0104f71 <stab_binsearch+0xb1>$/;"	l
f0104f46	obj/kern/kernel.asm	/^f0104f46:	3b 55 0c             	cmp    0xc(%ebp),%edx$/;"	l
f0104f49	obj/kern/kernel.asm	/^f0104f49:	76 14                	jbe    f0104f5f <stab_binsearch+0x9f>$/;"	l
f0104f4b	obj/kern/kernel.asm	/^f0104f4b:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104f4e	obj/kern/kernel.asm	/^f0104f4e:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0104f51	obj/kern/kernel.asm	/^f0104f51:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0104f54	obj/kern/kernel.asm	/^f0104f54:	89 02                	mov    %eax,(%edx)$/;"	l
f0104f56	obj/kern/kernel.asm	/^f0104f56:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)$/;"	l
f0104f5d	obj/kern/kernel.asm	/^f0104f5d:	eb 12                	jmp    f0104f71 <stab_binsearch+0xb1>$/;"	l
f0104f5f	obj/kern/kernel.asm	/^f0104f5f:	8b 4d e8             	mov    -0x18(%ebp),%ecx$/;"	l
f0104f62	obj/kern/kernel.asm	/^f0104f62:	89 01                	mov    %eax,(%ecx)$/;"	l
f0104f64	obj/kern/kernel.asm	/^f0104f64:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
f0104f68	obj/kern/kernel.asm	/^f0104f68:	89 c3                	mov    %eax,%ebx$/;"	l
f0104f6a	obj/kern/kernel.asm	/^f0104f6a:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)$/;"	l
f0104f71	obj/kern/kernel.asm	/^f0104f71:	39 5d ec             	cmp    %ebx,-0x14(%ebp)$/;"	l
f0104f74	obj/kern/kernel.asm	/^f0104f74:	0f 8d 71 ff ff ff    	jge    f0104eeb <stab_binsearch+0x2b>$/;"	l
f0104f7a	obj/kern/kernel.asm	/^f0104f7a:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0104f7e	obj/kern/kernel.asm	/^f0104f7e:	75 0f                	jne    f0104f8f <stab_binsearch+0xcf>$/;"	l
f0104f80	obj/kern/kernel.asm	/^f0104f80:	8b 5d e8             	mov    -0x18(%ebp),%ebx$/;"	l
f0104f83	obj/kern/kernel.asm	/^f0104f83:	8b 03                	mov    (%ebx),%eax$/;"	l
f0104f85	obj/kern/kernel.asm	/^f0104f85:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104f88	obj/kern/kernel.asm	/^f0104f88:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0104f8b	obj/kern/kernel.asm	/^f0104f8b:	89 02                	mov    %eax,(%edx)$/;"	l
f0104f8d	obj/kern/kernel.asm	/^f0104f8d:	eb 57                	jmp    f0104fe6 <stab_binsearch+0x126>$/;"	l
f0104f8f	obj/kern/kernel.asm	/^f0104f8f:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f0104f92	obj/kern/kernel.asm	/^f0104f92:	8b 01                	mov    (%ecx),%eax$/;"	l
f0104f94	obj/kern/kernel.asm	/^f0104f94:	8b 5d e8             	mov    -0x18(%ebp),%ebx$/;"	l
f0104f97	obj/kern/kernel.asm	/^f0104f97:	8b 0b                	mov    (%ebx),%ecx$/;"	l
f0104f99	obj/kern/kernel.asm	/^f0104f99:	39 c1                	cmp    %eax,%ecx$/;"	l
f0104f9b	obj/kern/kernel.asm	/^f0104f9b:	7d 28                	jge    f0104fc5 <stab_binsearch+0x105>$/;"	l
f0104f9d	obj/kern/kernel.asm	/^f0104f9d:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0104fa0	obj/kern/kernel.asm	/^f0104fa0:	8b 5d f0             	mov    -0x10(%ebp),%ebx$/;"	l
f0104fa3	obj/kern/kernel.asm	/^f0104fa3:	0f b6 54 93 04       	movzbl 0x4(%ebx,%edx,4),%edx$/;"	l
f0104fa8	obj/kern/kernel.asm	/^f0104fa8:	39 f2                	cmp    %esi,%edx$/;"	l
f0104faa	obj/kern/kernel.asm	/^f0104faa:	74 19                	je     f0104fc5 <stab_binsearch+0x105>$/;"	l
f0104fac	obj/kern/kernel.asm	/^f0104fac:	8d 54 40 fd          	lea    -0x3(%eax,%eax,2),%edx$/;"	l
f0104fb0	obj/kern/kernel.asm	/^f0104fb0:	8d 54 93 04          	lea    0x4(%ebx,%edx,4),%edx$/;"	l
f0104fb4	obj/kern/kernel.asm	/^f0104fb4:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104fb7	obj/kern/kernel.asm	/^f0104fb7:	39 c1                	cmp    %eax,%ecx$/;"	l
f0104fb9	obj/kern/kernel.asm	/^f0104fb9:	7d 0a                	jge    f0104fc5 <stab_binsearch+0x105>$/;"	l
f0104fbb	obj/kern/kernel.asm	/^f0104fbb:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f0104fbe	obj/kern/kernel.asm	/^f0104fbe:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0104fc1	obj/kern/kernel.asm	/^f0104fc1:	39 f3                	cmp    %esi,%ebx$/;"	l
f0104fc3	obj/kern/kernel.asm	/^f0104fc3:	75 ef                	jne    f0104fb4 <stab_binsearch+0xf4>$/;"	l
f0104fc5	obj/kern/kernel.asm	/^f0104fc5:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f0104fc8	obj/kern/kernel.asm	/^f0104fc8:	89 02                	mov    %eax,(%edx)$/;"	l
f0104fca	obj/kern/kernel.asm	/^f0104fca:	eb 1a                	jmp    f0104fe6 <stab_binsearch+0x126>$/;"	l
f0104fcc	obj/kern/kernel.asm	/^f0104fcc:	89 f8                	mov    %edi,%eax$/;"	l
f0104fce	obj/kern/kernel.asm	/^f0104fce:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0104fd1	obj/kern/kernel.asm	/^f0104fd1:	8b 4d f0             	mov    -0x10(%ebp),%ecx$/;"	l
f0104fd4	obj/kern/kernel.asm	/^f0104fd4:	8b 54 91 08          	mov    0x8(%ecx,%edx,4),%edx$/;"	l
f0104fd8	obj/kern/kernel.asm	/^f0104fd8:	3b 55 0c             	cmp    0xc(%ebp),%edx$/;"	l
f0104fdb	obj/kern/kernel.asm	/^f0104fdb:	0f 82 54 ff ff ff    	jb     f0104f35 <stab_binsearch+0x75>$/;"	l
f0104fe1	obj/kern/kernel.asm	/^f0104fe1:	e9 60 ff ff ff       	jmp    f0104f46 <stab_binsearch+0x86>$/;"	l
f0104fe6	obj/kern/kernel.asm	/^f0104fe6:	83 c4 14             	add    $0x14,%esp$/;"	l
f0104fe9	obj/kern/kernel.asm	/^f0104fe9:	5b                   	pop    %ebx$/;"	l
f0104fea	obj/kern/kernel.asm	/^f0104fea:	5e                   	pop    %esi$/;"	l
f0104feb	obj/kern/kernel.asm	/^f0104feb:	5f                   	pop    %edi$/;"	l
f0104fec	obj/kern/kernel.asm	/^f0104fec:	5d                   	pop    %ebp$/;"	l
f0104fed	obj/kern/kernel.asm	/^f0104fed:	c3                   	ret    $/;"	l
f0104fee	obj/kern/kernel.asm	/^f0104fee <debuginfo_eip>:$/;"	l
f0104fee	obj/kern/kernel.asm	/^f0104fee:	55                   	push   %ebp$/;"	l
f0104fef	obj/kern/kernel.asm	/^f0104fef:	89 e5                	mov    %esp,%ebp$/;"	l
f0104ff1	obj/kern/kernel.asm	/^f0104ff1:	83 ec 58             	sub    $0x58,%esp$/;"	l
f0104ff4	obj/kern/kernel.asm	/^f0104ff4:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f0104ff7	obj/kern/kernel.asm	/^f0104ff7:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f0104ffa	obj/kern/kernel.asm	/^f0104ffa:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f0104ffd	obj/kern/kernel.asm	/^f0104ffd:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105000	obj/kern/kernel.asm	/^f0105000:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0105003	obj/kern/kernel.asm	/^f0105003:	c7 03 58 7f 10 f0    	movl   $0xf0107f58,(%ebx)$/;"	l
f0105009	obj/kern/kernel.asm	/^f0105009:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)$/;"	l
f0105010	obj/kern/kernel.asm	/^f0105010:	c7 43 08 58 7f 10 f0 	movl   $0xf0107f58,0x8(%ebx)$/;"	l
f0105017	obj/kern/kernel.asm	/^f0105017:	c7 43 0c 09 00 00 00 	movl   $0x9,0xc(%ebx)$/;"	l
f010501e	obj/kern/kernel.asm	/^f010501e:	89 73 10             	mov    %esi,0x10(%ebx)$/;"	l
f0105021	obj/kern/kernel.asm	/^f0105021:	c7 43 14 00 00 00 00 	movl   $0x0,0x14(%ebx)$/;"	l
f0105028	obj/kern/kernel.asm	/^f0105028:	81 fe ff ff 7f ef    	cmp    $0xef7fffff,%esi$/;"	l
f010502e	obj/kern/kernel.asm	/^f010502e:	76 1f                	jbe    f010504f <debuginfo_eip+0x61>$/;"	l
f0105030	obj/kern/kernel.asm	/^f0105030:	bf ed 60 11 f0       	mov    $0xf01160ed,%edi$/;"	l
f0105035	obj/kern/kernel.asm	/^f0105035:	c7 45 c4 99 27 11 f0 	movl   $0xf0112799,-0x3c(%ebp)$/;"	l
f010503c	obj/kern/kernel.asm	/^f010503c:	c7 45 bc 98 27 11 f0 	movl   $0xf0112798,-0x44(%ebp)$/;"	l
f0105043	obj/kern/kernel.asm	/^f0105043:	c7 45 c0 b4 84 10 f0 	movl   $0xf01084b4,-0x40(%ebp)$/;"	l
f010504a	obj/kern/kernel.asm	/^f010504a:	e9 c7 00 00 00       	jmp    f0105116 <debuginfo_eip+0x128>$/;"	l
f010504f	obj/kern/kernel.asm	/^f010504f:	e8 5a 12 00 00       	call   f01062ae <cpunum>$/;"	l
f0105054	obj/kern/kernel.asm	/^f0105054:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f010505b	obj/kern/kernel.asm	/^f010505b:	00 $/;"	l
f010505c	obj/kern/kernel.asm	/^f010505c:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%esp)$/;"	l
f0105063	obj/kern/kernel.asm	/^f0105063:	00 $/;"	l
f0105064	obj/kern/kernel.asm	/^f0105064:	c7 44 24 04 00 00 20 	movl   $0x200000,0x4(%esp)$/;"	l
f010506b	obj/kern/kernel.asm	/^f010506b:	00 $/;"	l
f010506c	obj/kern/kernel.asm	/^f010506c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010506f	obj/kern/kernel.asm	/^f010506f:	8b 80 28 d0 22 f0    	mov    -0xfdd2fd8(%eax),%eax$/;"	l
f0105075	obj/kern/kernel.asm	/^f0105075:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105078	obj/kern/kernel.asm	/^f0105078:	e8 19 c6 ff ff       	call   f0101696 <user_mem_check>$/;"	l
f010507d	obj/kern/kernel.asm	/^f010507d:	85 c0                	test   %eax,%eax$/;"	l
f010507f	obj/kern/kernel.asm	/^f010507f:	0f 88 49 02 00 00    	js     f01052ce <debuginfo_eip+0x2e0>$/;"	l
f0105085	obj/kern/kernel.asm	/^f0105085:	b8 00 00 20 00       	mov    $0x200000,%eax$/;"	l
f010508a	obj/kern/kernel.asm	/^f010508a:	8b 10                	mov    (%eax),%edx$/;"	l
f010508c	obj/kern/kernel.asm	/^f010508c:	89 55 c0             	mov    %edx,-0x40(%ebp)$/;"	l
f010508f	obj/kern/kernel.asm	/^f010508f:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
f0105092	obj/kern/kernel.asm	/^f0105092:	89 4d bc             	mov    %ecx,-0x44(%ebp)$/;"	l
f0105095	obj/kern/kernel.asm	/^f0105095:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
f0105098	obj/kern/kernel.asm	/^f0105098:	89 55 c4             	mov    %edx,-0x3c(%ebp)$/;"	l
f010509b	obj/kern/kernel.asm	/^f010509b:	8b 78 0c             	mov    0xc(%eax),%edi$/;"	l
f010509e	obj/kern/kernel.asm	/^f010509e:	e8 0b 12 00 00       	call   f01062ae <cpunum>$/;"	l
f01050a3	obj/kern/kernel.asm	/^f01050a3:	89 c2                	mov    %eax,%edx$/;"	l
f01050a5	obj/kern/kernel.asm	/^f01050a5:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f01050ac	obj/kern/kernel.asm	/^f01050ac:	00 $/;"	l
f01050ad	obj/kern/kernel.asm	/^f01050ad:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
f01050b0	obj/kern/kernel.asm	/^f01050b0:	2b 45 c0             	sub    -0x40(%ebp),%eax$/;"	l
f01050b3	obj/kern/kernel.asm	/^f01050b3:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f01050b6	obj/kern/kernel.asm	/^f01050b6:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
f01050bc	obj/kern/kernel.asm	/^f01050bc:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01050c0	obj/kern/kernel.asm	/^f01050c0:	8b 4d c0             	mov    -0x40(%ebp),%ecx$/;"	l
f01050c3	obj/kern/kernel.asm	/^f01050c3:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f01050c7	obj/kern/kernel.asm	/^f01050c7:	6b c2 74             	imul   $0x74,%edx,%eax$/;"	l
f01050ca	obj/kern/kernel.asm	/^f01050ca:	8b 80 28 d0 22 f0    	mov    -0xfdd2fd8(%eax),%eax$/;"	l
f01050d0	obj/kern/kernel.asm	/^f01050d0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01050d3	obj/kern/kernel.asm	/^f01050d3:	e8 be c5 ff ff       	call   f0101696 <user_mem_check>$/;"	l
f01050d8	obj/kern/kernel.asm	/^f01050d8:	85 c0                	test   %eax,%eax$/;"	l
f01050da	obj/kern/kernel.asm	/^f01050da:	0f 88 ee 01 00 00    	js     f01052ce <debuginfo_eip+0x2e0>$/;"	l
f01050e0	obj/kern/kernel.asm	/^f01050e0:	e8 c9 11 00 00       	call   f01062ae <cpunum>$/;"	l
f01050e5	obj/kern/kernel.asm	/^f01050e5:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f01050ec	obj/kern/kernel.asm	/^f01050ec:	00 $/;"	l
f01050ed	obj/kern/kernel.asm	/^f01050ed:	89 fa                	mov    %edi,%edx$/;"	l
f01050ef	obj/kern/kernel.asm	/^f01050ef:	2b 55 c4             	sub    -0x3c(%ebp),%edx$/;"	l
f01050f2	obj/kern/kernel.asm	/^f01050f2:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01050f6	obj/kern/kernel.asm	/^f01050f6:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
f01050f9	obj/kern/kernel.asm	/^f01050f9:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01050fd	obj/kern/kernel.asm	/^f01050fd:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105100	obj/kern/kernel.asm	/^f0105100:	8b 80 28 d0 22 f0    	mov    -0xfdd2fd8(%eax),%eax$/;"	l
f0105106	obj/kern/kernel.asm	/^f0105106:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105109	obj/kern/kernel.asm	/^f0105109:	e8 88 c5 ff ff       	call   f0101696 <user_mem_check>$/;"	l
f010510e	obj/kern/kernel.asm	/^f010510e:	85 c0                	test   %eax,%eax$/;"	l
f0105110	obj/kern/kernel.asm	/^f0105110:	0f 88 b8 01 00 00    	js     f01052ce <debuginfo_eip+0x2e0>$/;"	l
f0105116	obj/kern/kernel.asm	/^f0105116:	39 7d c4             	cmp    %edi,-0x3c(%ebp)$/;"	l
f0105119	obj/kern/kernel.asm	/^f0105119:	0f 83 af 01 00 00    	jae    f01052ce <debuginfo_eip+0x2e0>$/;"	l
f010511f	obj/kern/kernel.asm	/^f010511f:	80 7f ff 00          	cmpb   $0x0,-0x1(%edi)$/;"	l
f0105123	obj/kern/kernel.asm	/^f0105123:	0f 85 a5 01 00 00    	jne    f01052ce <debuginfo_eip+0x2e0>$/;"	l
f0105129	obj/kern/kernel.asm	/^f0105129:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0105130	obj/kern/kernel.asm	/^f0105130:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
f0105133	obj/kern/kernel.asm	/^f0105133:	2b 45 c0             	sub    -0x40(%ebp),%eax$/;"	l
f0105136	obj/kern/kernel.asm	/^f0105136:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f0105139	obj/kern/kernel.asm	/^f0105139:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
f010513f	obj/kern/kernel.asm	/^f010513f:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105142	obj/kern/kernel.asm	/^f0105142:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0105145	obj/kern/kernel.asm	/^f0105145:	8d 4d e0             	lea    -0x20(%ebp),%ecx$/;"	l
f0105148	obj/kern/kernel.asm	/^f0105148:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f010514b	obj/kern/kernel.asm	/^f010514b:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010514f	obj/kern/kernel.asm	/^f010514f:	c7 04 24 64 00 00 00 	movl   $0x64,(%esp)$/;"	l
f0105156	obj/kern/kernel.asm	/^f0105156:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
f0105159	obj/kern/kernel.asm	/^f0105159:	e8 62 fd ff ff       	call   f0104ec0 <stab_binsearch>$/;"	l
f010515e	obj/kern/kernel.asm	/^f010515e:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105161	obj/kern/kernel.asm	/^f0105161:	85 c0                	test   %eax,%eax$/;"	l
f0105163	obj/kern/kernel.asm	/^f0105163:	0f 84 65 01 00 00    	je     f01052ce <debuginfo_eip+0x2e0>$/;"	l
f0105169	obj/kern/kernel.asm	/^f0105169:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f010516c	obj/kern/kernel.asm	/^f010516c:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010516f	obj/kern/kernel.asm	/^f010516f:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0105172	obj/kern/kernel.asm	/^f0105172:	8d 4d d8             	lea    -0x28(%ebp),%ecx$/;"	l
f0105175	obj/kern/kernel.asm	/^f0105175:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0105178	obj/kern/kernel.asm	/^f0105178:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010517c	obj/kern/kernel.asm	/^f010517c:	c7 04 24 24 00 00 00 	movl   $0x24,(%esp)$/;"	l
f0105183	obj/kern/kernel.asm	/^f0105183:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
f0105186	obj/kern/kernel.asm	/^f0105186:	e8 35 fd ff ff       	call   f0104ec0 <stab_binsearch>$/;"	l
f010518b	obj/kern/kernel.asm	/^f010518b:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f010518e	obj/kern/kernel.asm	/^f010518e:	3b 45 d8             	cmp    -0x28(%ebp),%eax$/;"	l
f0105191	obj/kern/kernel.asm	/^f0105191:	7f 35                	jg     f01051c8 <debuginfo_eip+0x1da>$/;"	l
f0105193	obj/kern/kernel.asm	/^f0105193:	6b c0 0c             	imul   $0xc,%eax,%eax$/;"	l
f0105196	obj/kern/kernel.asm	/^f0105196:	8b 4d c0             	mov    -0x40(%ebp),%ecx$/;"	l
f0105199	obj/kern/kernel.asm	/^f0105199:	8b 04 08             	mov    (%eax,%ecx,1),%eax$/;"	l
f010519c	obj/kern/kernel.asm	/^f010519c:	89 fa                	mov    %edi,%edx$/;"	l
f010519e	obj/kern/kernel.asm	/^f010519e:	2b 55 c4             	sub    -0x3c(%ebp),%edx$/;"	l
f01051a1	obj/kern/kernel.asm	/^f01051a1:	39 d0                	cmp    %edx,%eax$/;"	l
f01051a3	obj/kern/kernel.asm	/^f01051a3:	73 06                	jae    f01051ab <debuginfo_eip+0x1bd>$/;"	l
f01051a5	obj/kern/kernel.asm	/^f01051a5:	03 45 c4             	add    -0x3c(%ebp),%eax$/;"	l
f01051a8	obj/kern/kernel.asm	/^f01051a8:	89 43 08             	mov    %eax,0x8(%ebx)$/;"	l
f01051ab	obj/kern/kernel.asm	/^f01051ab:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f01051ae	obj/kern/kernel.asm	/^f01051ae:	6b c2 0c             	imul   $0xc,%edx,%eax$/;"	l
f01051b1	obj/kern/kernel.asm	/^f01051b1:	8b 4d c0             	mov    -0x40(%ebp),%ecx$/;"	l
f01051b4	obj/kern/kernel.asm	/^f01051b4:	8b 44 08 08          	mov    0x8(%eax,%ecx,1),%eax$/;"	l
f01051b8	obj/kern/kernel.asm	/^f01051b8:	89 43 10             	mov    %eax,0x10(%ebx)$/;"	l
f01051bb	obj/kern/kernel.asm	/^f01051bb:	29 c6                	sub    %eax,%esi$/;"	l
f01051bd	obj/kern/kernel.asm	/^f01051bd:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f01051c0	obj/kern/kernel.asm	/^f01051c0:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f01051c3	obj/kern/kernel.asm	/^f01051c3:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f01051c6	obj/kern/kernel.asm	/^f01051c6:	eb 0f                	jmp    f01051d7 <debuginfo_eip+0x1e9>$/;"	l
f01051c8	obj/kern/kernel.asm	/^f01051c8:	89 73 10             	mov    %esi,0x10(%ebx)$/;"	l
f01051cb	obj/kern/kernel.asm	/^f01051cb:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01051ce	obj/kern/kernel.asm	/^f01051ce:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01051d1	obj/kern/kernel.asm	/^f01051d1:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01051d4	obj/kern/kernel.asm	/^f01051d4:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f01051d7	obj/kern/kernel.asm	/^f01051d7:	c7 44 24 04 3a 00 00 	movl   $0x3a,0x4(%esp)$/;"	l
f01051de	obj/kern/kernel.asm	/^f01051de:	00 $/;"	l
f01051df	obj/kern/kernel.asm	/^f01051df:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f01051e2	obj/kern/kernel.asm	/^f01051e2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01051e5	obj/kern/kernel.asm	/^f01051e5:	e8 f1 09 00 00       	call   f0105bdb <strfind>$/;"	l
f01051ea	obj/kern/kernel.asm	/^f01051ea:	2b 43 08             	sub    0x8(%ebx),%eax$/;"	l
f01051ed	obj/kern/kernel.asm	/^f01051ed:	89 43 0c             	mov    %eax,0xc(%ebx)$/;"	l
f01051f0	obj/kern/kernel.asm	/^f01051f0:	8d 4d d0             	lea    -0x30(%ebp),%ecx$/;"	l
f01051f3	obj/kern/kernel.asm	/^f01051f3:	8d 55 d4             	lea    -0x2c(%ebp),%edx$/;"	l
f01051f6	obj/kern/kernel.asm	/^f01051f6:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01051fa	obj/kern/kernel.asm	/^f01051fa:	c7 04 24 44 00 00 00 	movl   $0x44,(%esp)$/;"	l
f0105201	obj/kern/kernel.asm	/^f0105201:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
f0105204	obj/kern/kernel.asm	/^f0105204:	e8 b7 fc ff ff       	call   f0104ec0 <stab_binsearch>$/;"	l
f0105209	obj/kern/kernel.asm	/^f0105209:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010520c	obj/kern/kernel.asm	/^f010520c:	3b 45 d0             	cmp    -0x30(%ebp),%eax$/;"	l
f010520f	obj/kern/kernel.asm	/^f010520f:	7f 35                	jg     f0105246 <debuginfo_eip+0x258>$/;"	l
f0105211	obj/kern/kernel.asm	/^f0105211:	6b c0 0c             	imul   $0xc,%eax,%eax$/;"	l
f0105214	obj/kern/kernel.asm	/^f0105214:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
f0105217	obj/kern/kernel.asm	/^f0105217:	0f b7 44 10 06       	movzwl 0x6(%eax,%edx,1),%eax$/;"	l
f010521c	obj/kern/kernel.asm	/^f010521c:	89 43 04             	mov    %eax,0x4(%ebx)$/;"	l
f010521f	obj/kern/kernel.asm	/^f010521f:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0105222	obj/kern/kernel.asm	/^f0105222:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f0105225	obj/kern/kernel.asm	/^f0105225:	89 4d bc             	mov    %ecx,-0x44(%ebp)$/;"	l
f0105228	obj/kern/kernel.asm	/^f0105228:	39 c8                	cmp    %ecx,%eax$/;"	l
f010522a	obj/kern/kernel.asm	/^f010522a:	7c 61                	jl     f010528d <debuginfo_eip+0x29f>$/;"	l
f010522c	obj/kern/kernel.asm	/^f010522c:	6b f0 0c             	imul   $0xc,%eax,%esi$/;"	l
f010522f	obj/kern/kernel.asm	/^f010522f:	03 75 c0             	add    -0x40(%ebp),%esi$/;"	l
f0105232	obj/kern/kernel.asm	/^f0105232:	0f b6 4e 04          	movzbl 0x4(%esi),%ecx$/;"	l
f0105236	obj/kern/kernel.asm	/^f0105236:	80 f9 84             	cmp    $0x84,%cl$/;"	l
f0105239	obj/kern/kernel.asm	/^f0105239:	74 3d                	je     f0105278 <debuginfo_eip+0x28a>$/;"	l
f010523b	obj/kern/kernel.asm	/^f010523b:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
f010523e	obj/kern/kernel.asm	/^f010523e:	6b d2 0c             	imul   $0xc,%edx,%edx$/;"	l
f0105241	obj/kern/kernel.asm	/^f0105241:	03 55 c0             	add    -0x40(%ebp),%edx$/;"	l
f0105244	obj/kern/kernel.asm	/^f0105244:	eb 22                	jmp    f0105268 <debuginfo_eip+0x27a>$/;"	l
f0105246	obj/kern/kernel.asm	/^f0105246:	c7 43 04 ff ff ff ff 	movl   $0xffffffff,0x4(%ebx)$/;"	l
f010524d	obj/kern/kernel.asm	/^f010524d:	eb d0                	jmp    f010521f <debuginfo_eip+0x231>$/;"	l
f010524f	obj/kern/kernel.asm	/^f010524f:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105252	obj/kern/kernel.asm	/^f0105252:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105255	obj/kern/kernel.asm	/^f0105255:	39 45 bc             	cmp    %eax,-0x44(%ebp)$/;"	l
f0105258	obj/kern/kernel.asm	/^f0105258:	7f 33                	jg     f010528d <debuginfo_eip+0x29f>$/;"	l
f010525a	obj/kern/kernel.asm	/^f010525a:	89 d6                	mov    %edx,%esi$/;"	l
f010525c	obj/kern/kernel.asm	/^f010525c:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f0105260	obj/kern/kernel.asm	/^f0105260:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0105263	obj/kern/kernel.asm	/^f0105263:	80 f9 84             	cmp    $0x84,%cl$/;"	l
f0105266	obj/kern/kernel.asm	/^f0105266:	74 10                	je     f0105278 <debuginfo_eip+0x28a>$/;"	l
f0105268	obj/kern/kernel.asm	/^f0105268:	80 f9 64             	cmp    $0x64,%cl$/;"	l
f010526b	obj/kern/kernel.asm	/^f010526b:	75 e2                	jne    f010524f <debuginfo_eip+0x261>$/;"	l
f010526d	obj/kern/kernel.asm	/^f010526d:	83 7e 08 00          	cmpl   $0x0,0x8(%esi)$/;"	l
f0105271	obj/kern/kernel.asm	/^f0105271:	74 dc                	je     f010524f <debuginfo_eip+0x261>$/;"	l
f0105273	obj/kern/kernel.asm	/^f0105273:	3b 45 bc             	cmp    -0x44(%ebp),%eax$/;"	l
f0105276	obj/kern/kernel.asm	/^f0105276:	7c 15                	jl     f010528d <debuginfo_eip+0x29f>$/;"	l
f0105278	obj/kern/kernel.asm	/^f0105278:	6b c0 0c             	imul   $0xc,%eax,%eax$/;"	l
f010527b	obj/kern/kernel.asm	/^f010527b:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
f010527e	obj/kern/kernel.asm	/^f010527e:	8b 04 10             	mov    (%eax,%edx,1),%eax$/;"	l
f0105281	obj/kern/kernel.asm	/^f0105281:	2b 7d c4             	sub    -0x3c(%ebp),%edi$/;"	l
f0105284	obj/kern/kernel.asm	/^f0105284:	39 f8                	cmp    %edi,%eax$/;"	l
f0105286	obj/kern/kernel.asm	/^f0105286:	73 05                	jae    f010528d <debuginfo_eip+0x29f>$/;"	l
f0105288	obj/kern/kernel.asm	/^f0105288:	03 45 c4             	add    -0x3c(%ebp),%eax$/;"	l
f010528b	obj/kern/kernel.asm	/^f010528b:	89 03                	mov    %eax,(%ebx)$/;"	l
f010528d	obj/kern/kernel.asm	/^f010528d:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0105290	obj/kern/kernel.asm	/^f0105290:	3b 45 d8             	cmp    -0x28(%ebp),%eax$/;"	l
f0105293	obj/kern/kernel.asm	/^f0105293:	7d 40                	jge    f01052d5 <debuginfo_eip+0x2e7>$/;"	l
f0105295	obj/kern/kernel.asm	/^f0105295:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105298	obj/kern/kernel.asm	/^f0105298:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f010529b	obj/kern/kernel.asm	/^f010529b:	39 45 d8             	cmp    %eax,-0x28(%ebp)$/;"	l
f010529e	obj/kern/kernel.asm	/^f010529e:	7e 35                	jle    f01052d5 <debuginfo_eip+0x2e7>$/;"	l
f01052a0	obj/kern/kernel.asm	/^f01052a0:	6b c0 0c             	imul   $0xc,%eax,%eax$/;"	l
f01052a3	obj/kern/kernel.asm	/^f01052a3:	8b 4d c0             	mov    -0x40(%ebp),%ecx$/;"	l
f01052a6	obj/kern/kernel.asm	/^f01052a6:	80 7c 08 04 a0       	cmpb   $0xa0,0x4(%eax,%ecx,1)$/;"	l
f01052ab	obj/kern/kernel.asm	/^f01052ab:	75 28                	jne    f01052d5 <debuginfo_eip+0x2e7>$/;"	l
f01052ad	obj/kern/kernel.asm	/^f01052ad:	83 43 14 01          	addl   $0x1,0x14(%ebx)$/;"	l
f01052b1	obj/kern/kernel.asm	/^f01052b1:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01052b4	obj/kern/kernel.asm	/^f01052b4:	83 c0 01             	add    $0x1,%eax$/;"	l
f01052b7	obj/kern/kernel.asm	/^f01052b7:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01052ba	obj/kern/kernel.asm	/^f01052ba:	39 45 d8             	cmp    %eax,-0x28(%ebp)$/;"	l
f01052bd	obj/kern/kernel.asm	/^f01052bd:	7e 16                	jle    f01052d5 <debuginfo_eip+0x2e7>$/;"	l
f01052bf	obj/kern/kernel.asm	/^f01052bf:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f01052c2	obj/kern/kernel.asm	/^f01052c2:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
f01052c5	obj/kern/kernel.asm	/^f01052c5:	80 7c 82 04 a0       	cmpb   $0xa0,0x4(%edx,%eax,4)$/;"	l
f01052ca	obj/kern/kernel.asm	/^f01052ca:	74 e1                	je     f01052ad <debuginfo_eip+0x2bf>$/;"	l
f01052cc	obj/kern/kernel.asm	/^f01052cc:	eb 07                	jmp    f01052d5 <debuginfo_eip+0x2e7>$/;"	l
f01052ce	obj/kern/kernel.asm	/^f01052ce:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01052d3	obj/kern/kernel.asm	/^f01052d3:	eb 05                	jmp    f01052da <debuginfo_eip+0x2ec>$/;"	l
f01052d5	obj/kern/kernel.asm	/^f01052d5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01052da	obj/kern/kernel.asm	/^f01052da:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f01052dd	obj/kern/kernel.asm	/^f01052dd:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f01052e0	obj/kern/kernel.asm	/^f01052e0:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f01052e3	obj/kern/kernel.asm	/^f01052e3:	89 ec                	mov    %ebp,%esp$/;"	l
f01052e5	obj/kern/kernel.asm	/^f01052e5:	5d                   	pop    %ebp$/;"	l
f01052e6	obj/kern/kernel.asm	/^f01052e6:	c3                   	ret    $/;"	l
f01052f0	obj/kern/kernel.asm	/^f01052f0 <printnum>:$/;"	l
f01052f0	obj/kern/kernel.asm	/^f01052f0:	55                   	push   %ebp$/;"	l
f01052f1	obj/kern/kernel.asm	/^f01052f1:	89 e5                	mov    %esp,%ebp$/;"	l
f01052f3	obj/kern/kernel.asm	/^f01052f3:	57                   	push   %edi$/;"	l
f01052f4	obj/kern/kernel.asm	/^f01052f4:	56                   	push   %esi$/;"	l
f01052f5	obj/kern/kernel.asm	/^f01052f5:	53                   	push   %ebx$/;"	l
f01052f6	obj/kern/kernel.asm	/^f01052f6:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f01052f9	obj/kern/kernel.asm	/^f01052f9:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01052fc	obj/kern/kernel.asm	/^f01052fc:	89 d6                	mov    %edx,%esi$/;"	l
f01052fe	obj/kern/kernel.asm	/^f01052fe:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105301	obj/kern/kernel.asm	/^f0105301:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0105304	obj/kern/kernel.asm	/^f0105304:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105307	obj/kern/kernel.asm	/^f0105307:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f010530a	obj/kern/kernel.asm	/^f010530a:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010530d	obj/kern/kernel.asm	/^f010530d:	8b 5d 14             	mov    0x14(%ebp),%ebx$/;"	l
f0105310	obj/kern/kernel.asm	/^f0105310:	8b 7d 18             	mov    0x18(%ebp),%edi$/;"	l
f0105313	obj/kern/kernel.asm	/^f0105313:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0105316	obj/kern/kernel.asm	/^f0105316:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f010531b	obj/kern/kernel.asm	/^f010531b:	39 d1                	cmp    %edx,%ecx$/;"	l
f010531d	obj/kern/kernel.asm	/^f010531d:	72 15                	jb     f0105334 <printnum+0x44>$/;"	l
f010531f	obj/kern/kernel.asm	/^f010531f:	77 07                	ja     f0105328 <printnum+0x38>$/;"	l
f0105321	obj/kern/kernel.asm	/^f0105321:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0105324	obj/kern/kernel.asm	/^f0105324:	39 d0                	cmp    %edx,%eax$/;"	l
f0105326	obj/kern/kernel.asm	/^f0105326:	76 0c                	jbe    f0105334 <printnum+0x44>$/;"	l
f0105328	obj/kern/kernel.asm	/^f0105328:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f010532b	obj/kern/kernel.asm	/^f010532b:	85 db                	test   %ebx,%ebx$/;"	l
f010532d	obj/kern/kernel.asm	/^f010532d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0105330	obj/kern/kernel.asm	/^f0105330:	7f 61                	jg     f0105393 <printnum+0xa3>$/;"	l
f0105332	obj/kern/kernel.asm	/^f0105332:	eb 70                	jmp    f01053a4 <printnum+0xb4>$/;"	l
f0105334	obj/kern/kernel.asm	/^f0105334:	89 7c 24 10          	mov    %edi,0x10(%esp)$/;"	l
f0105338	obj/kern/kernel.asm	/^f0105338:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f010533b	obj/kern/kernel.asm	/^f010533b:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f010533f	obj/kern/kernel.asm	/^f010533f:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105343	obj/kern/kernel.asm	/^f0105343:	8b 4c 24 08          	mov    0x8(%esp),%ecx$/;"	l
f0105347	obj/kern/kernel.asm	/^f0105347:	8b 5c 24 0c          	mov    0xc(%esp),%ebx$/;"	l
f010534b	obj/kern/kernel.asm	/^f010534b:	89 4d d0             	mov    %ecx,-0x30(%ebp)$/;"	l
f010534e	obj/kern/kernel.asm	/^f010534e:	89 5d d4             	mov    %ebx,-0x2c(%ebp)$/;"	l
f0105351	obj/kern/kernel.asm	/^f0105351:	8b 5d dc             	mov    -0x24(%ebp),%ebx$/;"	l
f0105354	obj/kern/kernel.asm	/^f0105354:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0105358	obj/kern/kernel.asm	/^f0105358:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f010535f	obj/kern/kernel.asm	/^f010535f:	00 $/;"	l
f0105360	obj/kern/kernel.asm	/^f0105360:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0105363	obj/kern/kernel.asm	/^f0105363:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105366	obj/kern/kernel.asm	/^f0105366:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0105369	obj/kern/kernel.asm	/^f0105369:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f010536d	obj/kern/kernel.asm	/^f010536d:	e8 de 13 00 00       	call   f0106750 <__udivdi3>$/;"	l
f0105372	obj/kern/kernel.asm	/^f0105372:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f0105375	obj/kern/kernel.asm	/^f0105375:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0105378	obj/kern/kernel.asm	/^f0105378:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f010537c	obj/kern/kernel.asm	/^f010537c:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0105380	obj/kern/kernel.asm	/^f0105380:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105383	obj/kern/kernel.asm	/^f0105383:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0105387	obj/kern/kernel.asm	/^f0105387:	89 f2                	mov    %esi,%edx$/;"	l
f0105389	obj/kern/kernel.asm	/^f0105389:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010538c	obj/kern/kernel.asm	/^f010538c:	e8 5f ff ff ff       	call   f01052f0 <printnum>$/;"	l
f0105391	obj/kern/kernel.asm	/^f0105391:	eb 11                	jmp    f01053a4 <printnum+0xb4>$/;"	l
f0105393	obj/kern/kernel.asm	/^f0105393:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0105397	obj/kern/kernel.asm	/^f0105397:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f010539a	obj/kern/kernel.asm	/^f010539a:	ff 55 e4             	call   *-0x1c(%ebp)$/;"	l
f010539d	obj/kern/kernel.asm	/^f010539d:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f01053a0	obj/kern/kernel.asm	/^f01053a0:	85 db                	test   %ebx,%ebx$/;"	l
f01053a2	obj/kern/kernel.asm	/^f01053a2:	7f ef                	jg     f0105393 <printnum+0xa3>$/;"	l
f01053a4	obj/kern/kernel.asm	/^f01053a4:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01053a8	obj/kern/kernel.asm	/^f01053a8:	8b 74 24 04          	mov    0x4(%esp),%esi$/;"	l
f01053ac	obj/kern/kernel.asm	/^f01053ac:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f01053af	obj/kern/kernel.asm	/^f01053af:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01053b3	obj/kern/kernel.asm	/^f01053b3:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f01053ba	obj/kern/kernel.asm	/^f01053ba:	00 $/;"	l
f01053bb	obj/kern/kernel.asm	/^f01053bb:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f01053be	obj/kern/kernel.asm	/^f01053be:	89 14 24             	mov    %edx,(%esp)$/;"	l
f01053c1	obj/kern/kernel.asm	/^f01053c1:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f01053c4	obj/kern/kernel.asm	/^f01053c4:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f01053c8	obj/kern/kernel.asm	/^f01053c8:	e8 b3 14 00 00       	call   f0106880 <__umoddi3>$/;"	l
f01053cd	obj/kern/kernel.asm	/^f01053cd:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01053d1	obj/kern/kernel.asm	/^f01053d1:	0f be 80 62 7f 10 f0 	movsbl -0xfef809e(%eax),%eax$/;"	l
f01053d8	obj/kern/kernel.asm	/^f01053d8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01053db	obj/kern/kernel.asm	/^f01053db:	ff 55 e4             	call   *-0x1c(%ebp)$/;"	l
f01053de	obj/kern/kernel.asm	/^f01053de:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f01053e1	obj/kern/kernel.asm	/^f01053e1:	5b                   	pop    %ebx$/;"	l
f01053e2	obj/kern/kernel.asm	/^f01053e2:	5e                   	pop    %esi$/;"	l
f01053e3	obj/kern/kernel.asm	/^f01053e3:	5f                   	pop    %edi$/;"	l
f01053e4	obj/kern/kernel.asm	/^f01053e4:	5d                   	pop    %ebp$/;"	l
f01053e5	obj/kern/kernel.asm	/^f01053e5:	c3                   	ret    $/;"	l
f01053e6	obj/kern/kernel.asm	/^f01053e6 <getuint>:$/;"	l
f01053e6	obj/kern/kernel.asm	/^f01053e6:	55                   	push   %ebp$/;"	l
f01053e7	obj/kern/kernel.asm	/^f01053e7:	89 e5                	mov    %esp,%ebp$/;"	l
f01053e9	obj/kern/kernel.asm	/^f01053e9:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f01053ec	obj/kern/kernel.asm	/^f01053ec:	7e 0e                	jle    f01053fc <getuint+0x16>$/;"	l
f01053ee	obj/kern/kernel.asm	/^f01053ee:	8b 10                	mov    (%eax),%edx$/;"	l
f01053f0	obj/kern/kernel.asm	/^f01053f0:	8d 4a 08             	lea    0x8(%edx),%ecx$/;"	l
f01053f3	obj/kern/kernel.asm	/^f01053f3:	89 08                	mov    %ecx,(%eax)$/;"	l
f01053f5	obj/kern/kernel.asm	/^f01053f5:	8b 02                	mov    (%edx),%eax$/;"	l
f01053f7	obj/kern/kernel.asm	/^f01053f7:	8b 52 04             	mov    0x4(%edx),%edx$/;"	l
f01053fa	obj/kern/kernel.asm	/^f01053fa:	eb 22                	jmp    f010541e <getuint+0x38>$/;"	l
f01053fc	obj/kern/kernel.asm	/^f01053fc:	85 d2                	test   %edx,%edx$/;"	l
f01053fe	obj/kern/kernel.asm	/^f01053fe:	74 10                	je     f0105410 <getuint+0x2a>$/;"	l
f0105400	obj/kern/kernel.asm	/^f0105400:	8b 10                	mov    (%eax),%edx$/;"	l
f0105402	obj/kern/kernel.asm	/^f0105402:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f0105405	obj/kern/kernel.asm	/^f0105405:	89 08                	mov    %ecx,(%eax)$/;"	l
f0105407	obj/kern/kernel.asm	/^f0105407:	8b 02                	mov    (%edx),%eax$/;"	l
f0105409	obj/kern/kernel.asm	/^f0105409:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010540e	obj/kern/kernel.asm	/^f010540e:	eb 0e                	jmp    f010541e <getuint+0x38>$/;"	l
f0105410	obj/kern/kernel.asm	/^f0105410:	8b 10                	mov    (%eax),%edx$/;"	l
f0105412	obj/kern/kernel.asm	/^f0105412:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f0105415	obj/kern/kernel.asm	/^f0105415:	89 08                	mov    %ecx,(%eax)$/;"	l
f0105417	obj/kern/kernel.asm	/^f0105417:	8b 02                	mov    (%edx),%eax$/;"	l
f0105419	obj/kern/kernel.asm	/^f0105419:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010541e	obj/kern/kernel.asm	/^f010541e:	5d                   	pop    %ebp$/;"	l
f010541f	obj/kern/kernel.asm	/^f010541f:	c3                   	ret    $/;"	l
f0105420	obj/kern/kernel.asm	/^f0105420 <sprintputch>:$/;"	l
f0105420	obj/kern/kernel.asm	/^f0105420:	55                   	push   %ebp$/;"	l
f0105421	obj/kern/kernel.asm	/^f0105421:	89 e5                	mov    %esp,%ebp$/;"	l
f0105423	obj/kern/kernel.asm	/^f0105423:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105426	obj/kern/kernel.asm	/^f0105426:	83 40 08 01          	addl   $0x1,0x8(%eax)$/;"	l
f010542a	obj/kern/kernel.asm	/^f010542a:	8b 10                	mov    (%eax),%edx$/;"	l
f010542c	obj/kern/kernel.asm	/^f010542c:	3b 50 04             	cmp    0x4(%eax),%edx$/;"	l
f010542f	obj/kern/kernel.asm	/^f010542f:	73 0a                	jae    f010543b <sprintputch+0x1b>$/;"	l
f0105431	obj/kern/kernel.asm	/^f0105431:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0105434	obj/kern/kernel.asm	/^f0105434:	88 0a                	mov    %cl,(%edx)$/;"	l
f0105436	obj/kern/kernel.asm	/^f0105436:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105439	obj/kern/kernel.asm	/^f0105439:	89 10                	mov    %edx,(%eax)$/;"	l
f010543b	obj/kern/kernel.asm	/^f010543b:	5d                   	pop    %ebp$/;"	l
f010543c	obj/kern/kernel.asm	/^f010543c:	c3                   	ret    $/;"	l
f010543d	obj/kern/kernel.asm	/^f010543d <vprintfmt>:$/;"	l
f010543d	obj/kern/kernel.asm	/^f010543d:	55                   	push   %ebp$/;"	l
f010543e	obj/kern/kernel.asm	/^f010543e:	89 e5                	mov    %esp,%ebp$/;"	l
f0105440	obj/kern/kernel.asm	/^f0105440:	57                   	push   %edi$/;"	l
f0105441	obj/kern/kernel.asm	/^f0105441:	56                   	push   %esi$/;"	l
f0105442	obj/kern/kernel.asm	/^f0105442:	53                   	push   %ebx$/;"	l
f0105443	obj/kern/kernel.asm	/^f0105443:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0105446	obj/kern/kernel.asm	/^f0105446:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0105449	obj/kern/kernel.asm	/^f0105449:	c7 45 d0 ff ff ff ff 	movl   $0xffffffff,-0x30(%ebp)$/;"	l
f0105450	obj/kern/kernel.asm	/^f0105450:	eb 1a                	jmp    f010546c <vprintfmt+0x2f>$/;"	l
f0105452	obj/kern/kernel.asm	/^f0105452:	85 c0                	test   %eax,%eax$/;"	l
f0105454	obj/kern/kernel.asm	/^f0105454:	0f 84 42 04 00 00    	je     f010589c <vprintfmt+0x45f>$/;"	l
f010545a	obj/kern/kernel.asm	/^f010545a:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010545d	obj/kern/kernel.asm	/^f010545d:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0105461	obj/kern/kernel.asm	/^f0105461:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105464	obj/kern/kernel.asm	/^f0105464:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105467	obj/kern/kernel.asm	/^f0105467:	eb 03                	jmp    f010546c <vprintfmt+0x2f>$/;"	l
f0105469	obj/kern/kernel.asm	/^f0105469:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f010546c	obj/kern/kernel.asm	/^f010546c:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f010546f	obj/kern/kernel.asm	/^f010546f:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0105472	obj/kern/kernel.asm	/^f0105472:	83 f8 25             	cmp    $0x25,%eax$/;"	l
f0105475	obj/kern/kernel.asm	/^f0105475:	75 db                	jne    f0105452 <vprintfmt+0x15>$/;"	l
f0105477	obj/kern/kernel.asm	/^f0105477:	c6 45 d8 20          	movb   $0x20,-0x28(%ebp)$/;"	l
f010547b	obj/kern/kernel.asm	/^f010547b:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0105482	obj/kern/kernel.asm	/^f0105482:	bf ff ff ff ff       	mov    $0xffffffff,%edi$/;"	l
f0105487	obj/kern/kernel.asm	/^f0105487:	be ff ff ff ff       	mov    $0xffffffff,%esi$/;"	l
f010548c	obj/kern/kernel.asm	/^f010548c:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0105491	obj/kern/kernel.asm	/^f0105491:	eb 06                	jmp    f0105499 <vprintfmt+0x5c>$/;"	l
f0105493	obj/kern/kernel.asm	/^f0105493:	c6 45 d8 2d          	movb   $0x2d,-0x28(%ebp)$/;"	l
f0105497	obj/kern/kernel.asm	/^f0105497:	89 c3                	mov    %eax,%ebx$/;"	l
f0105499	obj/kern/kernel.asm	/^f0105499:	0f b6 13             	movzbl (%ebx),%edx$/;"	l
f010549c	obj/kern/kernel.asm	/^f010549c:	0f b6 c2             	movzbl %dl,%eax$/;"	l
f010549f	obj/kern/kernel.asm	/^f010549f:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f01054a2	obj/kern/kernel.asm	/^f01054a2:	8d 43 01             	lea    0x1(%ebx),%eax$/;"	l
f01054a5	obj/kern/kernel.asm	/^f01054a5:	83 ea 23             	sub    $0x23,%edx$/;"	l
f01054a8	obj/kern/kernel.asm	/^f01054a8:	80 fa 55             	cmp    $0x55,%dl$/;"	l
f01054ab	obj/kern/kernel.asm	/^f01054ab:	0f 87 ca 03 00 00    	ja     f010587b <vprintfmt+0x43e>$/;"	l
f01054b1	obj/kern/kernel.asm	/^f01054b1:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f01054b4	obj/kern/kernel.asm	/^f01054b4:	ff 24 95 a0 80 10 f0 	jmp    *-0xfef7f60(,%edx,4)$/;"	l
f01054bb	obj/kern/kernel.asm	/^f01054bb:	c6 45 d8 30          	movb   $0x30,-0x28(%ebp)$/;"	l
f01054bf	obj/kern/kernel.asm	/^f01054bf:	eb d6                	jmp    f0105497 <vprintfmt+0x5a>$/;"	l
f01054c1	obj/kern/kernel.asm	/^f01054c1:	8b 7d dc             	mov    -0x24(%ebp),%edi$/;"	l
f01054c4	obj/kern/kernel.asm	/^f01054c4:	83 ef 30             	sub    $0x30,%edi$/;"	l
f01054c7	obj/kern/kernel.asm	/^f01054c7:	0f be 10             	movsbl (%eax),%edx$/;"	l
f01054ca	obj/kern/kernel.asm	/^f01054ca:	8d 5a d0             	lea    -0x30(%edx),%ebx$/;"	l
f01054cd	obj/kern/kernel.asm	/^f01054cd:	83 fb 09             	cmp    $0x9,%ebx$/;"	l
f01054d0	obj/kern/kernel.asm	/^f01054d0:	77 38                	ja     f010550a <vprintfmt+0xcd>$/;"	l
f01054d2	obj/kern/kernel.asm	/^f01054d2:	83 c0 01             	add    $0x1,%eax$/;"	l
f01054d5	obj/kern/kernel.asm	/^f01054d5:	8d 1c bf             	lea    (%edi,%edi,4),%ebx$/;"	l
f01054d8	obj/kern/kernel.asm	/^f01054d8:	8d 7c 5a d0          	lea    -0x30(%edx,%ebx,2),%edi$/;"	l
f01054dc	obj/kern/kernel.asm	/^f01054dc:	0f be 10             	movsbl (%eax),%edx$/;"	l
f01054df	obj/kern/kernel.asm	/^f01054df:	8d 5a d0             	lea    -0x30(%edx),%ebx$/;"	l
f01054e2	obj/kern/kernel.asm	/^f01054e2:	83 fb 09             	cmp    $0x9,%ebx$/;"	l
f01054e5	obj/kern/kernel.asm	/^f01054e5:	76 eb                	jbe    f01054d2 <vprintfmt+0x95>$/;"	l
f01054e7	obj/kern/kernel.asm	/^f01054e7:	eb 21                	jmp    f010550a <vprintfmt+0xcd>$/;"	l
f01054e9	obj/kern/kernel.asm	/^f01054e9:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
f01054ec	obj/kern/kernel.asm	/^f01054ec:	8d 5a 04             	lea    0x4(%edx),%ebx$/;"	l
f01054ef	obj/kern/kernel.asm	/^f01054ef:	89 5d 14             	mov    %ebx,0x14(%ebp)$/;"	l
f01054f2	obj/kern/kernel.asm	/^f01054f2:	8b 3a                	mov    (%edx),%edi$/;"	l
f01054f4	obj/kern/kernel.asm	/^f01054f4:	eb 14                	jmp    f010550a <vprintfmt+0xcd>$/;"	l
f01054f6	obj/kern/kernel.asm	/^f01054f6:	89 f2                	mov    %esi,%edx$/;"	l
f01054f8	obj/kern/kernel.asm	/^f01054f8:	c1 fa 1f             	sar    $0x1f,%edx$/;"	l
f01054fb	obj/kern/kernel.asm	/^f01054fb:	f7 d2                	not    %edx$/;"	l
f01054fd	obj/kern/kernel.asm	/^f01054fd:	21 d6                	and    %edx,%esi$/;"	l
f01054ff	obj/kern/kernel.asm	/^f01054ff:	eb 96                	jmp    f0105497 <vprintfmt+0x5a>$/;"	l
f0105501	obj/kern/kernel.asm	/^f0105501:	c7 45 e0 01 00 00 00 	movl   $0x1,-0x20(%ebp)$/;"	l
f0105508	obj/kern/kernel.asm	/^f0105508:	eb 8d                	jmp    f0105497 <vprintfmt+0x5a>$/;"	l
f010550a	obj/kern/kernel.asm	/^f010550a:	85 f6                	test   %esi,%esi$/;"	l
f010550c	obj/kern/kernel.asm	/^f010550c:	79 89                	jns    f0105497 <vprintfmt+0x5a>$/;"	l
f010550e	obj/kern/kernel.asm	/^f010550e:	89 fe                	mov    %edi,%esi$/;"	l
f0105510	obj/kern/kernel.asm	/^f0105510:	8b 7d d0             	mov    -0x30(%ebp),%edi$/;"	l
f0105513	obj/kern/kernel.asm	/^f0105513:	eb 82                	jmp    f0105497 <vprintfmt+0x5a>$/;"	l
f0105515	obj/kern/kernel.asm	/^f0105515:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105518	obj/kern/kernel.asm	/^f0105518:	e9 7a ff ff ff       	jmp    f0105497 <vprintfmt+0x5a>$/;"	l
f010551d	obj/kern/kernel.asm	/^f010551d:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105520	obj/kern/kernel.asm	/^f0105520:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105523	obj/kern/kernel.asm	/^f0105523:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105526	obj/kern/kernel.asm	/^f0105526:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105529	obj/kern/kernel.asm	/^f0105529:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010552c	obj/kern/kernel.asm	/^f010552c:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0105530	obj/kern/kernel.asm	/^f0105530:	8b 00                	mov    (%eax),%eax$/;"	l
f0105532	obj/kern/kernel.asm	/^f0105532:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105535	obj/kern/kernel.asm	/^f0105535:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105538	obj/kern/kernel.asm	/^f0105538:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f010553b	obj/kern/kernel.asm	/^f010553b:	e9 2c ff ff ff       	jmp    f010546c <vprintfmt+0x2f>$/;"	l
f0105540	obj/kern/kernel.asm	/^f0105540:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105543	obj/kern/kernel.asm	/^f0105543:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105546	obj/kern/kernel.asm	/^f0105546:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105549	obj/kern/kernel.asm	/^f0105549:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f010554c	obj/kern/kernel.asm	/^f010554c:	8b 00                	mov    (%eax),%eax$/;"	l
f010554e	obj/kern/kernel.asm	/^f010554e:	89 c2                	mov    %eax,%edx$/;"	l
f0105550	obj/kern/kernel.asm	/^f0105550:	c1 fa 1f             	sar    $0x1f,%edx$/;"	l
f0105553	obj/kern/kernel.asm	/^f0105553:	31 d0                	xor    %edx,%eax$/;"	l
f0105555	obj/kern/kernel.asm	/^f0105555:	29 d0                	sub    %edx,%eax$/;"	l
f0105557	obj/kern/kernel.asm	/^f0105557:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f010555a	obj/kern/kernel.asm	/^f010555a:	7f 0b                	jg     f0105567 <vprintfmt+0x12a>$/;"	l
f010555c	obj/kern/kernel.asm	/^f010555c:	8b 14 85 00 82 10 f0 	mov    -0xfef7e00(,%eax,4),%edx$/;"	l
f0105563	obj/kern/kernel.asm	/^f0105563:	85 d2                	test   %edx,%edx$/;"	l
f0105565	obj/kern/kernel.asm	/^f0105565:	75 26                	jne    f010558d <vprintfmt+0x150>$/;"	l
f0105567	obj/kern/kernel.asm	/^f0105567:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010556b	obj/kern/kernel.asm	/^f010556b:	c7 44 24 08 73 7f 10 	movl   $0xf0107f73,0x8(%esp)$/;"	l
f0105572	obj/kern/kernel.asm	/^f0105572:	f0 $/;"	l
f0105573	obj/kern/kernel.asm	/^f0105573:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105576	obj/kern/kernel.asm	/^f0105576:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f010557a	obj/kern/kernel.asm	/^f010557a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010557d	obj/kern/kernel.asm	/^f010557d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105580	obj/kern/kernel.asm	/^f0105580:	e8 9f 03 00 00       	call   f0105924 <printfmt>$/;"	l
f0105585	obj/kern/kernel.asm	/^f0105585:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0105588	obj/kern/kernel.asm	/^f0105588:	e9 df fe ff ff       	jmp    f010546c <vprintfmt+0x2f>$/;"	l
f010558d	obj/kern/kernel.asm	/^f010558d:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0105591	obj/kern/kernel.asm	/^f0105591:	c7 44 24 08 b9 76 10 	movl   $0xf01076b9,0x8(%esp)$/;"	l
f0105598	obj/kern/kernel.asm	/^f0105598:	f0 $/;"	l
f0105599	obj/kern/kernel.asm	/^f0105599:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010559c	obj/kern/kernel.asm	/^f010559c:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01055a0	obj/kern/kernel.asm	/^f01055a0:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f01055a3	obj/kern/kernel.asm	/^f01055a3:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f01055a6	obj/kern/kernel.asm	/^f01055a6:	e8 79 03 00 00       	call   f0105924 <printfmt>$/;"	l
f01055ab	obj/kern/kernel.asm	/^f01055ab:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f01055ae	obj/kern/kernel.asm	/^f01055ae:	e9 b9 fe ff ff       	jmp    f010546c <vprintfmt+0x2f>$/;"	l
f01055b3	obj/kern/kernel.asm	/^f01055b3:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01055b6	obj/kern/kernel.asm	/^f01055b6:	89 c3                	mov    %eax,%ebx$/;"	l
f01055b8	obj/kern/kernel.asm	/^f01055b8:	89 f9                	mov    %edi,%ecx$/;"	l
f01055ba	obj/kern/kernel.asm	/^f01055ba:	89 75 cc             	mov    %esi,-0x34(%ebp)$/;"	l
f01055bd	obj/kern/kernel.asm	/^f01055bd:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01055c0	obj/kern/kernel.asm	/^f01055c0:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f01055c3	obj/kern/kernel.asm	/^f01055c3:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f01055c6	obj/kern/kernel.asm	/^f01055c6:	8b 00                	mov    (%eax),%eax$/;"	l
f01055c8	obj/kern/kernel.asm	/^f01055c8:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f01055cb	obj/kern/kernel.asm	/^f01055cb:	85 c0                	test   %eax,%eax$/;"	l
f01055cd	obj/kern/kernel.asm	/^f01055cd:	75 07                	jne    f01055d6 <vprintfmt+0x199>$/;"	l
f01055cf	obj/kern/kernel.asm	/^f01055cf:	c7 45 dc 7c 7f 10 f0 	movl   $0xf0107f7c,-0x24(%ebp)$/;"	l
f01055d6	obj/kern/kernel.asm	/^f01055d6:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)$/;"	l
f01055da	obj/kern/kernel.asm	/^f01055da:	7e 06                	jle    f01055e2 <vprintfmt+0x1a5>$/;"	l
f01055dc	obj/kern/kernel.asm	/^f01055dc:	80 7d d8 2d          	cmpb   $0x2d,-0x28(%ebp)$/;"	l
f01055e0	obj/kern/kernel.asm	/^f01055e0:	75 13                	jne    f01055f5 <vprintfmt+0x1b8>$/;"	l
f01055e2	obj/kern/kernel.asm	/^f01055e2:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f01055e5	obj/kern/kernel.asm	/^f01055e5:	0f be 02             	movsbl (%edx),%eax$/;"	l
f01055e8	obj/kern/kernel.asm	/^f01055e8:	85 c0                	test   %eax,%eax$/;"	l
f01055ea	obj/kern/kernel.asm	/^f01055ea:	0f 85 95 00 00 00    	jne    f0105685 <vprintfmt+0x248>$/;"	l
f01055f0	obj/kern/kernel.asm	/^f01055f0:	e9 85 00 00 00       	jmp    f010567a <vprintfmt+0x23d>$/;"	l
f01055f5	obj/kern/kernel.asm	/^f01055f5:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f01055f9	obj/kern/kernel.asm	/^f01055f9:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f01055fc	obj/kern/kernel.asm	/^f01055fc:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f01055ff	obj/kern/kernel.asm	/^f01055ff:	e8 47 04 00 00       	call   f0105a4b <strnlen>$/;"	l
f0105604	obj/kern/kernel.asm	/^f0105604:	8b 75 cc             	mov    -0x34(%ebp),%esi$/;"	l
f0105607	obj/kern/kernel.asm	/^f0105607:	29 c6                	sub    %eax,%esi$/;"	l
f0105609	obj/kern/kernel.asm	/^f0105609:	85 f6                	test   %esi,%esi$/;"	l
f010560b	obj/kern/kernel.asm	/^f010560b:	7e d5                	jle    f01055e2 <vprintfmt+0x1a5>$/;"	l
f010560d	obj/kern/kernel.asm	/^f010560d:	0f be 45 d8          	movsbl -0x28(%ebp),%eax$/;"	l
f0105611	obj/kern/kernel.asm	/^f0105611:	89 7d cc             	mov    %edi,-0x34(%ebp)$/;"	l
f0105614	obj/kern/kernel.asm	/^f0105614:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0105617	obj/kern/kernel.asm	/^f0105617:	89 5d c8             	mov    %ebx,-0x38(%ebp)$/;"	l
f010561a	obj/kern/kernel.asm	/^f010561a:	89 c3                	mov    %eax,%ebx$/;"	l
f010561c	obj/kern/kernel.asm	/^f010561c:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105620	obj/kern/kernel.asm	/^f0105620:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0105623	obj/kern/kernel.asm	/^f0105623:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105626	obj/kern/kernel.asm	/^f0105626:	83 ee 01             	sub    $0x1,%esi$/;"	l
f0105629	obj/kern/kernel.asm	/^f0105629:	85 f6                	test   %esi,%esi$/;"	l
f010562b	obj/kern/kernel.asm	/^f010562b:	7f ef                	jg     f010561c <vprintfmt+0x1df>$/;"	l
f010562d	obj/kern/kernel.asm	/^f010562d:	8b 7d cc             	mov    -0x34(%ebp),%edi$/;"	l
f0105630	obj/kern/kernel.asm	/^f0105630:	8b 5d c8             	mov    -0x38(%ebp),%ebx$/;"	l
f0105633	obj/kern/kernel.asm	/^f0105633:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0105638	obj/kern/kernel.asm	/^f0105638:	eb a8                	jmp    f01055e2 <vprintfmt+0x1a5>$/;"	l
f010563a	obj/kern/kernel.asm	/^f010563a:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f010563e	obj/kern/kernel.asm	/^f010563e:	74 1b                	je     f010565b <vprintfmt+0x21e>$/;"	l
f0105640	obj/kern/kernel.asm	/^f0105640:	8d 50 e0             	lea    -0x20(%eax),%edx$/;"	l
f0105643	obj/kern/kernel.asm	/^f0105643:	83 fa 5e             	cmp    $0x5e,%edx$/;"	l
f0105646	obj/kern/kernel.asm	/^f0105646:	76 13                	jbe    f010565b <vprintfmt+0x21e>$/;"	l
f0105648	obj/kern/kernel.asm	/^f0105648:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010564b	obj/kern/kernel.asm	/^f010564b:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f010564f	obj/kern/kernel.asm	/^f010564f:	c7 04 24 3f 00 00 00 	movl   $0x3f,(%esp)$/;"	l
f0105656	obj/kern/kernel.asm	/^f0105656:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105659	obj/kern/kernel.asm	/^f0105659:	eb 0d                	jmp    f0105668 <vprintfmt+0x22b>$/;"	l
f010565b	obj/kern/kernel.asm	/^f010565b:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f010565e	obj/kern/kernel.asm	/^f010565e:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0105662	obj/kern/kernel.asm	/^f0105662:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105665	obj/kern/kernel.asm	/^f0105665:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105668	obj/kern/kernel.asm	/^f0105668:	83 ee 01             	sub    $0x1,%esi$/;"	l
f010566b	obj/kern/kernel.asm	/^f010566b:	0f be 03             	movsbl (%ebx),%eax$/;"	l
f010566e	obj/kern/kernel.asm	/^f010566e:	85 c0                	test   %eax,%eax$/;"	l
f0105670	obj/kern/kernel.asm	/^f0105670:	74 05                	je     f0105677 <vprintfmt+0x23a>$/;"	l
f0105672	obj/kern/kernel.asm	/^f0105672:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0105675	obj/kern/kernel.asm	/^f0105675:	eb 19                	jmp    f0105690 <vprintfmt+0x253>$/;"	l
f0105677	obj/kern/kernel.asm	/^f0105677:	8b 5d d8             	mov    -0x28(%ebp),%ebx$/;"	l
f010567a	obj/kern/kernel.asm	/^f010567a:	85 f6                	test   %esi,%esi$/;"	l
f010567c	obj/kern/kernel.asm	/^f010567c:	7f 20                	jg     f010569e <vprintfmt+0x261>$/;"	l
f010567e	obj/kern/kernel.asm	/^f010567e:	66 90                	xchg   %ax,%ax$/;"	l
f0105680	obj/kern/kernel.asm	/^f0105680:	e9 e4 fd ff ff       	jmp    f0105469 <vprintfmt+0x2c>$/;"	l
f0105685	obj/kern/kernel.asm	/^f0105685:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0105688	obj/kern/kernel.asm	/^f0105688:	83 c2 01             	add    $0x1,%edx$/;"	l
f010568b	obj/kern/kernel.asm	/^f010568b:	89 5d d8             	mov    %ebx,-0x28(%ebp)$/;"	l
f010568e	obj/kern/kernel.asm	/^f010568e:	89 d3                	mov    %edx,%ebx$/;"	l
f0105690	obj/kern/kernel.asm	/^f0105690:	85 ff                	test   %edi,%edi$/;"	l
f0105692	obj/kern/kernel.asm	/^f0105692:	78 a6                	js     f010563a <vprintfmt+0x1fd>$/;"	l
f0105694	obj/kern/kernel.asm	/^f0105694:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0105697	obj/kern/kernel.asm	/^f0105697:	79 a1                	jns    f010563a <vprintfmt+0x1fd>$/;"	l
f0105699	obj/kern/kernel.asm	/^f0105699:	8b 5d d8             	mov    -0x28(%ebp),%ebx$/;"	l
f010569c	obj/kern/kernel.asm	/^f010569c:	eb dc                	jmp    f010567a <vprintfmt+0x23d>$/;"	l
f010569e	obj/kern/kernel.asm	/^f010569e:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01056a1	obj/kern/kernel.asm	/^f01056a1:	89 5d e0             	mov    %ebx,-0x20(%ebp)$/;"	l
f01056a4	obj/kern/kernel.asm	/^f01056a4:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01056a7	obj/kern/kernel.asm	/^f01056a7:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01056ab	obj/kern/kernel.asm	/^f01056ab:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
f01056b2	obj/kern/kernel.asm	/^f01056b2:	ff d7                	call   *%edi$/;"	l
f01056b4	obj/kern/kernel.asm	/^f01056b4:	83 ee 01             	sub    $0x1,%esi$/;"	l
f01056b7	obj/kern/kernel.asm	/^f01056b7:	85 f6                	test   %esi,%esi$/;"	l
f01056b9	obj/kern/kernel.asm	/^f01056b9:	7f ec                	jg     f01056a7 <vprintfmt+0x26a>$/;"	l
f01056bb	obj/kern/kernel.asm	/^f01056bb:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f01056be	obj/kern/kernel.asm	/^f01056be:	e9 a9 fd ff ff       	jmp    f010546c <vprintfmt+0x2f>$/;"	l
f01056c3	obj/kern/kernel.asm	/^f01056c3:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01056c6	obj/kern/kernel.asm	/^f01056c6:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f01056c9	obj/kern/kernel.asm	/^f01056c9:	7e 16                	jle    f01056e1 <vprintfmt+0x2a4>$/;"	l
f01056cb	obj/kern/kernel.asm	/^f01056cb:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01056ce	obj/kern/kernel.asm	/^f01056ce:	8d 50 08             	lea    0x8(%eax),%edx$/;"	l
f01056d1	obj/kern/kernel.asm	/^f01056d1:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f01056d4	obj/kern/kernel.asm	/^f01056d4:	8b 10                	mov    (%eax),%edx$/;"	l
f01056d6	obj/kern/kernel.asm	/^f01056d6:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
f01056d9	obj/kern/kernel.asm	/^f01056d9:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f01056dc	obj/kern/kernel.asm	/^f01056dc:	89 4d e4             	mov    %ecx,-0x1c(%ebp)$/;"	l
f01056df	obj/kern/kernel.asm	/^f01056df:	eb 32                	jmp    f0105713 <vprintfmt+0x2d6>$/;"	l
f01056e1	obj/kern/kernel.asm	/^f01056e1:	85 c9                	test   %ecx,%ecx$/;"	l
f01056e3	obj/kern/kernel.asm	/^f01056e3:	74 18                	je     f01056fd <vprintfmt+0x2c0>$/;"	l
f01056e5	obj/kern/kernel.asm	/^f01056e5:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01056e8	obj/kern/kernel.asm	/^f01056e8:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f01056eb	obj/kern/kernel.asm	/^f01056eb:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f01056ee	obj/kern/kernel.asm	/^f01056ee:	8b 00                	mov    (%eax),%eax$/;"	l
f01056f0	obj/kern/kernel.asm	/^f01056f0:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f01056f3	obj/kern/kernel.asm	/^f01056f3:	89 c1                	mov    %eax,%ecx$/;"	l
f01056f5	obj/kern/kernel.asm	/^f01056f5:	c1 f9 1f             	sar    $0x1f,%ecx$/;"	l
f01056f8	obj/kern/kernel.asm	/^f01056f8:	89 4d e4             	mov    %ecx,-0x1c(%ebp)$/;"	l
f01056fb	obj/kern/kernel.asm	/^f01056fb:	eb 16                	jmp    f0105713 <vprintfmt+0x2d6>$/;"	l
f01056fd	obj/kern/kernel.asm	/^f01056fd:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105700	obj/kern/kernel.asm	/^f0105700:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105703	obj/kern/kernel.asm	/^f0105703:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105706	obj/kern/kernel.asm	/^f0105706:	8b 00                	mov    (%eax),%eax$/;"	l
f0105708	obj/kern/kernel.asm	/^f0105708:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f010570b	obj/kern/kernel.asm	/^f010570b:	89 c2                	mov    %eax,%edx$/;"	l
f010570d	obj/kern/kernel.asm	/^f010570d:	c1 fa 1f             	sar    $0x1f,%edx$/;"	l
f0105710	obj/kern/kernel.asm	/^f0105710:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0105713	obj/kern/kernel.asm	/^f0105713:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105716	obj/kern/kernel.asm	/^f0105716:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0105719	obj/kern/kernel.asm	/^f0105719:	b9 0a 00 00 00       	mov    $0xa,%ecx$/;"	l
f010571e	obj/kern/kernel.asm	/^f010571e:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0105722	obj/kern/kernel.asm	/^f0105722:	0f 89 9b 00 00 00    	jns    f01057c3 <vprintfmt+0x386>$/;"	l
f0105728	obj/kern/kernel.asm	/^f0105728:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f010572b	obj/kern/kernel.asm	/^f010572b:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f010572f	obj/kern/kernel.asm	/^f010572f:	c7 04 24 2d 00 00 00 	movl   $0x2d,(%esp)$/;"	l
f0105736	obj/kern/kernel.asm	/^f0105736:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105739	obj/kern/kernel.asm	/^f0105739:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010573c	obj/kern/kernel.asm	/^f010573c:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f010573f	obj/kern/kernel.asm	/^f010573f:	f7 d8                	neg    %eax$/;"	l
f0105741	obj/kern/kernel.asm	/^f0105741:	83 d2 00             	adc    $0x0,%edx$/;"	l
f0105744	obj/kern/kernel.asm	/^f0105744:	f7 da                	neg    %edx$/;"	l
f0105746	obj/kern/kernel.asm	/^f0105746:	b9 0a 00 00 00       	mov    $0xa,%ecx$/;"	l
f010574b	obj/kern/kernel.asm	/^f010574b:	eb 76                	jmp    f01057c3 <vprintfmt+0x386>$/;"	l
f010574d	obj/kern/kernel.asm	/^f010574d:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105750	obj/kern/kernel.asm	/^f0105750:	89 ca                	mov    %ecx,%edx$/;"	l
f0105752	obj/kern/kernel.asm	/^f0105752:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105755	obj/kern/kernel.asm	/^f0105755:	e8 8c fc ff ff       	call   f01053e6 <getuint>$/;"	l
f010575a	obj/kern/kernel.asm	/^f010575a:	b9 0a 00 00 00       	mov    $0xa,%ecx$/;"	l
f010575f	obj/kern/kernel.asm	/^f010575f:	eb 62                	jmp    f01057c3 <vprintfmt+0x386>$/;"	l
f0105761	obj/kern/kernel.asm	/^f0105761:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105764	obj/kern/kernel.asm	/^f0105764:	89 ca                	mov    %ecx,%edx$/;"	l
f0105766	obj/kern/kernel.asm	/^f0105766:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105769	obj/kern/kernel.asm	/^f0105769:	e8 78 fc ff ff       	call   f01053e6 <getuint>$/;"	l
f010576e	obj/kern/kernel.asm	/^f010576e:	b9 08 00 00 00       	mov    $0x8,%ecx$/;"	l
f0105773	obj/kern/kernel.asm	/^f0105773:	eb 4e                	jmp    f01057c3 <vprintfmt+0x386>$/;"	l
f0105775	obj/kern/kernel.asm	/^f0105775:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105778	obj/kern/kernel.asm	/^f0105778:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010577b	obj/kern/kernel.asm	/^f010577b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010577f	obj/kern/kernel.asm	/^f010577f:	c7 04 24 30 00 00 00 	movl   $0x30,(%esp)$/;"	l
f0105786	obj/kern/kernel.asm	/^f0105786:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105789	obj/kern/kernel.asm	/^f0105789:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010578c	obj/kern/kernel.asm	/^f010578c:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0105790	obj/kern/kernel.asm	/^f0105790:	c7 04 24 78 00 00 00 	movl   $0x78,(%esp)$/;"	l
f0105797	obj/kern/kernel.asm	/^f0105797:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010579a	obj/kern/kernel.asm	/^f010579a:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010579d	obj/kern/kernel.asm	/^f010579d:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f01057a0	obj/kern/kernel.asm	/^f01057a0:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f01057a3	obj/kern/kernel.asm	/^f01057a3:	8b 00                	mov    (%eax),%eax$/;"	l
f01057a5	obj/kern/kernel.asm	/^f01057a5:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01057aa	obj/kern/kernel.asm	/^f01057aa:	b9 10 00 00 00       	mov    $0x10,%ecx$/;"	l
f01057af	obj/kern/kernel.asm	/^f01057af:	eb 12                	jmp    f01057c3 <vprintfmt+0x386>$/;"	l
f01057b1	obj/kern/kernel.asm	/^f01057b1:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01057b4	obj/kern/kernel.asm	/^f01057b4:	89 ca                	mov    %ecx,%edx$/;"	l
f01057b6	obj/kern/kernel.asm	/^f01057b6:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f01057b9	obj/kern/kernel.asm	/^f01057b9:	e8 28 fc ff ff       	call   f01053e6 <getuint>$/;"	l
f01057be	obj/kern/kernel.asm	/^f01057be:	b9 10 00 00 00       	mov    $0x10,%ecx$/;"	l
f01057c3	obj/kern/kernel.asm	/^f01057c3:	0f be 5d d8          	movsbl -0x28(%ebp),%ebx$/;"	l
f01057c7	obj/kern/kernel.asm	/^f01057c7:	89 5c 24 10          	mov    %ebx,0x10(%esp)$/;"	l
f01057cb	obj/kern/kernel.asm	/^f01057cb:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f01057cf	obj/kern/kernel.asm	/^f01057cf:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f01057d3	obj/kern/kernel.asm	/^f01057d3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01057d6	obj/kern/kernel.asm	/^f01057d6:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01057da	obj/kern/kernel.asm	/^f01057da:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01057dd	obj/kern/kernel.asm	/^f01057dd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01057e0	obj/kern/kernel.asm	/^f01057e0:	e8 0b fb ff ff       	call   f01052f0 <printnum>$/;"	l
f01057e5	obj/kern/kernel.asm	/^f01057e5:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f01057e8	obj/kern/kernel.asm	/^f01057e8:	e9 7f fc ff ff       	jmp    f010546c <vprintfmt+0x2f>$/;"	l
f01057ed	obj/kern/kernel.asm	/^f01057ed:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01057f0	obj/kern/kernel.asm	/^f01057f0:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01057f3	obj/kern/kernel.asm	/^f01057f3:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f01057f6	obj/kern/kernel.asm	/^f01057f6:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f01057f9	obj/kern/kernel.asm	/^f01057f9:	8b 00                	mov    (%eax),%eax$/;"	l
f01057fb	obj/kern/kernel.asm	/^f01057fb:	85 c0                	test   %eax,%eax$/;"	l
f01057fd	obj/kern/kernel.asm	/^f01057fd:	75 2a                	jne    f0105829 <vprintfmt+0x3ec>$/;"	l
f01057ff	obj/kern/kernel.asm	/^f01057ff:	c7 44 24 0c 18 80 10 	movl   $0xf0108018,0xc(%esp)$/;"	l
f0105806	obj/kern/kernel.asm	/^f0105806:	f0 $/;"	l
f0105807	obj/kern/kernel.asm	/^f0105807:	c7 44 24 08 b9 76 10 	movl   $0xf01076b9,0x8(%esp)$/;"	l
f010580e	obj/kern/kernel.asm	/^f010580e:	f0 $/;"	l
f010580f	obj/kern/kernel.asm	/^f010580f:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105812	obj/kern/kernel.asm	/^f0105812:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0105816	obj/kern/kernel.asm	/^f0105816:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105819	obj/kern/kernel.asm	/^f0105819:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010581c	obj/kern/kernel.asm	/^f010581c:	e8 03 01 00 00       	call   f0105924 <printfmt>$/;"	l
f0105821	obj/kern/kernel.asm	/^f0105821:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0105824	obj/kern/kernel.asm	/^f0105824:	e9 43 fc ff ff       	jmp    f010546c <vprintfmt+0x2f>$/;"	l
f0105829	obj/kern/kernel.asm	/^f0105829:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f010582c	obj/kern/kernel.asm	/^f010582c:	8b 11                	mov    (%ecx),%edx$/;"	l
f010582e	obj/kern/kernel.asm	/^f010582e:	88 10                	mov    %dl,(%eax)$/;"	l
f0105830	obj/kern/kernel.asm	/^f0105830:	83 39 7f             	cmpl   $0x7f,(%ecx)$/;"	l
f0105833	obj/kern/kernel.asm	/^f0105833:	0f 8e 30 fc ff ff    	jle    f0105469 <vprintfmt+0x2c>$/;"	l
f0105839	obj/kern/kernel.asm	/^f0105839:	c7 44 24 0c 50 80 10 	movl   $0xf0108050,0xc(%esp)$/;"	l
f0105840	obj/kern/kernel.asm	/^f0105840:	f0 $/;"	l
f0105841	obj/kern/kernel.asm	/^f0105841:	c7 44 24 08 b9 76 10 	movl   $0xf01076b9,0x8(%esp)$/;"	l
f0105848	obj/kern/kernel.asm	/^f0105848:	f0 $/;"	l
f0105849	obj/kern/kernel.asm	/^f0105849:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f010584d	obj/kern/kernel.asm	/^f010584d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105850	obj/kern/kernel.asm	/^f0105850:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105853	obj/kern/kernel.asm	/^f0105853:	e8 cc 00 00 00       	call   f0105924 <printfmt>$/;"	l
f0105858	obj/kern/kernel.asm	/^f0105858:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f010585b	obj/kern/kernel.asm	/^f010585b:	e9 0c fc ff ff       	jmp    f010546c <vprintfmt+0x2f>$/;"	l
f0105860	obj/kern/kernel.asm	/^f0105860:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105863	obj/kern/kernel.asm	/^f0105863:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0105866	obj/kern/kernel.asm	/^f0105866:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105869	obj/kern/kernel.asm	/^f0105869:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f010586d	obj/kern/kernel.asm	/^f010586d:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0105870	obj/kern/kernel.asm	/^f0105870:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105873	obj/kern/kernel.asm	/^f0105873:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0105876	obj/kern/kernel.asm	/^f0105876:	e9 f1 fb ff ff       	jmp    f010546c <vprintfmt+0x2f>$/;"	l
f010587b	obj/kern/kernel.asm	/^f010587b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010587e	obj/kern/kernel.asm	/^f010587e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105882	obj/kern/kernel.asm	/^f0105882:	c7 04 24 25 00 00 00 	movl   $0x25,(%esp)$/;"	l
f0105889	obj/kern/kernel.asm	/^f0105889:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010588c	obj/kern/kernel.asm	/^f010588c:	8d 43 ff             	lea    -0x1(%ebx),%eax$/;"	l
f010588f	obj/kern/kernel.asm	/^f010588f:	80 38 25             	cmpb   $0x25,(%eax)$/;"	l
f0105892	obj/kern/kernel.asm	/^f0105892:	0f 84 d4 fb ff ff    	je     f010546c <vprintfmt+0x2f>$/;"	l
f0105898	obj/kern/kernel.asm	/^f0105898:	89 c3                	mov    %eax,%ebx$/;"	l
f010589a	obj/kern/kernel.asm	/^f010589a:	eb f0                	jmp    f010588c <vprintfmt+0x44f>$/;"	l
f010589c	obj/kern/kernel.asm	/^f010589c:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f010589f	obj/kern/kernel.asm	/^f010589f:	5b                   	pop    %ebx$/;"	l
f01058a0	obj/kern/kernel.asm	/^f01058a0:	5e                   	pop    %esi$/;"	l
f01058a1	obj/kern/kernel.asm	/^f01058a1:	5f                   	pop    %edi$/;"	l
f01058a2	obj/kern/kernel.asm	/^f01058a2:	5d                   	pop    %ebp$/;"	l
f01058a3	obj/kern/kernel.asm	/^f01058a3:	c3                   	ret    $/;"	l
f01058a4	obj/kern/kernel.asm	/^f01058a4 <vsnprintf>:$/;"	l
f01058a4	obj/kern/kernel.asm	/^f01058a4:	55                   	push   %ebp$/;"	l
f01058a5	obj/kern/kernel.asm	/^f01058a5:	89 e5                	mov    %esp,%ebp$/;"	l
f01058a7	obj/kern/kernel.asm	/^f01058a7:	83 ec 28             	sub    $0x28,%esp$/;"	l
f01058aa	obj/kern/kernel.asm	/^f01058aa:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01058ad	obj/kern/kernel.asm	/^f01058ad:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01058b0	obj/kern/kernel.asm	/^f01058b0:	85 c0                	test   %eax,%eax$/;"	l
f01058b2	obj/kern/kernel.asm	/^f01058b2:	74 04                	je     f01058b8 <vsnprintf+0x14>$/;"	l
f01058b4	obj/kern/kernel.asm	/^f01058b4:	85 d2                	test   %edx,%edx$/;"	l
f01058b6	obj/kern/kernel.asm	/^f01058b6:	7f 07                	jg     f01058bf <vsnprintf+0x1b>$/;"	l
f01058b8	obj/kern/kernel.asm	/^f01058b8:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01058bd	obj/kern/kernel.asm	/^f01058bd:	eb 3b                	jmp    f01058fa <vsnprintf+0x56>$/;"	l
f01058bf	obj/kern/kernel.asm	/^f01058bf:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f01058c2	obj/kern/kernel.asm	/^f01058c2:	8d 44 10 ff          	lea    -0x1(%eax,%edx,1),%eax$/;"	l
f01058c6	obj/kern/kernel.asm	/^f01058c6:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f01058c9	obj/kern/kernel.asm	/^f01058c9:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f01058d0	obj/kern/kernel.asm	/^f01058d0:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01058d3	obj/kern/kernel.asm	/^f01058d3:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01058d7	obj/kern/kernel.asm	/^f01058d7:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01058da	obj/kern/kernel.asm	/^f01058da:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01058de	obj/kern/kernel.asm	/^f01058de:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f01058e1	obj/kern/kernel.asm	/^f01058e1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01058e5	obj/kern/kernel.asm	/^f01058e5:	c7 04 24 20 54 10 f0 	movl   $0xf0105420,(%esp)$/;"	l
f01058ec	obj/kern/kernel.asm	/^f01058ec:	e8 4c fb ff ff       	call   f010543d <vprintfmt>$/;"	l
f01058f1	obj/kern/kernel.asm	/^f01058f1:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f01058f4	obj/kern/kernel.asm	/^f01058f4:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f01058f7	obj/kern/kernel.asm	/^f01058f7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01058fa	obj/kern/kernel.asm	/^f01058fa:	c9                   	leave  $/;"	l
f01058fb	obj/kern/kernel.asm	/^f01058fb:	c3                   	ret    $/;"	l
f01058fc	obj/kern/kernel.asm	/^f01058fc <snprintf>:$/;"	l
f01058fc	obj/kern/kernel.asm	/^f01058fc:	55                   	push   %ebp$/;"	l
f01058fd	obj/kern/kernel.asm	/^f01058fd:	89 e5                	mov    %esp,%ebp$/;"	l
f01058ff	obj/kern/kernel.asm	/^f01058ff:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0105902	obj/kern/kernel.asm	/^f0105902:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105905	obj/kern/kernel.asm	/^f0105905:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105909	obj/kern/kernel.asm	/^f0105909:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010590c	obj/kern/kernel.asm	/^f010590c:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105910	obj/kern/kernel.asm	/^f0105910:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105913	obj/kern/kernel.asm	/^f0105913:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105917	obj/kern/kernel.asm	/^f0105917:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010591a	obj/kern/kernel.asm	/^f010591a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010591d	obj/kern/kernel.asm	/^f010591d:	e8 82 ff ff ff       	call   f01058a4 <vsnprintf>$/;"	l
f0105922	obj/kern/kernel.asm	/^f0105922:	c9                   	leave  $/;"	l
f0105923	obj/kern/kernel.asm	/^f0105923:	c3                   	ret    $/;"	l
f0105924	obj/kern/kernel.asm	/^f0105924 <printfmt>:$/;"	l
f0105924	obj/kern/kernel.asm	/^f0105924:	55                   	push   %ebp$/;"	l
f0105925	obj/kern/kernel.asm	/^f0105925:	89 e5                	mov    %esp,%ebp$/;"	l
f0105927	obj/kern/kernel.asm	/^f0105927:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010592a	obj/kern/kernel.asm	/^f010592a:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f010592d	obj/kern/kernel.asm	/^f010592d:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105931	obj/kern/kernel.asm	/^f0105931:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105934	obj/kern/kernel.asm	/^f0105934:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105938	obj/kern/kernel.asm	/^f0105938:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010593b	obj/kern/kernel.asm	/^f010593b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010593f	obj/kern/kernel.asm	/^f010593f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105942	obj/kern/kernel.asm	/^f0105942:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105945	obj/kern/kernel.asm	/^f0105945:	e8 f3 fa ff ff       	call   f010543d <vprintfmt>$/;"	l
f010594a	obj/kern/kernel.asm	/^f010594a:	c9                   	leave  $/;"	l
f010594b	obj/kern/kernel.asm	/^f010594b:	c3                   	ret    $/;"	l
f010594c	obj/kern/kernel.asm	/^f010594c:	00 00                	add    %al,(%eax)$/;"	l
f0105950	obj/kern/kernel.asm	/^f0105950 <readline>:$/;"	l
f0105950	obj/kern/kernel.asm	/^f0105950:	55                   	push   %ebp$/;"	l
f0105951	obj/kern/kernel.asm	/^f0105951:	89 e5                	mov    %esp,%ebp$/;"	l
f0105953	obj/kern/kernel.asm	/^f0105953:	57                   	push   %edi$/;"	l
f0105954	obj/kern/kernel.asm	/^f0105954:	56                   	push   %esi$/;"	l
f0105955	obj/kern/kernel.asm	/^f0105955:	53                   	push   %ebx$/;"	l
f0105956	obj/kern/kernel.asm	/^f0105956:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0105959	obj/kern/kernel.asm	/^f0105959:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010595c	obj/kern/kernel.asm	/^f010595c:	85 c0                	test   %eax,%eax$/;"	l
f010595e	obj/kern/kernel.asm	/^f010595e:	74 10                	je     f0105970 <readline+0x20>$/;"	l
f0105960	obj/kern/kernel.asm	/^f0105960:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105964	obj/kern/kernel.asm	/^f0105964:	c7 04 24 b9 76 10 f0 	movl   $0xf01076b9,(%esp)$/;"	l
f010596b	obj/kern/kernel.asm	/^f010596b:	e8 3f e9 ff ff       	call   f01042af <cprintf>$/;"	l
f0105970	obj/kern/kernel.asm	/^f0105970:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0105977	obj/kern/kernel.asm	/^f0105977:	e8 4a ab ff ff       	call   f01004c6 <iscons>$/;"	l
f010597c	obj/kern/kernel.asm	/^f010597c:	89 c7                	mov    %eax,%edi$/;"	l
f010597e	obj/kern/kernel.asm	/^f010597e:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0105983	obj/kern/kernel.asm	/^f0105983:	e8 2d ab ff ff       	call   f01004b5 <getchar>$/;"	l
f0105988	obj/kern/kernel.asm	/^f0105988:	89 c3                	mov    %eax,%ebx$/;"	l
f010598a	obj/kern/kernel.asm	/^f010598a:	85 c0                	test   %eax,%eax$/;"	l
f010598c	obj/kern/kernel.asm	/^f010598c:	79 17                	jns    f01059a5 <readline+0x55>$/;"	l
f010598e	obj/kern/kernel.asm	/^f010598e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105992	obj/kern/kernel.asm	/^f0105992:	c7 04 24 24 82 10 f0 	movl   $0xf0108224,(%esp)$/;"	l
f0105999	obj/kern/kernel.asm	/^f0105999:	e8 11 e9 ff ff       	call   f01042af <cprintf>$/;"	l
f010599e	obj/kern/kernel.asm	/^f010599e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01059a3	obj/kern/kernel.asm	/^f01059a3:	eb 76                	jmp    f0105a1b <readline+0xcb>$/;"	l
f01059a5	obj/kern/kernel.asm	/^f01059a5:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f01059a8	obj/kern/kernel.asm	/^f01059a8:	74 08                	je     f01059b2 <readline+0x62>$/;"	l
f01059aa	obj/kern/kernel.asm	/^f01059aa:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
f01059ad	obj/kern/kernel.asm	/^f01059ad:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f01059b0	obj/kern/kernel.asm	/^f01059b0:	75 19                	jne    f01059cb <readline+0x7b>$/;"	l
f01059b2	obj/kern/kernel.asm	/^f01059b2:	85 f6                	test   %esi,%esi$/;"	l
f01059b4	obj/kern/kernel.asm	/^f01059b4:	7e 15                	jle    f01059cb <readline+0x7b>$/;"	l
f01059b6	obj/kern/kernel.asm	/^f01059b6:	85 ff                	test   %edi,%edi$/;"	l
f01059b8	obj/kern/kernel.asm	/^f01059b8:	74 0c                	je     f01059c6 <readline+0x76>$/;"	l
f01059ba	obj/kern/kernel.asm	/^f01059ba:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)$/;"	l
f01059c1	obj/kern/kernel.asm	/^f01059c1:	e8 04 ad ff ff       	call   f01006ca <cputchar>$/;"	l
f01059c6	obj/kern/kernel.asm	/^f01059c6:	83 ee 01             	sub    $0x1,%esi$/;"	l
f01059c9	obj/kern/kernel.asm	/^f01059c9:	eb b8                	jmp    f0105983 <readline+0x33>$/;"	l
f01059cb	obj/kern/kernel.asm	/^f01059cb:	83 fb 1f             	cmp    $0x1f,%ebx$/;"	l
f01059ce	obj/kern/kernel.asm	/^f01059ce:	66 90                	xchg   %ax,%ax$/;"	l
f01059d0	obj/kern/kernel.asm	/^f01059d0:	7e 23                	jle    f01059f5 <readline+0xa5>$/;"	l
f01059d2	obj/kern/kernel.asm	/^f01059d2:	81 fe fe 03 00 00    	cmp    $0x3fe,%esi$/;"	l
f01059d8	obj/kern/kernel.asm	/^f01059d8:	7f 1b                	jg     f01059f5 <readline+0xa5>$/;"	l
f01059da	obj/kern/kernel.asm	/^f01059da:	85 ff                	test   %edi,%edi$/;"	l
f01059dc	obj/kern/kernel.asm	/^f01059dc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01059e0	obj/kern/kernel.asm	/^f01059e0:	74 08                	je     f01059ea <readline+0x9a>$/;"	l
f01059e2	obj/kern/kernel.asm	/^f01059e2:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01059e5	obj/kern/kernel.asm	/^f01059e5:	e8 e0 ac ff ff       	call   f01006ca <cputchar>$/;"	l
f01059ea	obj/kern/kernel.asm	/^f01059ea:	88 9e e0 ca 22 f0    	mov    %bl,-0xfdd3520(%esi)$/;"	l
f01059f0	obj/kern/kernel.asm	/^f01059f0:	83 c6 01             	add    $0x1,%esi$/;"	l
f01059f3	obj/kern/kernel.asm	/^f01059f3:	eb 8e                	jmp    f0105983 <readline+0x33>$/;"	l
f01059f5	obj/kern/kernel.asm	/^f01059f5:	83 fb 0a             	cmp    $0xa,%ebx$/;"	l
f01059f8	obj/kern/kernel.asm	/^f01059f8:	74 05                	je     f01059ff <readline+0xaf>$/;"	l
f01059fa	obj/kern/kernel.asm	/^f01059fa:	83 fb 0d             	cmp    $0xd,%ebx$/;"	l
f01059fd	obj/kern/kernel.asm	/^f01059fd:	75 84                	jne    f0105983 <readline+0x33>$/;"	l
f01059ff	obj/kern/kernel.asm	/^f01059ff:	85 ff                	test   %edi,%edi$/;"	l
f0105a01	obj/kern/kernel.asm	/^f0105a01:	74 0c                	je     f0105a0f <readline+0xbf>$/;"	l
f0105a03	obj/kern/kernel.asm	/^f0105a03:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)$/;"	l
f0105a0a	obj/kern/kernel.asm	/^f0105a0a:	e8 bb ac ff ff       	call   f01006ca <cputchar>$/;"	l
f0105a0f	obj/kern/kernel.asm	/^f0105a0f:	c6 86 e0 ca 22 f0 00 	movb   $0x0,-0xfdd3520(%esi)$/;"	l
f0105a16	obj/kern/kernel.asm	/^f0105a16:	b8 e0 ca 22 f0       	mov    $0xf022cae0,%eax$/;"	l
f0105a1b	obj/kern/kernel.asm	/^f0105a1b:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0105a1e	obj/kern/kernel.asm	/^f0105a1e:	5b                   	pop    %ebx$/;"	l
f0105a1f	obj/kern/kernel.asm	/^f0105a1f:	5e                   	pop    %esi$/;"	l
f0105a20	obj/kern/kernel.asm	/^f0105a20:	5f                   	pop    %edi$/;"	l
f0105a21	obj/kern/kernel.asm	/^f0105a21:	5d                   	pop    %ebp$/;"	l
f0105a22	obj/kern/kernel.asm	/^f0105a22:	c3                   	ret    $/;"	l
f0105a30	obj/kern/kernel.asm	/^f0105a30 <strlen>:$/;"	l
f0105a30	obj/kern/kernel.asm	/^f0105a30:	55                   	push   %ebp$/;"	l
f0105a31	obj/kern/kernel.asm	/^f0105a31:	89 e5                	mov    %esp,%ebp$/;"	l
f0105a33	obj/kern/kernel.asm	/^f0105a33:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0105a36	obj/kern/kernel.asm	/^f0105a36:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105a3b	obj/kern/kernel.asm	/^f0105a3b:	80 3a 00             	cmpb   $0x0,(%edx)$/;"	l
f0105a3e	obj/kern/kernel.asm	/^f0105a3e:	74 09                	je     f0105a49 <strlen+0x19>$/;"	l
f0105a40	obj/kern/kernel.asm	/^f0105a40:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105a43	obj/kern/kernel.asm	/^f0105a43:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)$/;"	l
f0105a47	obj/kern/kernel.asm	/^f0105a47:	75 f7                	jne    f0105a40 <strlen+0x10>$/;"	l
f0105a49	obj/kern/kernel.asm	/^f0105a49:	5d                   	pop    %ebp$/;"	l
f0105a4a	obj/kern/kernel.asm	/^f0105a4a:	c3                   	ret    $/;"	l
f0105a4b	obj/kern/kernel.asm	/^f0105a4b <strnlen>:$/;"	l
f0105a4b	obj/kern/kernel.asm	/^f0105a4b:	55                   	push   %ebp$/;"	l
f0105a4c	obj/kern/kernel.asm	/^f0105a4c:	89 e5                	mov    %esp,%ebp$/;"	l
f0105a4e	obj/kern/kernel.asm	/^f0105a4e:	53                   	push   %ebx$/;"	l
f0105a4f	obj/kern/kernel.asm	/^f0105a4f:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0105a52	obj/kern/kernel.asm	/^f0105a52:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105a55	obj/kern/kernel.asm	/^f0105a55:	85 c9                	test   %ecx,%ecx$/;"	l
f0105a57	obj/kern/kernel.asm	/^f0105a57:	74 19                	je     f0105a72 <strnlen+0x27>$/;"	l
f0105a59	obj/kern/kernel.asm	/^f0105a59:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f0105a5c	obj/kern/kernel.asm	/^f0105a5c:	74 14                	je     f0105a72 <strnlen+0x27>$/;"	l
f0105a5e	obj/kern/kernel.asm	/^f0105a5e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105a63	obj/kern/kernel.asm	/^f0105a63:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105a66	obj/kern/kernel.asm	/^f0105a66:	39 c8                	cmp    %ecx,%eax$/;"	l
f0105a68	obj/kern/kernel.asm	/^f0105a68:	74 0d                	je     f0105a77 <strnlen+0x2c>$/;"	l
f0105a6a	obj/kern/kernel.asm	/^f0105a6a:	80 3c 03 00          	cmpb   $0x0,(%ebx,%eax,1)$/;"	l
f0105a6e	obj/kern/kernel.asm	/^f0105a6e:	75 f3                	jne    f0105a63 <strnlen+0x18>$/;"	l
f0105a70	obj/kern/kernel.asm	/^f0105a70:	eb 05                	jmp    f0105a77 <strnlen+0x2c>$/;"	l
f0105a72	obj/kern/kernel.asm	/^f0105a72:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105a77	obj/kern/kernel.asm	/^f0105a77:	5b                   	pop    %ebx$/;"	l
f0105a78	obj/kern/kernel.asm	/^f0105a78:	5d                   	pop    %ebp$/;"	l
f0105a79	obj/kern/kernel.asm	/^f0105a79:	c3                   	ret    $/;"	l
f0105a7a	obj/kern/kernel.asm	/^f0105a7a <strcpy>:$/;"	l
f0105a7a	obj/kern/kernel.asm	/^f0105a7a:	55                   	push   %ebp$/;"	l
f0105a7b	obj/kern/kernel.asm	/^f0105a7b:	89 e5                	mov    %esp,%ebp$/;"	l
f0105a7d	obj/kern/kernel.asm	/^f0105a7d:	53                   	push   %ebx$/;"	l
f0105a7e	obj/kern/kernel.asm	/^f0105a7e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105a81	obj/kern/kernel.asm	/^f0105a81:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0105a84	obj/kern/kernel.asm	/^f0105a84:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105a89	obj/kern/kernel.asm	/^f0105a89:	0f b6 0c 13          	movzbl (%ebx,%edx,1),%ecx$/;"	l
f0105a8d	obj/kern/kernel.asm	/^f0105a8d:	88 0c 10             	mov    %cl,(%eax,%edx,1)$/;"	l
f0105a90	obj/kern/kernel.asm	/^f0105a90:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105a93	obj/kern/kernel.asm	/^f0105a93:	84 c9                	test   %cl,%cl$/;"	l
f0105a95	obj/kern/kernel.asm	/^f0105a95:	75 f2                	jne    f0105a89 <strcpy+0xf>$/;"	l
f0105a97	obj/kern/kernel.asm	/^f0105a97:	5b                   	pop    %ebx$/;"	l
f0105a98	obj/kern/kernel.asm	/^f0105a98:	5d                   	pop    %ebp$/;"	l
f0105a99	obj/kern/kernel.asm	/^f0105a99:	c3                   	ret    $/;"	l
f0105a9a	obj/kern/kernel.asm	/^f0105a9a <strcat>:$/;"	l
f0105a9a	obj/kern/kernel.asm	/^f0105a9a:	55                   	push   %ebp$/;"	l
f0105a9b	obj/kern/kernel.asm	/^f0105a9b:	89 e5                	mov    %esp,%ebp$/;"	l
f0105a9d	obj/kern/kernel.asm	/^f0105a9d:	53                   	push   %ebx$/;"	l
f0105a9e	obj/kern/kernel.asm	/^f0105a9e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105aa1	obj/kern/kernel.asm	/^f0105aa1:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0105aa4	obj/kern/kernel.asm	/^f0105aa4:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0105aa7	obj/kern/kernel.asm	/^f0105aa7:	e8 84 ff ff ff       	call   f0105a30 <strlen>$/;"	l
f0105aac	obj/kern/kernel.asm	/^f0105aac:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105aaf	obj/kern/kernel.asm	/^f0105aaf:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0105ab3	obj/kern/kernel.asm	/^f0105ab3:	8d 04 03             	lea    (%ebx,%eax,1),%eax$/;"	l
f0105ab6	obj/kern/kernel.asm	/^f0105ab6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105ab9	obj/kern/kernel.asm	/^f0105ab9:	e8 bc ff ff ff       	call   f0105a7a <strcpy>$/;"	l
f0105abe	obj/kern/kernel.asm	/^f0105abe:	89 d8                	mov    %ebx,%eax$/;"	l
f0105ac0	obj/kern/kernel.asm	/^f0105ac0:	83 c4 08             	add    $0x8,%esp$/;"	l
f0105ac3	obj/kern/kernel.asm	/^f0105ac3:	5b                   	pop    %ebx$/;"	l
f0105ac4	obj/kern/kernel.asm	/^f0105ac4:	5d                   	pop    %ebp$/;"	l
f0105ac5	obj/kern/kernel.asm	/^f0105ac5:	c3                   	ret    $/;"	l
f0105ac6	obj/kern/kernel.asm	/^f0105ac6 <strncpy>:$/;"	l
f0105ac6	obj/kern/kernel.asm	/^f0105ac6:	55                   	push   %ebp$/;"	l
f0105ac7	obj/kern/kernel.asm	/^f0105ac7:	89 e5                	mov    %esp,%ebp$/;"	l
f0105ac9	obj/kern/kernel.asm	/^f0105ac9:	56                   	push   %esi$/;"	l
f0105aca	obj/kern/kernel.asm	/^f0105aca:	53                   	push   %ebx$/;"	l
f0105acb	obj/kern/kernel.asm	/^f0105acb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105ace	obj/kern/kernel.asm	/^f0105ace:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105ad1	obj/kern/kernel.asm	/^f0105ad1:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0105ad4	obj/kern/kernel.asm	/^f0105ad4:	85 f6                	test   %esi,%esi$/;"	l
f0105ad6	obj/kern/kernel.asm	/^f0105ad6:	74 18                	je     f0105af0 <strncpy+0x2a>$/;"	l
f0105ad8	obj/kern/kernel.asm	/^f0105ad8:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0105add	obj/kern/kernel.asm	/^f0105add:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f0105ae0	obj/kern/kernel.asm	/^f0105ae0:	88 1c 08             	mov    %bl,(%eax,%ecx,1)$/;"	l
f0105ae3	obj/kern/kernel.asm	/^f0105ae3:	80 3a 01             	cmpb   $0x1,(%edx)$/;"	l
f0105ae6	obj/kern/kernel.asm	/^f0105ae6:	83 da ff             	sbb    $0xffffffff,%edx$/;"	l
f0105ae9	obj/kern/kernel.asm	/^f0105ae9:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105aec	obj/kern/kernel.asm	/^f0105aec:	39 ce                	cmp    %ecx,%esi$/;"	l
f0105aee	obj/kern/kernel.asm	/^f0105aee:	77 ed                	ja     f0105add <strncpy+0x17>$/;"	l
f0105af0	obj/kern/kernel.asm	/^f0105af0:	5b                   	pop    %ebx$/;"	l
f0105af1	obj/kern/kernel.asm	/^f0105af1:	5e                   	pop    %esi$/;"	l
f0105af2	obj/kern/kernel.asm	/^f0105af2:	5d                   	pop    %ebp$/;"	l
f0105af3	obj/kern/kernel.asm	/^f0105af3:	c3                   	ret    $/;"	l
f0105af4	obj/kern/kernel.asm	/^f0105af4 <strlcpy>:$/;"	l
f0105af4	obj/kern/kernel.asm	/^f0105af4:	55                   	push   %ebp$/;"	l
f0105af5	obj/kern/kernel.asm	/^f0105af5:	89 e5                	mov    %esp,%ebp$/;"	l
f0105af7	obj/kern/kernel.asm	/^f0105af7:	56                   	push   %esi$/;"	l
f0105af8	obj/kern/kernel.asm	/^f0105af8:	53                   	push   %ebx$/;"	l
f0105af9	obj/kern/kernel.asm	/^f0105af9:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105afc	obj/kern/kernel.asm	/^f0105afc:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105aff	obj/kern/kernel.asm	/^f0105aff:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0105b02	obj/kern/kernel.asm	/^f0105b02:	89 f0                	mov    %esi,%eax$/;"	l
f0105b04	obj/kern/kernel.asm	/^f0105b04:	85 c9                	test   %ecx,%ecx$/;"	l
f0105b06	obj/kern/kernel.asm	/^f0105b06:	74 27                	je     f0105b2f <strlcpy+0x3b>$/;"	l
f0105b08	obj/kern/kernel.asm	/^f0105b08:	83 e9 01             	sub    $0x1,%ecx$/;"	l
f0105b0b	obj/kern/kernel.asm	/^f0105b0b:	74 1d                	je     f0105b2a <strlcpy+0x36>$/;"	l
f0105b0d	obj/kern/kernel.asm	/^f0105b0d:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f0105b10	obj/kern/kernel.asm	/^f0105b10:	84 db                	test   %bl,%bl$/;"	l
f0105b12	obj/kern/kernel.asm	/^f0105b12:	74 16                	je     f0105b2a <strlcpy+0x36>$/;"	l
f0105b14	obj/kern/kernel.asm	/^f0105b14:	88 18                	mov    %bl,(%eax)$/;"	l
f0105b16	obj/kern/kernel.asm	/^f0105b16:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105b19	obj/kern/kernel.asm	/^f0105b19:	83 e9 01             	sub    $0x1,%ecx$/;"	l
f0105b1c	obj/kern/kernel.asm	/^f0105b1c:	74 0e                	je     f0105b2c <strlcpy+0x38>$/;"	l
f0105b1e	obj/kern/kernel.asm	/^f0105b1e:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105b21	obj/kern/kernel.asm	/^f0105b21:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f0105b24	obj/kern/kernel.asm	/^f0105b24:	84 db                	test   %bl,%bl$/;"	l
f0105b26	obj/kern/kernel.asm	/^f0105b26:	75 ec                	jne    f0105b14 <strlcpy+0x20>$/;"	l
f0105b28	obj/kern/kernel.asm	/^f0105b28:	eb 02                	jmp    f0105b2c <strlcpy+0x38>$/;"	l
f0105b2a	obj/kern/kernel.asm	/^f0105b2a:	89 f0                	mov    %esi,%eax$/;"	l
f0105b2c	obj/kern/kernel.asm	/^f0105b2c:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f0105b2f	obj/kern/kernel.asm	/^f0105b2f:	29 f0                	sub    %esi,%eax$/;"	l
f0105b31	obj/kern/kernel.asm	/^f0105b31:	5b                   	pop    %ebx$/;"	l
f0105b32	obj/kern/kernel.asm	/^f0105b32:	5e                   	pop    %esi$/;"	l
f0105b33	obj/kern/kernel.asm	/^f0105b33:	5d                   	pop    %ebp$/;"	l
f0105b34	obj/kern/kernel.asm	/^f0105b34:	c3                   	ret    $/;"	l
f0105b35	obj/kern/kernel.asm	/^f0105b35 <strcmp>:$/;"	l
f0105b35	obj/kern/kernel.asm	/^f0105b35:	55                   	push   %ebp$/;"	l
f0105b36	obj/kern/kernel.asm	/^f0105b36:	89 e5                	mov    %esp,%ebp$/;"	l
f0105b38	obj/kern/kernel.asm	/^f0105b38:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0105b3b	obj/kern/kernel.asm	/^f0105b3b:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105b3e	obj/kern/kernel.asm	/^f0105b3e:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f0105b41	obj/kern/kernel.asm	/^f0105b41:	84 c0                	test   %al,%al$/;"	l
f0105b43	obj/kern/kernel.asm	/^f0105b43:	74 15                	je     f0105b5a <strcmp+0x25>$/;"	l
f0105b45	obj/kern/kernel.asm	/^f0105b45:	3a 02                	cmp    (%edx),%al$/;"	l
f0105b47	obj/kern/kernel.asm	/^f0105b47:	75 11                	jne    f0105b5a <strcmp+0x25>$/;"	l
f0105b49	obj/kern/kernel.asm	/^f0105b49:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105b4c	obj/kern/kernel.asm	/^f0105b4c:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105b4f	obj/kern/kernel.asm	/^f0105b4f:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f0105b52	obj/kern/kernel.asm	/^f0105b52:	84 c0                	test   %al,%al$/;"	l
f0105b54	obj/kern/kernel.asm	/^f0105b54:	74 04                	je     f0105b5a <strcmp+0x25>$/;"	l
f0105b56	obj/kern/kernel.asm	/^f0105b56:	3a 02                	cmp    (%edx),%al$/;"	l
f0105b58	obj/kern/kernel.asm	/^f0105b58:	74 ef                	je     f0105b49 <strcmp+0x14>$/;"	l
f0105b5a	obj/kern/kernel.asm	/^f0105b5a:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0105b5d	obj/kern/kernel.asm	/^f0105b5d:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f0105b60	obj/kern/kernel.asm	/^f0105b60:	29 d0                	sub    %edx,%eax$/;"	l
f0105b62	obj/kern/kernel.asm	/^f0105b62:	5d                   	pop    %ebp$/;"	l
f0105b63	obj/kern/kernel.asm	/^f0105b63:	c3                   	ret    $/;"	l
f0105b64	obj/kern/kernel.asm	/^f0105b64 <strncmp>:$/;"	l
f0105b64	obj/kern/kernel.asm	/^f0105b64:	55                   	push   %ebp$/;"	l
f0105b65	obj/kern/kernel.asm	/^f0105b65:	89 e5                	mov    %esp,%ebp$/;"	l
f0105b67	obj/kern/kernel.asm	/^f0105b67:	53                   	push   %ebx$/;"	l
f0105b68	obj/kern/kernel.asm	/^f0105b68:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0105b6b	obj/kern/kernel.asm	/^f0105b6b:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105b6e	obj/kern/kernel.asm	/^f0105b6e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105b71	obj/kern/kernel.asm	/^f0105b71:	85 c0                	test   %eax,%eax$/;"	l
f0105b73	obj/kern/kernel.asm	/^f0105b73:	74 23                	je     f0105b98 <strncmp+0x34>$/;"	l
f0105b75	obj/kern/kernel.asm	/^f0105b75:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f0105b78	obj/kern/kernel.asm	/^f0105b78:	84 db                	test   %bl,%bl$/;"	l
f0105b7a	obj/kern/kernel.asm	/^f0105b7a:	74 25                	je     f0105ba1 <strncmp+0x3d>$/;"	l
f0105b7c	obj/kern/kernel.asm	/^f0105b7c:	3a 19                	cmp    (%ecx),%bl$/;"	l
f0105b7e	obj/kern/kernel.asm	/^f0105b7e:	75 21                	jne    f0105ba1 <strncmp+0x3d>$/;"	l
f0105b80	obj/kern/kernel.asm	/^f0105b80:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105b83	obj/kern/kernel.asm	/^f0105b83:	74 13                	je     f0105b98 <strncmp+0x34>$/;"	l
f0105b85	obj/kern/kernel.asm	/^f0105b85:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105b88	obj/kern/kernel.asm	/^f0105b88:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105b8b	obj/kern/kernel.asm	/^f0105b8b:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f0105b8e	obj/kern/kernel.asm	/^f0105b8e:	84 db                	test   %bl,%bl$/;"	l
f0105b90	obj/kern/kernel.asm	/^f0105b90:	74 0f                	je     f0105ba1 <strncmp+0x3d>$/;"	l
f0105b92	obj/kern/kernel.asm	/^f0105b92:	3a 19                	cmp    (%ecx),%bl$/;"	l
f0105b94	obj/kern/kernel.asm	/^f0105b94:	74 ea                	je     f0105b80 <strncmp+0x1c>$/;"	l
f0105b96	obj/kern/kernel.asm	/^f0105b96:	eb 09                	jmp    f0105ba1 <strncmp+0x3d>$/;"	l
f0105b98	obj/kern/kernel.asm	/^f0105b98:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105b9d	obj/kern/kernel.asm	/^f0105b9d:	5b                   	pop    %ebx$/;"	l
f0105b9e	obj/kern/kernel.asm	/^f0105b9e:	5d                   	pop    %ebp$/;"	l
f0105b9f	obj/kern/kernel.asm	/^f0105b9f:	90                   	nop$/;"	l
f0105ba0	obj/kern/kernel.asm	/^f0105ba0:	c3                   	ret    $/;"	l
f0105ba1	obj/kern/kernel.asm	/^f0105ba1:	0f b6 02             	movzbl (%edx),%eax$/;"	l
f0105ba4	obj/kern/kernel.asm	/^f0105ba4:	0f b6 11             	movzbl (%ecx),%edx$/;"	l
f0105ba7	obj/kern/kernel.asm	/^f0105ba7:	29 d0                	sub    %edx,%eax$/;"	l
f0105ba9	obj/kern/kernel.asm	/^f0105ba9:	eb f2                	jmp    f0105b9d <strncmp+0x39>$/;"	l
f0105bab	obj/kern/kernel.asm	/^f0105bab <strchr>:$/;"	l
f0105bab	obj/kern/kernel.asm	/^f0105bab:	55                   	push   %ebp$/;"	l
f0105bac	obj/kern/kernel.asm	/^f0105bac:	89 e5                	mov    %esp,%ebp$/;"	l
f0105bae	obj/kern/kernel.asm	/^f0105bae:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105bb1	obj/kern/kernel.asm	/^f0105bb1:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0105bb5	obj/kern/kernel.asm	/^f0105bb5:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0105bb8	obj/kern/kernel.asm	/^f0105bb8:	84 d2                	test   %dl,%dl$/;"	l
f0105bba	obj/kern/kernel.asm	/^f0105bba:	74 18                	je     f0105bd4 <strchr+0x29>$/;"	l
f0105bbc	obj/kern/kernel.asm	/^f0105bbc:	38 ca                	cmp    %cl,%dl$/;"	l
f0105bbe	obj/kern/kernel.asm	/^f0105bbe:	75 0a                	jne    f0105bca <strchr+0x1f>$/;"	l
f0105bc0	obj/kern/kernel.asm	/^f0105bc0:	eb 17                	jmp    f0105bd9 <strchr+0x2e>$/;"	l
f0105bc2	obj/kern/kernel.asm	/^f0105bc2:	38 ca                	cmp    %cl,%dl$/;"	l
f0105bc4	obj/kern/kernel.asm	/^f0105bc4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0105bc8	obj/kern/kernel.asm	/^f0105bc8:	74 0f                	je     f0105bd9 <strchr+0x2e>$/;"	l
f0105bca	obj/kern/kernel.asm	/^f0105bca:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105bcd	obj/kern/kernel.asm	/^f0105bcd:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0105bd0	obj/kern/kernel.asm	/^f0105bd0:	84 d2                	test   %dl,%dl$/;"	l
f0105bd2	obj/kern/kernel.asm	/^f0105bd2:	75 ee                	jne    f0105bc2 <strchr+0x17>$/;"	l
f0105bd4	obj/kern/kernel.asm	/^f0105bd4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105bd9	obj/kern/kernel.asm	/^f0105bd9:	5d                   	pop    %ebp$/;"	l
f0105bda	obj/kern/kernel.asm	/^f0105bda:	c3                   	ret    $/;"	l
f0105bdb	obj/kern/kernel.asm	/^f0105bdb <strfind>:$/;"	l
f0105bdb	obj/kern/kernel.asm	/^f0105bdb:	55                   	push   %ebp$/;"	l
f0105bdc	obj/kern/kernel.asm	/^f0105bdc:	89 e5                	mov    %esp,%ebp$/;"	l
f0105bde	obj/kern/kernel.asm	/^f0105bde:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105be1	obj/kern/kernel.asm	/^f0105be1:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0105be5	obj/kern/kernel.asm	/^f0105be5:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0105be8	obj/kern/kernel.asm	/^f0105be8:	84 d2                	test   %dl,%dl$/;"	l
f0105bea	obj/kern/kernel.asm	/^f0105bea:	74 18                	je     f0105c04 <strfind+0x29>$/;"	l
f0105bec	obj/kern/kernel.asm	/^f0105bec:	38 ca                	cmp    %cl,%dl$/;"	l
f0105bee	obj/kern/kernel.asm	/^f0105bee:	75 0a                	jne    f0105bfa <strfind+0x1f>$/;"	l
f0105bf0	obj/kern/kernel.asm	/^f0105bf0:	eb 12                	jmp    f0105c04 <strfind+0x29>$/;"	l
f0105bf2	obj/kern/kernel.asm	/^f0105bf2:	38 ca                	cmp    %cl,%dl$/;"	l
f0105bf4	obj/kern/kernel.asm	/^f0105bf4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0105bf8	obj/kern/kernel.asm	/^f0105bf8:	74 0a                	je     f0105c04 <strfind+0x29>$/;"	l
f0105bfa	obj/kern/kernel.asm	/^f0105bfa:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105bfd	obj/kern/kernel.asm	/^f0105bfd:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0105c00	obj/kern/kernel.asm	/^f0105c00:	84 d2                	test   %dl,%dl$/;"	l
f0105c02	obj/kern/kernel.asm	/^f0105c02:	75 ee                	jne    f0105bf2 <strfind+0x17>$/;"	l
f0105c04	obj/kern/kernel.asm	/^f0105c04:	5d                   	pop    %ebp$/;"	l
f0105c05	obj/kern/kernel.asm	/^f0105c05:	c3                   	ret    $/;"	l
f0105c06	obj/kern/kernel.asm	/^f0105c06 <memset>:$/;"	l
f0105c06	obj/kern/kernel.asm	/^f0105c06:	55                   	push   %ebp$/;"	l
f0105c07	obj/kern/kernel.asm	/^f0105c07:	89 e5                	mov    %esp,%ebp$/;"	l
f0105c09	obj/kern/kernel.asm	/^f0105c09:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105c0c	obj/kern/kernel.asm	/^f0105c0c:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0105c0f	obj/kern/kernel.asm	/^f0105c0f:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0105c13	obj/kern/kernel.asm	/^f0105c13:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f0105c17	obj/kern/kernel.asm	/^f0105c17:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0105c1a	obj/kern/kernel.asm	/^f0105c1a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105c1d	obj/kern/kernel.asm	/^f0105c1d:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0105c20	obj/kern/kernel.asm	/^f0105c20:	85 c9                	test   %ecx,%ecx$/;"	l
f0105c22	obj/kern/kernel.asm	/^f0105c22:	74 30                	je     f0105c54 <memset+0x4e>$/;"	l
f0105c24	obj/kern/kernel.asm	/^f0105c24:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f0105c2a	obj/kern/kernel.asm	/^f0105c2a:	75 25                	jne    f0105c51 <memset+0x4b>$/;"	l
f0105c2c	obj/kern/kernel.asm	/^f0105c2c:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0105c2f	obj/kern/kernel.asm	/^f0105c2f:	75 20                	jne    f0105c51 <memset+0x4b>$/;"	l
f0105c31	obj/kern/kernel.asm	/^f0105c31:	0f b6 d0             	movzbl %al,%edx$/;"	l
f0105c34	obj/kern/kernel.asm	/^f0105c34:	89 d3                	mov    %edx,%ebx$/;"	l
f0105c36	obj/kern/kernel.asm	/^f0105c36:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
f0105c39	obj/kern/kernel.asm	/^f0105c39:	89 d6                	mov    %edx,%esi$/;"	l
f0105c3b	obj/kern/kernel.asm	/^f0105c3b:	c1 e6 18             	shl    $0x18,%esi$/;"	l
f0105c3e	obj/kern/kernel.asm	/^f0105c3e:	89 d0                	mov    %edx,%eax$/;"	l
f0105c40	obj/kern/kernel.asm	/^f0105c40:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f0105c43	obj/kern/kernel.asm	/^f0105c43:	09 f0                	or     %esi,%eax$/;"	l
f0105c45	obj/kern/kernel.asm	/^f0105c45:	09 d0                	or     %edx,%eax$/;"	l
f0105c47	obj/kern/kernel.asm	/^f0105c47:	09 d8                	or     %ebx,%eax$/;"	l
f0105c49	obj/kern/kernel.asm	/^f0105c49:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0105c4c	obj/kern/kernel.asm	/^f0105c4c:	fc                   	cld    $/;"	l
f0105c4d	obj/kern/kernel.asm	/^f0105c4d:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
f0105c4f	obj/kern/kernel.asm	/^f0105c4f:	eb 03                	jmp    f0105c54 <memset+0x4e>$/;"	l
f0105c51	obj/kern/kernel.asm	/^f0105c51:	fc                   	cld    $/;"	l
f0105c52	obj/kern/kernel.asm	/^f0105c52:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
f0105c54	obj/kern/kernel.asm	/^f0105c54:	89 f8                	mov    %edi,%eax$/;"	l
f0105c56	obj/kern/kernel.asm	/^f0105c56:	8b 1c 24             	mov    (%esp),%ebx$/;"	l
f0105c59	obj/kern/kernel.asm	/^f0105c59:	8b 74 24 04          	mov    0x4(%esp),%esi$/;"	l
f0105c5d	obj/kern/kernel.asm	/^f0105c5d:	8b 7c 24 08          	mov    0x8(%esp),%edi$/;"	l
f0105c61	obj/kern/kernel.asm	/^f0105c61:	89 ec                	mov    %ebp,%esp$/;"	l
f0105c63	obj/kern/kernel.asm	/^f0105c63:	5d                   	pop    %ebp$/;"	l
f0105c64	obj/kern/kernel.asm	/^f0105c64:	c3                   	ret    $/;"	l
f0105c65	obj/kern/kernel.asm	/^f0105c65 <memmove>:$/;"	l
f0105c65	obj/kern/kernel.asm	/^f0105c65:	55                   	push   %ebp$/;"	l
f0105c66	obj/kern/kernel.asm	/^f0105c66:	89 e5                	mov    %esp,%ebp$/;"	l
f0105c68	obj/kern/kernel.asm	/^f0105c68:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105c6b	obj/kern/kernel.asm	/^f0105c6b:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0105c6e	obj/kern/kernel.asm	/^f0105c6e:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105c72	obj/kern/kernel.asm	/^f0105c72:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105c75	obj/kern/kernel.asm	/^f0105c75:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0105c78	obj/kern/kernel.asm	/^f0105c78:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0105c7b	obj/kern/kernel.asm	/^f0105c7b:	89 c7                	mov    %eax,%edi$/;"	l
f0105c7d	obj/kern/kernel.asm	/^f0105c7d:	39 c6                	cmp    %eax,%esi$/;"	l
f0105c7f	obj/kern/kernel.asm	/^f0105c7f:	73 35                	jae    f0105cb6 <memmove+0x51>$/;"	l
f0105c81	obj/kern/kernel.asm	/^f0105c81:	8d 14 0e             	lea    (%esi,%ecx,1),%edx$/;"	l
f0105c84	obj/kern/kernel.asm	/^f0105c84:	39 d0                	cmp    %edx,%eax$/;"	l
f0105c86	obj/kern/kernel.asm	/^f0105c86:	73 2e                	jae    f0105cb6 <memmove+0x51>$/;"	l
f0105c88	obj/kern/kernel.asm	/^f0105c88:	01 cf                	add    %ecx,%edi$/;"	l
f0105c8a	obj/kern/kernel.asm	/^f0105c8a:	f6 c2 03             	test   $0x3,%dl$/;"	l
f0105c8d	obj/kern/kernel.asm	/^f0105c8d:	75 1b                	jne    f0105caa <memmove+0x45>$/;"	l
f0105c8f	obj/kern/kernel.asm	/^f0105c8f:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f0105c95	obj/kern/kernel.asm	/^f0105c95:	75 13                	jne    f0105caa <memmove+0x45>$/;"	l
f0105c97	obj/kern/kernel.asm	/^f0105c97:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0105c9a	obj/kern/kernel.asm	/^f0105c9a:	75 0e                	jne    f0105caa <memmove+0x45>$/;"	l
f0105c9c	obj/kern/kernel.asm	/^f0105c9c:	83 ef 04             	sub    $0x4,%edi$/;"	l
f0105c9f	obj/kern/kernel.asm	/^f0105c9f:	8d 72 fc             	lea    -0x4(%edx),%esi$/;"	l
f0105ca2	obj/kern/kernel.asm	/^f0105ca2:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0105ca5	obj/kern/kernel.asm	/^f0105ca5:	fd                   	std    $/;"	l
f0105ca6	obj/kern/kernel.asm	/^f0105ca6:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0105ca8	obj/kern/kernel.asm	/^f0105ca8:	eb 09                	jmp    f0105cb3 <memmove+0x4e>$/;"	l
f0105caa	obj/kern/kernel.asm	/^f0105caa:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0105cad	obj/kern/kernel.asm	/^f0105cad:	8d 72 ff             	lea    -0x1(%edx),%esi$/;"	l
f0105cb0	obj/kern/kernel.asm	/^f0105cb0:	fd                   	std    $/;"	l
f0105cb1	obj/kern/kernel.asm	/^f0105cb1:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0105cb3	obj/kern/kernel.asm	/^f0105cb3:	fc                   	cld    $/;"	l
f0105cb4	obj/kern/kernel.asm	/^f0105cb4:	eb 20                	jmp    f0105cd6 <memmove+0x71>$/;"	l
f0105cb6	obj/kern/kernel.asm	/^f0105cb6:	f7 c6 03 00 00 00    	test   $0x3,%esi$/;"	l
f0105cbc	obj/kern/kernel.asm	/^f0105cbc:	75 15                	jne    f0105cd3 <memmove+0x6e>$/;"	l
f0105cbe	obj/kern/kernel.asm	/^f0105cbe:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f0105cc4	obj/kern/kernel.asm	/^f0105cc4:	75 0d                	jne    f0105cd3 <memmove+0x6e>$/;"	l
f0105cc6	obj/kern/kernel.asm	/^f0105cc6:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0105cc9	obj/kern/kernel.asm	/^f0105cc9:	75 08                	jne    f0105cd3 <memmove+0x6e>$/;"	l
f0105ccb	obj/kern/kernel.asm	/^f0105ccb:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0105cce	obj/kern/kernel.asm	/^f0105cce:	fc                   	cld    $/;"	l
f0105ccf	obj/kern/kernel.asm	/^f0105ccf:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0105cd1	obj/kern/kernel.asm	/^f0105cd1:	eb 03                	jmp    f0105cd6 <memmove+0x71>$/;"	l
f0105cd3	obj/kern/kernel.asm	/^f0105cd3:	fc                   	cld    $/;"	l
f0105cd4	obj/kern/kernel.asm	/^f0105cd4:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0105cd6	obj/kern/kernel.asm	/^f0105cd6:	8b 34 24             	mov    (%esp),%esi$/;"	l
f0105cd9	obj/kern/kernel.asm	/^f0105cd9:	8b 7c 24 04          	mov    0x4(%esp),%edi$/;"	l
f0105cdd	obj/kern/kernel.asm	/^f0105cdd:	89 ec                	mov    %ebp,%esp$/;"	l
f0105cdf	obj/kern/kernel.asm	/^f0105cdf:	5d                   	pop    %ebp$/;"	l
f0105ce0	obj/kern/kernel.asm	/^f0105ce0:	c3                   	ret    $/;"	l
f0105ce1	obj/kern/kernel.asm	/^f0105ce1 <memcpy>:$/;"	l
f0105ce1	obj/kern/kernel.asm	/^f0105ce1:	55                   	push   %ebp$/;"	l
f0105ce2	obj/kern/kernel.asm	/^f0105ce2:	89 e5                	mov    %esp,%ebp$/;"	l
f0105ce4	obj/kern/kernel.asm	/^f0105ce4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105ce7	obj/kern/kernel.asm	/^f0105ce7:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105cea	obj/kern/kernel.asm	/^f0105cea:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105cee	obj/kern/kernel.asm	/^f0105cee:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105cf1	obj/kern/kernel.asm	/^f0105cf1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105cf5	obj/kern/kernel.asm	/^f0105cf5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105cf8	obj/kern/kernel.asm	/^f0105cf8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105cfb	obj/kern/kernel.asm	/^f0105cfb:	e8 65 ff ff ff       	call   f0105c65 <memmove>$/;"	l
f0105d00	obj/kern/kernel.asm	/^f0105d00:	c9                   	leave  $/;"	l
f0105d01	obj/kern/kernel.asm	/^f0105d01:	c3                   	ret    $/;"	l
f0105d02	obj/kern/kernel.asm	/^f0105d02 <memcmp>:$/;"	l
f0105d02	obj/kern/kernel.asm	/^f0105d02:	55                   	push   %ebp$/;"	l
f0105d03	obj/kern/kernel.asm	/^f0105d03:	89 e5                	mov    %esp,%ebp$/;"	l
f0105d05	obj/kern/kernel.asm	/^f0105d05:	57                   	push   %edi$/;"	l
f0105d06	obj/kern/kernel.asm	/^f0105d06:	56                   	push   %esi$/;"	l
f0105d07	obj/kern/kernel.asm	/^f0105d07:	53                   	push   %ebx$/;"	l
f0105d08	obj/kern/kernel.asm	/^f0105d08:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105d0b	obj/kern/kernel.asm	/^f0105d0b:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0105d0e	obj/kern/kernel.asm	/^f0105d0e:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0105d11	obj/kern/kernel.asm	/^f0105d11:	85 c9                	test   %ecx,%ecx$/;"	l
f0105d13	obj/kern/kernel.asm	/^f0105d13:	74 36                	je     f0105d4b <memcmp+0x49>$/;"	l
f0105d15	obj/kern/kernel.asm	/^f0105d15:	0f b6 06             	movzbl (%esi),%eax$/;"	l
f0105d18	obj/kern/kernel.asm	/^f0105d18:	0f b6 1f             	movzbl (%edi),%ebx$/;"	l
f0105d1b	obj/kern/kernel.asm	/^f0105d1b:	38 d8                	cmp    %bl,%al$/;"	l
f0105d1d	obj/kern/kernel.asm	/^f0105d1d:	74 20                	je     f0105d3f <memcmp+0x3d>$/;"	l
f0105d1f	obj/kern/kernel.asm	/^f0105d1f:	eb 14                	jmp    f0105d35 <memcmp+0x33>$/;"	l
f0105d21	obj/kern/kernel.asm	/^f0105d21:	0f b6 44 16 01       	movzbl 0x1(%esi,%edx,1),%eax$/;"	l
f0105d26	obj/kern/kernel.asm	/^f0105d26:	0f b6 5c 17 01       	movzbl 0x1(%edi,%edx,1),%ebx$/;"	l
f0105d2b	obj/kern/kernel.asm	/^f0105d2b:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105d2e	obj/kern/kernel.asm	/^f0105d2e:	83 e9 01             	sub    $0x1,%ecx$/;"	l
f0105d31	obj/kern/kernel.asm	/^f0105d31:	38 d8                	cmp    %bl,%al$/;"	l
f0105d33	obj/kern/kernel.asm	/^f0105d33:	74 12                	je     f0105d47 <memcmp+0x45>$/;"	l
f0105d35	obj/kern/kernel.asm	/^f0105d35:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0105d38	obj/kern/kernel.asm	/^f0105d38:	0f b6 db             	movzbl %bl,%ebx$/;"	l
f0105d3b	obj/kern/kernel.asm	/^f0105d3b:	29 d8                	sub    %ebx,%eax$/;"	l
f0105d3d	obj/kern/kernel.asm	/^f0105d3d:	eb 11                	jmp    f0105d50 <memcmp+0x4e>$/;"	l
f0105d3f	obj/kern/kernel.asm	/^f0105d3f:	83 e9 01             	sub    $0x1,%ecx$/;"	l
f0105d42	obj/kern/kernel.asm	/^f0105d42:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105d47	obj/kern/kernel.asm	/^f0105d47:	85 c9                	test   %ecx,%ecx$/;"	l
f0105d49	obj/kern/kernel.asm	/^f0105d49:	75 d6                	jne    f0105d21 <memcmp+0x1f>$/;"	l
f0105d4b	obj/kern/kernel.asm	/^f0105d4b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105d50	obj/kern/kernel.asm	/^f0105d50:	5b                   	pop    %ebx$/;"	l
f0105d51	obj/kern/kernel.asm	/^f0105d51:	5e                   	pop    %esi$/;"	l
f0105d52	obj/kern/kernel.asm	/^f0105d52:	5f                   	pop    %edi$/;"	l
f0105d53	obj/kern/kernel.asm	/^f0105d53:	5d                   	pop    %ebp$/;"	l
f0105d54	obj/kern/kernel.asm	/^f0105d54:	c3                   	ret    $/;"	l
f0105d55	obj/kern/kernel.asm	/^f0105d55 <memfind>:$/;"	l
f0105d55	obj/kern/kernel.asm	/^f0105d55:	55                   	push   %ebp$/;"	l
f0105d56	obj/kern/kernel.asm	/^f0105d56:	89 e5                	mov    %esp,%ebp$/;"	l
f0105d58	obj/kern/kernel.asm	/^f0105d58:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105d5b	obj/kern/kernel.asm	/^f0105d5b:	89 c2                	mov    %eax,%edx$/;"	l
f0105d5d	obj/kern/kernel.asm	/^f0105d5d:	03 55 10             	add    0x10(%ebp),%edx$/;"	l
f0105d60	obj/kern/kernel.asm	/^f0105d60:	39 d0                	cmp    %edx,%eax$/;"	l
f0105d62	obj/kern/kernel.asm	/^f0105d62:	73 15                	jae    f0105d79 <memfind+0x24>$/;"	l
f0105d64	obj/kern/kernel.asm	/^f0105d64:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0105d68	obj/kern/kernel.asm	/^f0105d68:	38 08                	cmp    %cl,(%eax)$/;"	l
f0105d6a	obj/kern/kernel.asm	/^f0105d6a:	75 06                	jne    f0105d72 <memfind+0x1d>$/;"	l
f0105d6c	obj/kern/kernel.asm	/^f0105d6c:	eb 0b                	jmp    f0105d79 <memfind+0x24>$/;"	l
f0105d6e	obj/kern/kernel.asm	/^f0105d6e:	38 08                	cmp    %cl,(%eax)$/;"	l
f0105d70	obj/kern/kernel.asm	/^f0105d70:	74 07                	je     f0105d79 <memfind+0x24>$/;"	l
f0105d72	obj/kern/kernel.asm	/^f0105d72:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105d75	obj/kern/kernel.asm	/^f0105d75:	39 c2                	cmp    %eax,%edx$/;"	l
f0105d77	obj/kern/kernel.asm	/^f0105d77:	77 f5                	ja     f0105d6e <memfind+0x19>$/;"	l
f0105d79	obj/kern/kernel.asm	/^f0105d79:	5d                   	pop    %ebp$/;"	l
f0105d7a	obj/kern/kernel.asm	/^f0105d7a:	c3                   	ret    $/;"	l
f0105d7b	obj/kern/kernel.asm	/^f0105d7b <strtol>:$/;"	l
f0105d7b	obj/kern/kernel.asm	/^f0105d7b:	55                   	push   %ebp$/;"	l
f0105d7c	obj/kern/kernel.asm	/^f0105d7c:	89 e5                	mov    %esp,%ebp$/;"	l
f0105d7e	obj/kern/kernel.asm	/^f0105d7e:	57                   	push   %edi$/;"	l
f0105d7f	obj/kern/kernel.asm	/^f0105d7f:	56                   	push   %esi$/;"	l
f0105d80	obj/kern/kernel.asm	/^f0105d80:	53                   	push   %ebx$/;"	l
f0105d81	obj/kern/kernel.asm	/^f0105d81:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105d84	obj/kern/kernel.asm	/^f0105d84:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0105d87	obj/kern/kernel.asm	/^f0105d87:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0105d8a	obj/kern/kernel.asm	/^f0105d8a:	0f b6 02             	movzbl (%edx),%eax$/;"	l
f0105d8d	obj/kern/kernel.asm	/^f0105d8d:	3c 20                	cmp    $0x20,%al$/;"	l
f0105d8f	obj/kern/kernel.asm	/^f0105d8f:	74 04                	je     f0105d95 <strtol+0x1a>$/;"	l
f0105d91	obj/kern/kernel.asm	/^f0105d91:	3c 09                	cmp    $0x9,%al$/;"	l
f0105d93	obj/kern/kernel.asm	/^f0105d93:	75 0e                	jne    f0105da3 <strtol+0x28>$/;"	l
f0105d95	obj/kern/kernel.asm	/^f0105d95:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105d98	obj/kern/kernel.asm	/^f0105d98:	0f b6 02             	movzbl (%edx),%eax$/;"	l
f0105d9b	obj/kern/kernel.asm	/^f0105d9b:	3c 20                	cmp    $0x20,%al$/;"	l
f0105d9d	obj/kern/kernel.asm	/^f0105d9d:	74 f6                	je     f0105d95 <strtol+0x1a>$/;"	l
f0105d9f	obj/kern/kernel.asm	/^f0105d9f:	3c 09                	cmp    $0x9,%al$/;"	l
f0105da1	obj/kern/kernel.asm	/^f0105da1:	74 f2                	je     f0105d95 <strtol+0x1a>$/;"	l
f0105da3	obj/kern/kernel.asm	/^f0105da3:	3c 2b                	cmp    $0x2b,%al$/;"	l
f0105da5	obj/kern/kernel.asm	/^f0105da5:	75 0c                	jne    f0105db3 <strtol+0x38>$/;"	l
f0105da7	obj/kern/kernel.asm	/^f0105da7:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105daa	obj/kern/kernel.asm	/^f0105daa:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
f0105db1	obj/kern/kernel.asm	/^f0105db1:	eb 15                	jmp    f0105dc8 <strtol+0x4d>$/;"	l
f0105db3	obj/kern/kernel.asm	/^f0105db3:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
f0105dba	obj/kern/kernel.asm	/^f0105dba:	3c 2d                	cmp    $0x2d,%al$/;"	l
f0105dbc	obj/kern/kernel.asm	/^f0105dbc:	75 0a                	jne    f0105dc8 <strtol+0x4d>$/;"	l
f0105dbe	obj/kern/kernel.asm	/^f0105dbe:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105dc1	obj/kern/kernel.asm	/^f0105dc1:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)$/;"	l
f0105dc8	obj/kern/kernel.asm	/^f0105dc8:	85 db                	test   %ebx,%ebx$/;"	l
f0105dca	obj/kern/kernel.asm	/^f0105dca:	0f 94 c0             	sete   %al$/;"	l
f0105dcd	obj/kern/kernel.asm	/^f0105dcd:	74 05                	je     f0105dd4 <strtol+0x59>$/;"	l
f0105dcf	obj/kern/kernel.asm	/^f0105dcf:	83 fb 10             	cmp    $0x10,%ebx$/;"	l
f0105dd2	obj/kern/kernel.asm	/^f0105dd2:	75 18                	jne    f0105dec <strtol+0x71>$/;"	l
f0105dd4	obj/kern/kernel.asm	/^f0105dd4:	80 3a 30             	cmpb   $0x30,(%edx)$/;"	l
f0105dd7	obj/kern/kernel.asm	/^f0105dd7:	75 13                	jne    f0105dec <strtol+0x71>$/;"	l
f0105dd9	obj/kern/kernel.asm	/^f0105dd9:	80 7a 01 78          	cmpb   $0x78,0x1(%edx)$/;"	l
f0105ddd	obj/kern/kernel.asm	/^f0105ddd:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0105de0	obj/kern/kernel.asm	/^f0105de0:	75 0a                	jne    f0105dec <strtol+0x71>$/;"	l
f0105de2	obj/kern/kernel.asm	/^f0105de2:	83 c2 02             	add    $0x2,%edx$/;"	l
f0105de5	obj/kern/kernel.asm	/^f0105de5:	bb 10 00 00 00       	mov    $0x10,%ebx$/;"	l
f0105dea	obj/kern/kernel.asm	/^f0105dea:	eb 15                	jmp    f0105e01 <strtol+0x86>$/;"	l
f0105dec	obj/kern/kernel.asm	/^f0105dec:	84 c0                	test   %al,%al$/;"	l
f0105dee	obj/kern/kernel.asm	/^f0105dee:	66 90                	xchg   %ax,%ax$/;"	l
f0105df0	obj/kern/kernel.asm	/^f0105df0:	74 0f                	je     f0105e01 <strtol+0x86>$/;"	l
f0105df2	obj/kern/kernel.asm	/^f0105df2:	bb 0a 00 00 00       	mov    $0xa,%ebx$/;"	l
f0105df7	obj/kern/kernel.asm	/^f0105df7:	80 3a 30             	cmpb   $0x30,(%edx)$/;"	l
f0105dfa	obj/kern/kernel.asm	/^f0105dfa:	75 05                	jne    f0105e01 <strtol+0x86>$/;"	l
f0105dfc	obj/kern/kernel.asm	/^f0105dfc:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105dff	obj/kern/kernel.asm	/^f0105dff:	b3 08                	mov    $0x8,%bl$/;"	l
f0105e01	obj/kern/kernel.asm	/^f0105e01:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105e06	obj/kern/kernel.asm	/^f0105e06:	89 de                	mov    %ebx,%esi$/;"	l
f0105e08	obj/kern/kernel.asm	/^f0105e08:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0105e0b	obj/kern/kernel.asm	/^f0105e0b:	89 cf                	mov    %ecx,%edi$/;"	l
f0105e0d	obj/kern/kernel.asm	/^f0105e0d:	8d 59 d0             	lea    -0x30(%ecx),%ebx$/;"	l
f0105e10	obj/kern/kernel.asm	/^f0105e10:	80 fb 09             	cmp    $0x9,%bl$/;"	l
f0105e13	obj/kern/kernel.asm	/^f0105e13:	77 08                	ja     f0105e1d <strtol+0xa2>$/;"	l
f0105e15	obj/kern/kernel.asm	/^f0105e15:	0f be c9             	movsbl %cl,%ecx$/;"	l
f0105e18	obj/kern/kernel.asm	/^f0105e18:	83 e9 30             	sub    $0x30,%ecx$/;"	l
f0105e1b	obj/kern/kernel.asm	/^f0105e1b:	eb 1e                	jmp    f0105e3b <strtol+0xc0>$/;"	l
f0105e1d	obj/kern/kernel.asm	/^f0105e1d:	8d 5f 9f             	lea    -0x61(%edi),%ebx$/;"	l
f0105e20	obj/kern/kernel.asm	/^f0105e20:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f0105e23	obj/kern/kernel.asm	/^f0105e23:	77 08                	ja     f0105e2d <strtol+0xb2>$/;"	l
f0105e25	obj/kern/kernel.asm	/^f0105e25:	0f be c9             	movsbl %cl,%ecx$/;"	l
f0105e28	obj/kern/kernel.asm	/^f0105e28:	83 e9 57             	sub    $0x57,%ecx$/;"	l
f0105e2b	obj/kern/kernel.asm	/^f0105e2b:	eb 0e                	jmp    f0105e3b <strtol+0xc0>$/;"	l
f0105e2d	obj/kern/kernel.asm	/^f0105e2d:	8d 5f bf             	lea    -0x41(%edi),%ebx$/;"	l
f0105e30	obj/kern/kernel.asm	/^f0105e30:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f0105e33	obj/kern/kernel.asm	/^f0105e33:	77 15                	ja     f0105e4a <strtol+0xcf>$/;"	l
f0105e35	obj/kern/kernel.asm	/^f0105e35:	0f be c9             	movsbl %cl,%ecx$/;"	l
f0105e38	obj/kern/kernel.asm	/^f0105e38:	83 e9 37             	sub    $0x37,%ecx$/;"	l
f0105e3b	obj/kern/kernel.asm	/^f0105e3b:	39 f1                	cmp    %esi,%ecx$/;"	l
f0105e3d	obj/kern/kernel.asm	/^f0105e3d:	7d 0b                	jge    f0105e4a <strtol+0xcf>$/;"	l
f0105e3f	obj/kern/kernel.asm	/^f0105e3f:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105e42	obj/kern/kernel.asm	/^f0105e42:	0f af c6             	imul   %esi,%eax$/;"	l
f0105e45	obj/kern/kernel.asm	/^f0105e45:	8d 04 01             	lea    (%ecx,%eax,1),%eax$/;"	l
f0105e48	obj/kern/kernel.asm	/^f0105e48:	eb be                	jmp    f0105e08 <strtol+0x8d>$/;"	l
f0105e4a	obj/kern/kernel.asm	/^f0105e4a:	89 c1                	mov    %eax,%ecx$/;"	l
f0105e4c	obj/kern/kernel.asm	/^f0105e4c:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f0105e50	obj/kern/kernel.asm	/^f0105e50:	74 05                	je     f0105e57 <strtol+0xdc>$/;"	l
f0105e52	obj/kern/kernel.asm	/^f0105e52:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0105e55	obj/kern/kernel.asm	/^f0105e55:	89 13                	mov    %edx,(%ebx)$/;"	l
f0105e57	obj/kern/kernel.asm	/^f0105e57:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
f0105e5b	obj/kern/kernel.asm	/^f0105e5b:	74 04                	je     f0105e61 <strtol+0xe6>$/;"	l
f0105e5d	obj/kern/kernel.asm	/^f0105e5d:	89 c8                	mov    %ecx,%eax$/;"	l
f0105e5f	obj/kern/kernel.asm	/^f0105e5f:	f7 d8                	neg    %eax$/;"	l
f0105e61	obj/kern/kernel.asm	/^f0105e61:	83 c4 04             	add    $0x4,%esp$/;"	l
f0105e64	obj/kern/kernel.asm	/^f0105e64:	5b                   	pop    %ebx$/;"	l
f0105e65	obj/kern/kernel.asm	/^f0105e65:	5e                   	pop    %esi$/;"	l
f0105e66	obj/kern/kernel.asm	/^f0105e66:	5f                   	pop    %edi$/;"	l
f0105e67	obj/kern/kernel.asm	/^f0105e67:	5d                   	pop    %ebp$/;"	l
f0105e68	obj/kern/kernel.asm	/^f0105e68:	c3                   	ret    $/;"	l
f0105e69	obj/kern/kernel.asm	/^f0105e69:	00 00                	add    %al,(%eax)$/;"	l
f0105e6c	obj/kern/kernel.asm	/^f0105e6c <mpentry_start>:$/;"	l
f0105e6c	obj/kern/kernel.asm	/^f0105e6c:	fa                   	cli    $/;"	l
f0105e6d	obj/kern/kernel.asm	/^f0105e6d:	31 c0                	xor    %eax,%eax$/;"	l
f0105e6f	obj/kern/kernel.asm	/^f0105e6f:	8e d8                	mov    %eax,%ds$/;"	l
f0105e71	obj/kern/kernel.asm	/^f0105e71:	8e c0                	mov    %eax,%es$/;"	l
f0105e73	obj/kern/kernel.asm	/^f0105e73:	8e d0                	mov    %eax,%ss$/;"	l
f0105e75	obj/kern/kernel.asm	/^f0105e75:	0f 01 16             	lgdtl  (%esi)$/;"	l
f0105e78	obj/kern/kernel.asm	/^f0105e78:	74 70                	je     f0105eea <mpentry_end+0x4>$/;"	l
f0105e7a	obj/kern/kernel.asm	/^f0105e7a:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0105e7d	obj/kern/kernel.asm	/^f0105e7d:	66 83 c8 01          	or     $0x1,%ax$/;"	l
f0105e81	obj/kern/kernel.asm	/^f0105e81:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0105e84	obj/kern/kernel.asm	/^f0105e84:	66 ea 20 70 00 00    	ljmpw  $0x0,$0x7020$/;"	l
f0105e8a	obj/kern/kernel.asm	/^f0105e8a:	08 00                	or     %al,(%eax)$/;"	l
f0105e8c	obj/kern/kernel.asm	/^f0105e8c <start32>:$/;"	l
f0105e8c	obj/kern/kernel.asm	/^f0105e8c:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
f0105e90	obj/kern/kernel.asm	/^f0105e90:	8e d8                	mov    %eax,%ds$/;"	l
f0105e92	obj/kern/kernel.asm	/^f0105e92:	8e c0                	mov    %eax,%es$/;"	l
f0105e94	obj/kern/kernel.asm	/^f0105e94:	8e d0                	mov    %eax,%ss$/;"	l
f0105e96	obj/kern/kernel.asm	/^f0105e96:	66 b8 00 00          	mov    $0x0,%ax$/;"	l
f0105e9a	obj/kern/kernel.asm	/^f0105e9a:	8e e0                	mov    %eax,%fs$/;"	l
f0105e9c	obj/kern/kernel.asm	/^f0105e9c:	8e e8                	mov    %eax,%gs$/;"	l
f0105e9e	obj/kern/kernel.asm	/^f0105e9e:	b8 00 f0 11 00       	mov    $0x11f000,%eax$/;"	l
f0105ea3	obj/kern/kernel.asm	/^f0105ea3:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0105ea6	obj/kern/kernel.asm	/^f0105ea6:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0105ea9	obj/kern/kernel.asm	/^f0105ea9:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0105eae	obj/kern/kernel.asm	/^f0105eae:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0105eb1	obj/kern/kernel.asm	/^f0105eb1:	8b 25 e4 ce 22 f0    	mov    0xf022cee4,%esp$/;"	l
f0105eb7	obj/kern/kernel.asm	/^f0105eb7:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0105ebc	obj/kern/kernel.asm	/^f0105ebc:	b8 ed 00 10 f0       	mov    $0xf01000ed,%eax$/;"	l
f0105ec1	obj/kern/kernel.asm	/^f0105ec1:	ff d0                	call   *%eax$/;"	l
f0105ec3	obj/kern/kernel.asm	/^f0105ec3 <spin>:$/;"	l
f0105ec3	obj/kern/kernel.asm	/^f0105ec3:	eb fe                	jmp    f0105ec3 <spin>$/;"	l
f0105ec5	obj/kern/kernel.asm	/^f0105ec5:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0105ec8	obj/kern/kernel.asm	/^f0105ec8 <gdt>:$/;"	l
f0105ed0	obj/kern/kernel.asm	/^f0105ed0:	ff                   	(bad)  $/;"	l
f0105ed1	obj/kern/kernel.asm	/^f0105ed1:	ff 00                	incl   (%eax)$/;"	l
f0105ed3	obj/kern/kernel.asm	/^f0105ed3:	00 00                	add    %al,(%eax)$/;"	l
f0105ed5	obj/kern/kernel.asm	/^f0105ed5:	9a cf 00 ff ff 00 00 	lcall  $0x0,$0xffff00cf$/;"	l
f0105edc	obj/kern/kernel.asm	/^f0105edc:	00 92 cf 00 17 00    	add    %dl,0x1700cf(%edx)$/;"	l
f0105ee0	obj/kern/kernel.asm	/^f0105ee0 <gdtdesc>:$/;"	l
f0105ee0	obj/kern/kernel.asm	/^f0105ee0:	17                   	pop    %ss$/;"	l
f0105ee1	obj/kern/kernel.asm	/^f0105ee1:	00 5c 70 00          	add    %bl,0x0(%eax,%esi,2)$/;"	l
f0105ee6	obj/kern/kernel.asm	/^f0105ee6 <mpentry_end>:$/;"	l
f0105ee6	obj/kern/kernel.asm	/^f0105ee6:	90                   	nop$/;"	l
f0105ef0	obj/kern/kernel.asm	/^f0105ef0 <sum>:$/;"	l
f0105ef0	obj/kern/kernel.asm	/^f0105ef0:	55                   	push   %ebp$/;"	l
f0105ef1	obj/kern/kernel.asm	/^f0105ef1:	89 e5                	mov    %esp,%ebp$/;"	l
f0105ef3	obj/kern/kernel.asm	/^f0105ef3:	56                   	push   %esi$/;"	l
f0105ef4	obj/kern/kernel.asm	/^f0105ef4:	53                   	push   %ebx$/;"	l
f0105ef5	obj/kern/kernel.asm	/^f0105ef5:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0105efa	obj/kern/kernel.asm	/^f0105efa:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0105eff	obj/kern/kernel.asm	/^f0105eff:	85 d2                	test   %edx,%edx$/;"	l
f0105f01	obj/kern/kernel.asm	/^f0105f01:	7e 0d                	jle    f0105f10 <sum+0x20>$/;"	l
f0105f03	obj/kern/kernel.asm	/^f0105f03:	0f b6 34 08          	movzbl (%eax,%ecx,1),%esi$/;"	l
f0105f07	obj/kern/kernel.asm	/^f0105f07:	01 f3                	add    %esi,%ebx$/;"	l
f0105f09	obj/kern/kernel.asm	/^f0105f09:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105f0c	obj/kern/kernel.asm	/^f0105f0c:	39 d1                	cmp    %edx,%ecx$/;"	l
f0105f0e	obj/kern/kernel.asm	/^f0105f0e:	75 f3                	jne    f0105f03 <sum+0x13>$/;"	l
f0105f10	obj/kern/kernel.asm	/^f0105f10:	89 d8                	mov    %ebx,%eax$/;"	l
f0105f12	obj/kern/kernel.asm	/^f0105f12:	5b                   	pop    %ebx$/;"	l
f0105f13	obj/kern/kernel.asm	/^f0105f13:	5e                   	pop    %esi$/;"	l
f0105f14	obj/kern/kernel.asm	/^f0105f14:	5d                   	pop    %ebp$/;"	l
f0105f15	obj/kern/kernel.asm	/^f0105f15:	c3                   	ret    $/;"	l
f0105f16	obj/kern/kernel.asm	/^f0105f16 <mpsearch1>:$/;"	l
f0105f16	obj/kern/kernel.asm	/^f0105f16:	55                   	push   %ebp$/;"	l
f0105f17	obj/kern/kernel.asm	/^f0105f17:	89 e5                	mov    %esp,%ebp$/;"	l
f0105f19	obj/kern/kernel.asm	/^f0105f19:	56                   	push   %esi$/;"	l
f0105f1a	obj/kern/kernel.asm	/^f0105f1a:	53                   	push   %ebx$/;"	l
f0105f1b	obj/kern/kernel.asm	/^f0105f1b:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0105f1e	obj/kern/kernel.asm	/^f0105f1e:	8b 0d e8 ce 22 f0    	mov    0xf022cee8,%ecx$/;"	l
f0105f24	obj/kern/kernel.asm	/^f0105f24:	89 c3                	mov    %eax,%ebx$/;"	l
f0105f26	obj/kern/kernel.asm	/^f0105f26:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f0105f29	obj/kern/kernel.asm	/^f0105f29:	39 cb                	cmp    %ecx,%ebx$/;"	l
f0105f2b	obj/kern/kernel.asm	/^f0105f2b:	72 20                	jb     f0105f4d <mpsearch1+0x37>$/;"	l
f0105f2d	obj/kern/kernel.asm	/^f0105f2d:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105f31	obj/kern/kernel.asm	/^f0105f31:	c7 44 24 08 8c 6a 10 	movl   $0xf0106a8c,0x8(%esp)$/;"	l
f0105f38	obj/kern/kernel.asm	/^f0105f38:	f0 $/;"	l
f0105f39	obj/kern/kernel.asm	/^f0105f39:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f0105f40	obj/kern/kernel.asm	/^f0105f40:	00 $/;"	l
f0105f41	obj/kern/kernel.asm	/^f0105f41:	c7 04 24 c1 83 10 f0 	movl   $0xf01083c1,(%esp)$/;"	l
f0105f48	obj/kern/kernel.asm	/^f0105f48:	e8 38 a1 ff ff       	call   f0100085 <_panic>$/;"	l
f0105f4d	obj/kern/kernel.asm	/^f0105f4d:	8d 34 02             	lea    (%edx,%eax,1),%esi$/;"	l
f0105f50	obj/kern/kernel.asm	/^f0105f50:	89 f2                	mov    %esi,%edx$/;"	l
f0105f52	obj/kern/kernel.asm	/^f0105f52:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0105f55	obj/kern/kernel.asm	/^f0105f55:	39 d1                	cmp    %edx,%ecx$/;"	l
f0105f57	obj/kern/kernel.asm	/^f0105f57:	77 20                	ja     f0105f79 <mpsearch1+0x63>$/;"	l
f0105f59	obj/kern/kernel.asm	/^f0105f59:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0105f5d	obj/kern/kernel.asm	/^f0105f5d:	c7 44 24 08 8c 6a 10 	movl   $0xf0106a8c,0x8(%esp)$/;"	l
f0105f64	obj/kern/kernel.asm	/^f0105f64:	f0 $/;"	l
f0105f65	obj/kern/kernel.asm	/^f0105f65:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f0105f6c	obj/kern/kernel.asm	/^f0105f6c:	00 $/;"	l
f0105f6d	obj/kern/kernel.asm	/^f0105f6d:	c7 04 24 c1 83 10 f0 	movl   $0xf01083c1,(%esp)$/;"	l
f0105f74	obj/kern/kernel.asm	/^f0105f74:	e8 0c a1 ff ff       	call   f0100085 <_panic>$/;"	l
f0105f79	obj/kern/kernel.asm	/^f0105f79:	8d 98 00 00 00 f0    	lea    -0x10000000(%eax),%ebx$/;"	l
f0105f7f	obj/kern/kernel.asm	/^f0105f7f:	81 ee 00 00 00 10    	sub    $0x10000000,%esi$/;"	l
f0105f85	obj/kern/kernel.asm	/^f0105f85:	39 f3                	cmp    %esi,%ebx$/;"	l
f0105f87	obj/kern/kernel.asm	/^f0105f87:	73 33                	jae    f0105fbc <mpsearch1+0xa6>$/;"	l
f0105f89	obj/kern/kernel.asm	/^f0105f89:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
f0105f90	obj/kern/kernel.asm	/^f0105f90:	00 $/;"	l
f0105f91	obj/kern/kernel.asm	/^f0105f91:	c7 44 24 04 d1 83 10 	movl   $0xf01083d1,0x4(%esp)$/;"	l
f0105f98	obj/kern/kernel.asm	/^f0105f98:	f0 $/;"	l
f0105f99	obj/kern/kernel.asm	/^f0105f99:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0105f9c	obj/kern/kernel.asm	/^f0105f9c:	e8 61 fd ff ff       	call   f0105d02 <memcmp>$/;"	l
f0105fa1	obj/kern/kernel.asm	/^f0105fa1:	85 c0                	test   %eax,%eax$/;"	l
f0105fa3	obj/kern/kernel.asm	/^f0105fa3:	75 10                	jne    f0105fb5 <mpsearch1+0x9f>$/;"	l
f0105fa5	obj/kern/kernel.asm	/^f0105fa5:	ba 10 00 00 00       	mov    $0x10,%edx$/;"	l
f0105faa	obj/kern/kernel.asm	/^f0105faa:	89 d8                	mov    %ebx,%eax$/;"	l
f0105fac	obj/kern/kernel.asm	/^f0105fac:	e8 3f ff ff ff       	call   f0105ef0 <sum>$/;"	l
f0105fb1	obj/kern/kernel.asm	/^f0105fb1:	84 c0                	test   %al,%al$/;"	l
f0105fb3	obj/kern/kernel.asm	/^f0105fb3:	74 0c                	je     f0105fc1 <mpsearch1+0xab>$/;"	l
f0105fb5	obj/kern/kernel.asm	/^f0105fb5:	83 c3 10             	add    $0x10,%ebx$/;"	l
f0105fb8	obj/kern/kernel.asm	/^f0105fb8:	39 de                	cmp    %ebx,%esi$/;"	l
f0105fba	obj/kern/kernel.asm	/^f0105fba:	77 cd                	ja     f0105f89 <mpsearch1+0x73>$/;"	l
f0105fbc	obj/kern/kernel.asm	/^f0105fbc:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0105fc1	obj/kern/kernel.asm	/^f0105fc1:	89 d8                	mov    %ebx,%eax$/;"	l
f0105fc3	obj/kern/kernel.asm	/^f0105fc3:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105fc6	obj/kern/kernel.asm	/^f0105fc6:	5b                   	pop    %ebx$/;"	l
f0105fc7	obj/kern/kernel.asm	/^f0105fc7:	5e                   	pop    %esi$/;"	l
f0105fc8	obj/kern/kernel.asm	/^f0105fc8:	5d                   	pop    %ebp$/;"	l
f0105fc9	obj/kern/kernel.asm	/^f0105fc9:	c3                   	ret    $/;"	l
f0105fca	obj/kern/kernel.asm	/^f0105fca <mp_init>:$/;"	l
f0105fca	obj/kern/kernel.asm	/^f0105fca:	55                   	push   %ebp$/;"	l
f0105fcb	obj/kern/kernel.asm	/^f0105fcb:	89 e5                	mov    %esp,%ebp$/;"	l
f0105fcd	obj/kern/kernel.asm	/^f0105fcd:	57                   	push   %edi$/;"	l
f0105fce	obj/kern/kernel.asm	/^f0105fce:	56                   	push   %esi$/;"	l
f0105fcf	obj/kern/kernel.asm	/^f0105fcf:	53                   	push   %ebx$/;"	l
f0105fd0	obj/kern/kernel.asm	/^f0105fd0:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0105fd3	obj/kern/kernel.asm	/^f0105fd3:	c7 05 c0 d3 22 f0 20 	movl   $0xf022d020,0xf022d3c0$/;"	l
f0105fda	obj/kern/kernel.asm	/^f0105fda:	d0 22 f0 $/;"	d
f0105fdd	obj/kern/kernel.asm	/^f0105fdd:	83 3d e8 ce 22 f0 00 	cmpl   $0x0,0xf022cee8$/;"	l
f0105fe4	obj/kern/kernel.asm	/^f0105fe4:	75 24                	jne    f010600a <mp_init+0x40>$/;"	l
f0105fe6	obj/kern/kernel.asm	/^f0105fe6:	c7 44 24 0c 00 04 00 	movl   $0x400,0xc(%esp)$/;"	l
f0105fed	obj/kern/kernel.asm	/^f0105fed:	00 $/;"	l
f0105fee	obj/kern/kernel.asm	/^f0105fee:	c7 44 24 08 8c 6a 10 	movl   $0xf0106a8c,0x8(%esp)$/;"	l
f0105ff5	obj/kern/kernel.asm	/^f0105ff5:	f0 $/;"	l
f0105ff6	obj/kern/kernel.asm	/^f0105ff6:	c7 44 24 04 6f 00 00 	movl   $0x6f,0x4(%esp)$/;"	l
f0105ffd	obj/kern/kernel.asm	/^f0105ffd:	00 $/;"	l
f0105ffe	obj/kern/kernel.asm	/^f0105ffe:	c7 04 24 c1 83 10 f0 	movl   $0xf01083c1,(%esp)$/;"	l
f0106005	obj/kern/kernel.asm	/^f0106005:	e8 7b a0 ff ff       	call   f0100085 <_panic>$/;"	l
f010600a	obj/kern/kernel.asm	/^f010600a:	0f b7 05 0e 04 00 f0 	movzwl 0xf000040e,%eax$/;"	l
f0106011	obj/kern/kernel.asm	/^f0106011:	85 c0                	test   %eax,%eax$/;"	l
f0106013	obj/kern/kernel.asm	/^f0106013:	74 16                	je     f010602b <mp_init+0x61>$/;"	l
f0106015	obj/kern/kernel.asm	/^f0106015:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f0106018	obj/kern/kernel.asm	/^f0106018:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f010601d	obj/kern/kernel.asm	/^f010601d:	e8 f4 fe ff ff       	call   f0105f16 <mpsearch1>$/;"	l
f0106022	obj/kern/kernel.asm	/^f0106022:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0106025	obj/kern/kernel.asm	/^f0106025:	85 c0                	test   %eax,%eax$/;"	l
f0106027	obj/kern/kernel.asm	/^f0106027:	75 3c                	jne    f0106065 <mp_init+0x9b>$/;"	l
f0106029	obj/kern/kernel.asm	/^f0106029:	eb 20                	jmp    f010604b <mp_init+0x81>$/;"	l
f010602b	obj/kern/kernel.asm	/^f010602b:	0f b7 05 13 04 00 f0 	movzwl 0xf0000413,%eax$/;"	l
f0106032	obj/kern/kernel.asm	/^f0106032:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f0106035	obj/kern/kernel.asm	/^f0106035:	2d 00 04 00 00       	sub    $0x400,%eax$/;"	l
f010603a	obj/kern/kernel.asm	/^f010603a:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f010603f	obj/kern/kernel.asm	/^f010603f:	e8 d2 fe ff ff       	call   f0105f16 <mpsearch1>$/;"	l
f0106044	obj/kern/kernel.asm	/^f0106044:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0106047	obj/kern/kernel.asm	/^f0106047:	85 c0                	test   %eax,%eax$/;"	l
f0106049	obj/kern/kernel.asm	/^f0106049:	75 1a                	jne    f0106065 <mp_init+0x9b>$/;"	l
f010604b	obj/kern/kernel.asm	/^f010604b:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0106050	obj/kern/kernel.asm	/^f0106050:	b8 00 00 0f 00       	mov    $0xf0000,%eax$/;"	l
f0106055	obj/kern/kernel.asm	/^f0106055:	e8 bc fe ff ff       	call   f0105f16 <mpsearch1>$/;"	l
f010605a	obj/kern/kernel.asm	/^f010605a:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010605d	obj/kern/kernel.asm	/^f010605d:	85 c0                	test   %eax,%eax$/;"	l
f010605f	obj/kern/kernel.asm	/^f010605f:	0f 84 27 02 00 00    	je     f010628c <mp_init+0x2c2>$/;"	l
f0106065	obj/kern/kernel.asm	/^f0106065:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0106068	obj/kern/kernel.asm	/^f0106068:	8b 78 04             	mov    0x4(%eax),%edi$/;"	l
f010606b	obj/kern/kernel.asm	/^f010606b:	85 ff                	test   %edi,%edi$/;"	l
f010606d	obj/kern/kernel.asm	/^f010606d:	74 06                	je     f0106075 <mp_init+0xab>$/;"	l
f010606f	obj/kern/kernel.asm	/^f010606f:	80 78 0b 00          	cmpb   $0x0,0xb(%eax)$/;"	l
f0106073	obj/kern/kernel.asm	/^f0106073:	74 11                	je     f0106086 <mp_init+0xbc>$/;"	l
f0106075	obj/kern/kernel.asm	/^f0106075:	c7 04 24 34 82 10 f0 	movl   $0xf0108234,(%esp)$/;"	l
f010607c	obj/kern/kernel.asm	/^f010607c:	e8 2e e2 ff ff       	call   f01042af <cprintf>$/;"	l
f0106081	obj/kern/kernel.asm	/^f0106081:	e9 06 02 00 00       	jmp    f010628c <mp_init+0x2c2>$/;"	l
f0106086	obj/kern/kernel.asm	/^f0106086:	89 f8                	mov    %edi,%eax$/;"	l
f0106088	obj/kern/kernel.asm	/^f0106088:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f010608b	obj/kern/kernel.asm	/^f010608b:	3b 05 e8 ce 22 f0    	cmp    0xf022cee8,%eax$/;"	l
f0106091	obj/kern/kernel.asm	/^f0106091:	72 20                	jb     f01060b3 <mp_init+0xe9>$/;"	l
f0106093	obj/kern/kernel.asm	/^f0106093:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0106097	obj/kern/kernel.asm	/^f0106097:	c7 44 24 08 8c 6a 10 	movl   $0xf0106a8c,0x8(%esp)$/;"	l
f010609e	obj/kern/kernel.asm	/^f010609e:	f0 $/;"	l
f010609f	obj/kern/kernel.asm	/^f010609f:	c7 44 24 04 90 00 00 	movl   $0x90,0x4(%esp)$/;"	l
f01060a6	obj/kern/kernel.asm	/^f01060a6:	00 $/;"	l
f01060a7	obj/kern/kernel.asm	/^f01060a7:	c7 04 24 c1 83 10 f0 	movl   $0xf01083c1,(%esp)$/;"	l
f01060ae	obj/kern/kernel.asm	/^f01060ae:	e8 d2 9f ff ff       	call   f0100085 <_panic>$/;"	l
f01060b3	obj/kern/kernel.asm	/^f01060b3:	81 ef 00 00 00 10    	sub    $0x10000000,%edi$/;"	l
f01060b9	obj/kern/kernel.asm	/^f01060b9:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
f01060c0	obj/kern/kernel.asm	/^f01060c0:	00 $/;"	l
f01060c1	obj/kern/kernel.asm	/^f01060c1:	c7 44 24 04 d6 83 10 	movl   $0xf01083d6,0x4(%esp)$/;"	l
f01060c8	obj/kern/kernel.asm	/^f01060c8:	f0 $/;"	l
f01060c9	obj/kern/kernel.asm	/^f01060c9:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01060cc	obj/kern/kernel.asm	/^f01060cc:	e8 31 fc ff ff       	call   f0105d02 <memcmp>$/;"	l
f01060d1	obj/kern/kernel.asm	/^f01060d1:	85 c0                	test   %eax,%eax$/;"	l
f01060d3	obj/kern/kernel.asm	/^f01060d3:	74 11                	je     f01060e6 <mp_init+0x11c>$/;"	l
f01060d5	obj/kern/kernel.asm	/^f01060d5:	c7 04 24 64 82 10 f0 	movl   $0xf0108264,(%esp)$/;"	l
f01060dc	obj/kern/kernel.asm	/^f01060dc:	e8 ce e1 ff ff       	call   f01042af <cprintf>$/;"	l
f01060e1	obj/kern/kernel.asm	/^f01060e1:	e9 a6 01 00 00       	jmp    f010628c <mp_init+0x2c2>$/;"	l
f01060e6	obj/kern/kernel.asm	/^f01060e6:	0f b7 57 04          	movzwl 0x4(%edi),%edx$/;"	l
f01060ea	obj/kern/kernel.asm	/^f01060ea:	89 f8                	mov    %edi,%eax$/;"	l
f01060ec	obj/kern/kernel.asm	/^f01060ec:	e8 ff fd ff ff       	call   f0105ef0 <sum>$/;"	l
f01060f1	obj/kern/kernel.asm	/^f01060f1:	84 c0                	test   %al,%al$/;"	l
f01060f3	obj/kern/kernel.asm	/^f01060f3:	74 11                	je     f0106106 <mp_init+0x13c>$/;"	l
f01060f5	obj/kern/kernel.asm	/^f01060f5:	c7 04 24 98 82 10 f0 	movl   $0xf0108298,(%esp)$/;"	l
f01060fc	obj/kern/kernel.asm	/^f01060fc:	e8 ae e1 ff ff       	call   f01042af <cprintf>$/;"	l
f0106101	obj/kern/kernel.asm	/^f0106101:	e9 86 01 00 00       	jmp    f010628c <mp_init+0x2c2>$/;"	l
f0106106	obj/kern/kernel.asm	/^f0106106:	0f b6 47 06          	movzbl 0x6(%edi),%eax$/;"	l
f010610a	obj/kern/kernel.asm	/^f010610a:	3c 01                	cmp    $0x1,%al$/;"	l
f010610c	obj/kern/kernel.asm	/^f010610c:	74 1c                	je     f010612a <mp_init+0x160>$/;"	l
f010610e	obj/kern/kernel.asm	/^f010610e:	3c 04                	cmp    $0x4,%al$/;"	l
f0106110	obj/kern/kernel.asm	/^f0106110:	74 18                	je     f010612a <mp_init+0x160>$/;"	l
f0106112	obj/kern/kernel.asm	/^f0106112:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0106115	obj/kern/kernel.asm	/^f0106115:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106119	obj/kern/kernel.asm	/^f0106119:	c7 04 24 bc 82 10 f0 	movl   $0xf01082bc,(%esp)$/;"	l
f0106120	obj/kern/kernel.asm	/^f0106120:	e8 8a e1 ff ff       	call   f01042af <cprintf>$/;"	l
f0106125	obj/kern/kernel.asm	/^f0106125:	e9 62 01 00 00       	jmp    f010628c <mp_init+0x2c2>$/;"	l
f010612a	obj/kern/kernel.asm	/^f010612a:	0f b7 57 28          	movzwl 0x28(%edi),%edx$/;"	l
f010612e	obj/kern/kernel.asm	/^f010612e:	0f b7 47 04          	movzwl 0x4(%edi),%eax$/;"	l
f0106132	obj/kern/kernel.asm	/^f0106132:	8d 04 07             	lea    (%edi,%eax,1),%eax$/;"	l
f0106135	obj/kern/kernel.asm	/^f0106135:	e8 b6 fd ff ff       	call   f0105ef0 <sum>$/;"	l
f010613a	obj/kern/kernel.asm	/^f010613a:	3a 47 2a             	cmp    0x2a(%edi),%al$/;"	l
f010613d	obj/kern/kernel.asm	/^f010613d:	74 11                	je     f0106150 <mp_init+0x186>$/;"	l
f010613f	obj/kern/kernel.asm	/^f010613f:	c7 04 24 dc 82 10 f0 	movl   $0xf01082dc,(%esp)$/;"	l
f0106146	obj/kern/kernel.asm	/^f0106146:	e8 64 e1 ff ff       	call   f01042af <cprintf>$/;"	l
f010614b	obj/kern/kernel.asm	/^f010614b:	e9 3c 01 00 00       	jmp    f010628c <mp_init+0x2c2>$/;"	l
f0106150	obj/kern/kernel.asm	/^f0106150:	85 ff                	test   %edi,%edi$/;"	l
f0106152	obj/kern/kernel.asm	/^f0106152:	0f 84 34 01 00 00    	je     f010628c <mp_init+0x2c2>$/;"	l
f0106158	obj/kern/kernel.asm	/^f0106158:	c7 05 00 d0 22 f0 01 	movl   $0x1,0xf022d000$/;"	l
f010615f	obj/kern/kernel.asm	/^f010615f:	00 00 00 $/;"	l
f0106162	obj/kern/kernel.asm	/^f0106162:	8b 47 24             	mov    0x24(%edi),%eax$/;"	l
f0106165	obj/kern/kernel.asm	/^f0106165:	a3 00 e0 26 f0       	mov    %eax,0xf026e000$/;"	l
f010616a	obj/kern/kernel.asm	/^f010616a:	66 83 7f 22 00       	cmpw   $0x0,0x22(%edi)$/;"	l
f010616f	obj/kern/kernel.asm	/^f010616f:	0f 84 98 00 00 00    	je     f010620d <mp_init+0x243>$/;"	l
f0106175	obj/kern/kernel.asm	/^f0106175:	8d 5f 2c             	lea    0x2c(%edi),%ebx$/;"	l
f0106178	obj/kern/kernel.asm	/^f0106178:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f010617d	obj/kern/kernel.asm	/^f010617d:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0106180	obj/kern/kernel.asm	/^f0106180:	84 c0                	test   %al,%al$/;"	l
f0106182	obj/kern/kernel.asm	/^f0106182:	74 06                	je     f010618a <mp_init+0x1c0>$/;"	l
f0106184	obj/kern/kernel.asm	/^f0106184:	3c 04                	cmp    $0x4,%al$/;"	l
f0106186	obj/kern/kernel.asm	/^f0106186:	77 55                	ja     f01061dd <mp_init+0x213>$/;"	l
f0106188	obj/kern/kernel.asm	/^f0106188:	eb 4e                	jmp    f01061d8 <mp_init+0x20e>$/;"	l
f010618a	obj/kern/kernel.asm	/^f010618a:	89 da                	mov    %ebx,%edx$/;"	l
f010618c	obj/kern/kernel.asm	/^f010618c:	f6 43 03 02          	testb  $0x2,0x3(%ebx)$/;"	l
f0106190	obj/kern/kernel.asm	/^f0106190:	74 11                	je     f01061a3 <mp_init+0x1d9>$/;"	l
f0106192	obj/kern/kernel.asm	/^f0106192:	6b 05 c4 d3 22 f0 74 	imul   $0x74,0xf022d3c4,%eax$/;"	l
f0106199	obj/kern/kernel.asm	/^f0106199:	05 20 d0 22 f0       	add    $0xf022d020,%eax$/;"	l
f010619e	obj/kern/kernel.asm	/^f010619e:	a3 c0 d3 22 f0       	mov    %eax,0xf022d3c0$/;"	l
f01061a3	obj/kern/kernel.asm	/^f01061a3:	a1 c4 d3 22 f0       	mov    0xf022d3c4,%eax$/;"	l
f01061a8	obj/kern/kernel.asm	/^f01061a8:	83 f8 07             	cmp    $0x7,%eax$/;"	l
f01061ab	obj/kern/kernel.asm	/^f01061ab:	7f 12                	jg     f01061bf <mp_init+0x1f5>$/;"	l
f01061ad	obj/kern/kernel.asm	/^f01061ad:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f01061b0	obj/kern/kernel.asm	/^f01061b0:	88 82 20 d0 22 f0    	mov    %al,-0xfdd2fe0(%edx)$/;"	l
f01061b6	obj/kern/kernel.asm	/^f01061b6:	83 05 c4 d3 22 f0 01 	addl   $0x1,0xf022d3c4$/;"	l
f01061bd	obj/kern/kernel.asm	/^f01061bd:	eb 14                	jmp    f01061d3 <mp_init+0x209>$/;"	l
f01061bf	obj/kern/kernel.asm	/^f01061bf:	0f b6 42 01          	movzbl 0x1(%edx),%eax$/;"	l
f01061c3	obj/kern/kernel.asm	/^f01061c3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01061c7	obj/kern/kernel.asm	/^f01061c7:	c7 04 24 0c 83 10 f0 	movl   $0xf010830c,(%esp)$/;"	l
f01061ce	obj/kern/kernel.asm	/^f01061ce:	e8 dc e0 ff ff       	call   f01042af <cprintf>$/;"	l
f01061d3	obj/kern/kernel.asm	/^f01061d3:	83 c3 14             	add    $0x14,%ebx$/;"	l
f01061d6	obj/kern/kernel.asm	/^f01061d6:	eb 26                	jmp    f01061fe <mp_init+0x234>$/;"	l
f01061d8	obj/kern/kernel.asm	/^f01061d8:	83 c3 08             	add    $0x8,%ebx$/;"	l
f01061db	obj/kern/kernel.asm	/^f01061db:	eb 21                	jmp    f01061fe <mp_init+0x234>$/;"	l
f01061dd	obj/kern/kernel.asm	/^f01061dd:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01061e0	obj/kern/kernel.asm	/^f01061e0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01061e4	obj/kern/kernel.asm	/^f01061e4:	c7 04 24 34 83 10 f0 	movl   $0xf0108334,(%esp)$/;"	l
f01061eb	obj/kern/kernel.asm	/^f01061eb:	e8 bf e0 ff ff       	call   f01042af <cprintf>$/;"	l
f01061f0	obj/kern/kernel.asm	/^f01061f0:	c7 05 00 d0 22 f0 00 	movl   $0x0,0xf022d000$/;"	l
f01061f7	obj/kern/kernel.asm	/^f01061f7:	00 00 00 $/;"	l
f01061fa	obj/kern/kernel.asm	/^f01061fa:	0f b7 77 22          	movzwl 0x22(%edi),%esi$/;"	l
f01061fe	obj/kern/kernel.asm	/^f01061fe:	83 c6 01             	add    $0x1,%esi$/;"	l
f0106201	obj/kern/kernel.asm	/^f0106201:	0f b7 47 22          	movzwl 0x22(%edi),%eax$/;"	l
f0106205	obj/kern/kernel.asm	/^f0106205:	39 f0                	cmp    %esi,%eax$/;"	l
f0106207	obj/kern/kernel.asm	/^f0106207:	0f 87 70 ff ff ff    	ja     f010617d <mp_init+0x1b3>$/;"	l
f010620d	obj/kern/kernel.asm	/^f010620d:	a1 c0 d3 22 f0       	mov    0xf022d3c0,%eax$/;"	l
f0106212	obj/kern/kernel.asm	/^f0106212:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)$/;"	l
f0106219	obj/kern/kernel.asm	/^f0106219:	83 3d 00 d0 22 f0 00 	cmpl   $0x0,0xf022d000$/;"	l
f0106220	obj/kern/kernel.asm	/^f0106220:	75 22                	jne    f0106244 <mp_init+0x27a>$/;"	l
f0106222	obj/kern/kernel.asm	/^f0106222:	c7 05 c4 d3 22 f0 01 	movl   $0x1,0xf022d3c4$/;"	l
f0106229	obj/kern/kernel.asm	/^f0106229:	00 00 00 $/;"	l
f010622c	obj/kern/kernel.asm	/^f010622c:	c7 05 00 e0 26 f0 00 	movl   $0x0,0xf026e000$/;"	l
f0106233	obj/kern/kernel.asm	/^f0106233:	00 00 00 $/;"	l
f0106236	obj/kern/kernel.asm	/^f0106236:	c7 04 24 54 83 10 f0 	movl   $0xf0108354,(%esp)$/;"	l
f010623d	obj/kern/kernel.asm	/^f010623d:	e8 6d e0 ff ff       	call   f01042af <cprintf>$/;"	l
f0106242	obj/kern/kernel.asm	/^f0106242:	eb 48                	jmp    f010628c <mp_init+0x2c2>$/;"	l
f0106244	obj/kern/kernel.asm	/^f0106244:	a1 c4 d3 22 f0       	mov    0xf022d3c4,%eax$/;"	l
f0106249	obj/kern/kernel.asm	/^f0106249:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010624d	obj/kern/kernel.asm	/^f010624d:	a1 c0 d3 22 f0       	mov    0xf022d3c0,%eax$/;"	l
f0106252	obj/kern/kernel.asm	/^f0106252:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0106255	obj/kern/kernel.asm	/^f0106255:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106259	obj/kern/kernel.asm	/^f0106259:	c7 04 24 db 83 10 f0 	movl   $0xf01083db,(%esp)$/;"	l
f0106260	obj/kern/kernel.asm	/^f0106260:	e8 4a e0 ff ff       	call   f01042af <cprintf>$/;"	l
f0106265	obj/kern/kernel.asm	/^f0106265:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0106268	obj/kern/kernel.asm	/^f0106268:	80 78 0c 00          	cmpb   $0x0,0xc(%eax)$/;"	l
f010626c	obj/kern/kernel.asm	/^f010626c:	74 1e                	je     f010628c <mp_init+0x2c2>$/;"	l
f010626e	obj/kern/kernel.asm	/^f010626e:	c7 04 24 80 83 10 f0 	movl   $0xf0108380,(%esp)$/;"	l
f0106275	obj/kern/kernel.asm	/^f0106275:	e8 35 e0 ff ff       	call   f01042af <cprintf>$/;"	l
f010627a	obj/kern/kernel.asm	/^f010627a:	ba 22 00 00 00       	mov    $0x22,%edx$/;"	l
f010627f	obj/kern/kernel.asm	/^f010627f:	b8 70 00 00 00       	mov    $0x70,%eax$/;"	l
f0106284	obj/kern/kernel.asm	/^f0106284:	ee                   	out    %al,(%dx)$/;"	l
f0106285	obj/kern/kernel.asm	/^f0106285:	b2 23                	mov    $0x23,%dl$/;"	l
f0106287	obj/kern/kernel.asm	/^f0106287:	ec                   	in     (%dx),%al$/;"	l
f0106288	obj/kern/kernel.asm	/^f0106288:	83 c8 01             	or     $0x1,%eax$/;"	l
f010628b	obj/kern/kernel.asm	/^f010628b:	ee                   	out    %al,(%dx)$/;"	l
f010628c	obj/kern/kernel.asm	/^f010628c:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f010628f	obj/kern/kernel.asm	/^f010628f:	5b                   	pop    %ebx$/;"	l
f0106290	obj/kern/kernel.asm	/^f0106290:	5e                   	pop    %esi$/;"	l
f0106291	obj/kern/kernel.asm	/^f0106291:	5f                   	pop    %edi$/;"	l
f0106292	obj/kern/kernel.asm	/^f0106292:	5d                   	pop    %ebp$/;"	l
f0106293	obj/kern/kernel.asm	/^f0106293:	c3                   	ret    $/;"	l
f0106294	obj/kern/kernel.asm	/^f0106294 <lapicw>:$/;"	l
f0106294	obj/kern/kernel.asm	/^f0106294:	55                   	push   %ebp$/;"	l
f0106295	obj/kern/kernel.asm	/^f0106295:	89 e5                	mov    %esp,%ebp$/;"	l
f0106297	obj/kern/kernel.asm	/^f0106297:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f010629a	obj/kern/kernel.asm	/^f010629a:	03 05 00 e0 26 f0    	add    0xf026e000,%eax$/;"	l
f01062a0	obj/kern/kernel.asm	/^f01062a0:	89 10                	mov    %edx,(%eax)$/;"	l
f01062a2	obj/kern/kernel.asm	/^f01062a2:	a1 00 e0 26 f0       	mov    0xf026e000,%eax$/;"	l
f01062a7	obj/kern/kernel.asm	/^f01062a7:	83 c0 20             	add    $0x20,%eax$/;"	l
f01062aa	obj/kern/kernel.asm	/^f01062aa:	8b 00                	mov    (%eax),%eax$/;"	l
f01062ac	obj/kern/kernel.asm	/^f01062ac:	5d                   	pop    %ebp$/;"	l
f01062ad	obj/kern/kernel.asm	/^f01062ad:	c3                   	ret    $/;"	l
f01062ae	obj/kern/kernel.asm	/^f01062ae <cpunum>:$/;"	l
f01062ae	obj/kern/kernel.asm	/^f01062ae:	55                   	push   %ebp$/;"	l
f01062af	obj/kern/kernel.asm	/^f01062af:	89 e5                	mov    %esp,%ebp$/;"	l
f01062b1	obj/kern/kernel.asm	/^f01062b1:	8b 15 00 e0 26 f0    	mov    0xf026e000,%edx$/;"	l
f01062b7	obj/kern/kernel.asm	/^f01062b7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01062bc	obj/kern/kernel.asm	/^f01062bc:	85 d2                	test   %edx,%edx$/;"	l
f01062be	obj/kern/kernel.asm	/^f01062be:	74 08                	je     f01062c8 <cpunum+0x1a>$/;"	l
f01062c0	obj/kern/kernel.asm	/^f01062c0:	83 c2 20             	add    $0x20,%edx$/;"	l
f01062c3	obj/kern/kernel.asm	/^f01062c3:	8b 02                	mov    (%edx),%eax$/;"	l
f01062c5	obj/kern/kernel.asm	/^f01062c5:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f01062c8	obj/kern/kernel.asm	/^f01062c8:	5d                   	pop    %ebp$/;"	l
f01062c9	obj/kern/kernel.asm	/^f01062c9:	c3                   	ret    $/;"	l
f01062ca	obj/kern/kernel.asm	/^f01062ca <lapic_init>:$/;"	l
f01062ca	obj/kern/kernel.asm	/^f01062ca:	55                   	push   %ebp$/;"	l
f01062cb	obj/kern/kernel.asm	/^f01062cb:	89 e5                	mov    %esp,%ebp$/;"	l
f01062cd	obj/kern/kernel.asm	/^f01062cd:	83 3d 00 e0 26 f0 00 	cmpl   $0x0,0xf026e000$/;"	l
f01062d4	obj/kern/kernel.asm	/^f01062d4:	0f 84 0b 01 00 00    	je     f01063e5 <lapic_init+0x11b>$/;"	l
f01062da	obj/kern/kernel.asm	/^f01062da:	ba 27 01 00 00       	mov    $0x127,%edx$/;"	l
f01062df	obj/kern/kernel.asm	/^f01062df:	b8 3c 00 00 00       	mov    $0x3c,%eax$/;"	l
f01062e4	obj/kern/kernel.asm	/^f01062e4:	e8 ab ff ff ff       	call   f0106294 <lapicw>$/;"	l
f01062e9	obj/kern/kernel.asm	/^f01062e9:	ba 0b 00 00 00       	mov    $0xb,%edx$/;"	l
f01062ee	obj/kern/kernel.asm	/^f01062ee:	b8 f8 00 00 00       	mov    $0xf8,%eax$/;"	l
f01062f3	obj/kern/kernel.asm	/^f01062f3:	e8 9c ff ff ff       	call   f0106294 <lapicw>$/;"	l
f01062f8	obj/kern/kernel.asm	/^f01062f8:	ba 20 00 02 00       	mov    $0x20020,%edx$/;"	l
f01062fd	obj/kern/kernel.asm	/^f01062fd:	b8 c8 00 00 00       	mov    $0xc8,%eax$/;"	l
f0106302	obj/kern/kernel.asm	/^f0106302:	e8 8d ff ff ff       	call   f0106294 <lapicw>$/;"	l
f0106307	obj/kern/kernel.asm	/^f0106307:	ba 80 96 98 00       	mov    $0x989680,%edx$/;"	l
f010630c	obj/kern/kernel.asm	/^f010630c:	b8 e0 00 00 00       	mov    $0xe0,%eax$/;"	l
f0106311	obj/kern/kernel.asm	/^f0106311:	e8 7e ff ff ff       	call   f0106294 <lapicw>$/;"	l
f0106316	obj/kern/kernel.asm	/^f0106316:	e8 93 ff ff ff       	call   f01062ae <cpunum>$/;"	l
f010631b	obj/kern/kernel.asm	/^f010631b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010631e	obj/kern/kernel.asm	/^f010631e:	05 20 d0 22 f0       	add    $0xf022d020,%eax$/;"	l
f0106323	obj/kern/kernel.asm	/^f0106323:	39 05 c0 d3 22 f0    	cmp    %eax,0xf022d3c0$/;"	l
f0106329	obj/kern/kernel.asm	/^f0106329:	74 0f                	je     f010633a <lapic_init+0x70>$/;"	l
f010632b	obj/kern/kernel.asm	/^f010632b:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0106330	obj/kern/kernel.asm	/^f0106330:	b8 d4 00 00 00       	mov    $0xd4,%eax$/;"	l
f0106335	obj/kern/kernel.asm	/^f0106335:	e8 5a ff ff ff       	call   f0106294 <lapicw>$/;"	l
f010633a	obj/kern/kernel.asm	/^f010633a:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f010633f	obj/kern/kernel.asm	/^f010633f:	b8 d8 00 00 00       	mov    $0xd8,%eax$/;"	l
f0106344	obj/kern/kernel.asm	/^f0106344:	e8 4b ff ff ff       	call   f0106294 <lapicw>$/;"	l
f0106349	obj/kern/kernel.asm	/^f0106349:	a1 00 e0 26 f0       	mov    0xf026e000,%eax$/;"	l
f010634e	obj/kern/kernel.asm	/^f010634e:	83 c0 30             	add    $0x30,%eax$/;"	l
f0106351	obj/kern/kernel.asm	/^f0106351:	8b 00                	mov    (%eax),%eax$/;"	l
f0106353	obj/kern/kernel.asm	/^f0106353:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0106356	obj/kern/kernel.asm	/^f0106356:	3c 03                	cmp    $0x3,%al$/;"	l
f0106358	obj/kern/kernel.asm	/^f0106358:	76 0f                	jbe    f0106369 <lapic_init+0x9f>$/;"	l
f010635a	obj/kern/kernel.asm	/^f010635a:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f010635f	obj/kern/kernel.asm	/^f010635f:	b8 d0 00 00 00       	mov    $0xd0,%eax$/;"	l
f0106364	obj/kern/kernel.asm	/^f0106364:	e8 2b ff ff ff       	call   f0106294 <lapicw>$/;"	l
f0106369	obj/kern/kernel.asm	/^f0106369:	ba 33 00 00 00       	mov    $0x33,%edx$/;"	l
f010636e	obj/kern/kernel.asm	/^f010636e:	b8 dc 00 00 00       	mov    $0xdc,%eax$/;"	l
f0106373	obj/kern/kernel.asm	/^f0106373:	e8 1c ff ff ff       	call   f0106294 <lapicw>$/;"	l
f0106378	obj/kern/kernel.asm	/^f0106378:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010637d	obj/kern/kernel.asm	/^f010637d:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f0106382	obj/kern/kernel.asm	/^f0106382:	e8 0d ff ff ff       	call   f0106294 <lapicw>$/;"	l
f0106387	obj/kern/kernel.asm	/^f0106387:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010638c	obj/kern/kernel.asm	/^f010638c:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f0106391	obj/kern/kernel.asm	/^f0106391:	e8 fe fe ff ff       	call   f0106294 <lapicw>$/;"	l
f0106396	obj/kern/kernel.asm	/^f0106396:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010639b	obj/kern/kernel.asm	/^f010639b:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f01063a0	obj/kern/kernel.asm	/^f01063a0:	e8 ef fe ff ff       	call   f0106294 <lapicw>$/;"	l
f01063a5	obj/kern/kernel.asm	/^f01063a5:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01063aa	obj/kern/kernel.asm	/^f01063aa:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f01063af	obj/kern/kernel.asm	/^f01063af:	e8 e0 fe ff ff       	call   f0106294 <lapicw>$/;"	l
f01063b4	obj/kern/kernel.asm	/^f01063b4:	ba 00 85 08 00       	mov    $0x88500,%edx$/;"	l
f01063b9	obj/kern/kernel.asm	/^f01063b9:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f01063be	obj/kern/kernel.asm	/^f01063be:	e8 d1 fe ff ff       	call   f0106294 <lapicw>$/;"	l
f01063c3	obj/kern/kernel.asm	/^f01063c3:	8b 15 00 e0 26 f0    	mov    0xf026e000,%edx$/;"	l
f01063c9	obj/kern/kernel.asm	/^f01063c9:	81 c2 00 03 00 00    	add    $0x300,%edx$/;"	l
f01063cf	obj/kern/kernel.asm	/^f01063cf:	8b 02                	mov    (%edx),%eax$/;"	l
f01063d1	obj/kern/kernel.asm	/^f01063d1:	f6 c4 10             	test   $0x10,%ah$/;"	l
f01063d4	obj/kern/kernel.asm	/^f01063d4:	75 f9                	jne    f01063cf <lapic_init+0x105>$/;"	l
f01063d6	obj/kern/kernel.asm	/^f01063d6:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01063db	obj/kern/kernel.asm	/^f01063db:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01063e0	obj/kern/kernel.asm	/^f01063e0:	e8 af fe ff ff       	call   f0106294 <lapicw>$/;"	l
f01063e5	obj/kern/kernel.asm	/^f01063e5:	5d                   	pop    %ebp$/;"	l
f01063e6	obj/kern/kernel.asm	/^f01063e6:	c3                   	ret    $/;"	l
f01063e7	obj/kern/kernel.asm	/^f01063e7 <lapic_eoi>:$/;"	l
f01063e7	obj/kern/kernel.asm	/^f01063e7:	55                   	push   %ebp$/;"	l
f01063e8	obj/kern/kernel.asm	/^f01063e8:	89 e5                	mov    %esp,%ebp$/;"	l
f01063ea	obj/kern/kernel.asm	/^f01063ea:	83 3d 00 e0 26 f0 00 	cmpl   $0x0,0xf026e000$/;"	l
f01063f1	obj/kern/kernel.asm	/^f01063f1:	74 0f                	je     f0106402 <lapic_eoi+0x1b>$/;"	l
f01063f3	obj/kern/kernel.asm	/^f01063f3:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01063f8	obj/kern/kernel.asm	/^f01063f8:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f01063fd	obj/kern/kernel.asm	/^f01063fd:	e8 92 fe ff ff       	call   f0106294 <lapicw>$/;"	l
f0106402	obj/kern/kernel.asm	/^f0106402:	5d                   	pop    %ebp$/;"	l
f0106403	obj/kern/kernel.asm	/^f0106403:	c3                   	ret    $/;"	l
f0106404	obj/kern/kernel.asm	/^f0106404 <microdelay>:$/;"	l
f0106404	obj/kern/kernel.asm	/^f0106404:	55                   	push   %ebp$/;"	l
f0106405	obj/kern/kernel.asm	/^f0106405:	89 e5                	mov    %esp,%ebp$/;"	l
f0106407	obj/kern/kernel.asm	/^f0106407:	5d                   	pop    %ebp$/;"	l
f0106408	obj/kern/kernel.asm	/^f0106408:	c3                   	ret    $/;"	l
f0106409	obj/kern/kernel.asm	/^f0106409 <lapic_ipi>:$/;"	l
f0106409	obj/kern/kernel.asm	/^f0106409:	55                   	push   %ebp$/;"	l
f010640a	obj/kern/kernel.asm	/^f010640a:	89 e5                	mov    %esp,%ebp$/;"	l
f010640c	obj/kern/kernel.asm	/^f010640c:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010640f	obj/kern/kernel.asm	/^f010640f:	81 ca 00 00 0c 00    	or     $0xc0000,%edx$/;"	l
f0106415	obj/kern/kernel.asm	/^f0106415:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f010641a	obj/kern/kernel.asm	/^f010641a:	e8 75 fe ff ff       	call   f0106294 <lapicw>$/;"	l
f010641f	obj/kern/kernel.asm	/^f010641f:	8b 15 00 e0 26 f0    	mov    0xf026e000,%edx$/;"	l
f0106425	obj/kern/kernel.asm	/^f0106425:	81 c2 00 03 00 00    	add    $0x300,%edx$/;"	l
f010642b	obj/kern/kernel.asm	/^f010642b:	8b 02                	mov    (%edx),%eax$/;"	l
f010642d	obj/kern/kernel.asm	/^f010642d:	f6 c4 10             	test   $0x10,%ah$/;"	l
f0106430	obj/kern/kernel.asm	/^f0106430:	75 f9                	jne    f010642b <lapic_ipi+0x22>$/;"	l
f0106432	obj/kern/kernel.asm	/^f0106432:	5d                   	pop    %ebp$/;"	l
f0106433	obj/kern/kernel.asm	/^f0106433:	c3                   	ret    $/;"	l
f0106434	obj/kern/kernel.asm	/^f0106434 <lapic_startap>:$/;"	l
f0106434	obj/kern/kernel.asm	/^f0106434:	55                   	push   %ebp$/;"	l
f0106435	obj/kern/kernel.asm	/^f0106435:	89 e5                	mov    %esp,%ebp$/;"	l
f0106437	obj/kern/kernel.asm	/^f0106437:	56                   	push   %esi$/;"	l
f0106438	obj/kern/kernel.asm	/^f0106438:	53                   	push   %ebx$/;"	l
f0106439	obj/kern/kernel.asm	/^f0106439:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010643c	obj/kern/kernel.asm	/^f010643c:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f010643f	obj/kern/kernel.asm	/^f010643f:	0f b6 5d 08          	movzbl 0x8(%ebp),%ebx$/;"	l
f0106443	obj/kern/kernel.asm	/^f0106443:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0106448	obj/kern/kernel.asm	/^f0106448:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f010644d	obj/kern/kernel.asm	/^f010644d:	ee                   	out    %al,(%dx)$/;"	l
f010644e	obj/kern/kernel.asm	/^f010644e:	b2 71                	mov    $0x71,%dl$/;"	l
f0106450	obj/kern/kernel.asm	/^f0106450:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0106455	obj/kern/kernel.asm	/^f0106455:	ee                   	out    %al,(%dx)$/;"	l
f0106456	obj/kern/kernel.asm	/^f0106456:	83 3d e8 ce 22 f0 00 	cmpl   $0x0,0xf022cee8$/;"	l
f010645d	obj/kern/kernel.asm	/^f010645d:	75 24                	jne    f0106483 <lapic_startap+0x4f>$/;"	l
f010645f	obj/kern/kernel.asm	/^f010645f:	c7 44 24 0c 67 04 00 	movl   $0x467,0xc(%esp)$/;"	l
f0106466	obj/kern/kernel.asm	/^f0106466:	00 $/;"	l
f0106467	obj/kern/kernel.asm	/^f0106467:	c7 44 24 08 8c 6a 10 	movl   $0xf0106a8c,0x8(%esp)$/;"	l
f010646e	obj/kern/kernel.asm	/^f010646e:	f0 $/;"	l
f010646f	obj/kern/kernel.asm	/^f010646f:	c7 44 24 04 93 00 00 	movl   $0x93,0x4(%esp)$/;"	l
f0106476	obj/kern/kernel.asm	/^f0106476:	00 $/;"	l
f0106477	obj/kern/kernel.asm	/^f0106477:	c7 04 24 f8 83 10 f0 	movl   $0xf01083f8,(%esp)$/;"	l
f010647e	obj/kern/kernel.asm	/^f010647e:	e8 02 9c ff ff       	call   f0100085 <_panic>$/;"	l
f0106483	obj/kern/kernel.asm	/^f0106483:	66 c7 05 67 04 00 f0 	movw   $0x0,0xf0000467$/;"	l
f010648a	obj/kern/kernel.asm	/^f010648a:	00 00 $/;"	l
f010648c	obj/kern/kernel.asm	/^f010648c:	89 f0                	mov    %esi,%eax$/;"	l
f010648e	obj/kern/kernel.asm	/^f010648e:	c1 e8 04             	shr    $0x4,%eax$/;"	l
f0106491	obj/kern/kernel.asm	/^f0106491:	66 a3 69 04 00 f0    	mov    %ax,0xf0000469$/;"	l
f0106497	obj/kern/kernel.asm	/^f0106497:	c1 e3 18             	shl    $0x18,%ebx$/;"	l
f010649a	obj/kern/kernel.asm	/^f010649a:	89 da                	mov    %ebx,%edx$/;"	l
f010649c	obj/kern/kernel.asm	/^f010649c:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f01064a1	obj/kern/kernel.asm	/^f01064a1:	e8 ee fd ff ff       	call   f0106294 <lapicw>$/;"	l
f01064a6	obj/kern/kernel.asm	/^f01064a6:	ba 00 c5 00 00       	mov    $0xc500,%edx$/;"	l
f01064ab	obj/kern/kernel.asm	/^f01064ab:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f01064b0	obj/kern/kernel.asm	/^f01064b0:	e8 df fd ff ff       	call   f0106294 <lapicw>$/;"	l
f01064b5	obj/kern/kernel.asm	/^f01064b5:	ba 00 85 00 00       	mov    $0x8500,%edx$/;"	l
f01064ba	obj/kern/kernel.asm	/^f01064ba:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f01064bf	obj/kern/kernel.asm	/^f01064bf:	e8 d0 fd ff ff       	call   f0106294 <lapicw>$/;"	l
f01064c4	obj/kern/kernel.asm	/^f01064c4:	c1 ee 0c             	shr    $0xc,%esi$/;"	l
f01064c7	obj/kern/kernel.asm	/^f01064c7:	81 ce 00 06 00 00    	or     $0x600,%esi$/;"	l
f01064cd	obj/kern/kernel.asm	/^f01064cd:	89 da                	mov    %ebx,%edx$/;"	l
f01064cf	obj/kern/kernel.asm	/^f01064cf:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f01064d4	obj/kern/kernel.asm	/^f01064d4:	e8 bb fd ff ff       	call   f0106294 <lapicw>$/;"	l
f01064d9	obj/kern/kernel.asm	/^f01064d9:	89 f2                	mov    %esi,%edx$/;"	l
f01064db	obj/kern/kernel.asm	/^f01064db:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f01064e0	obj/kern/kernel.asm	/^f01064e0:	e8 af fd ff ff       	call   f0106294 <lapicw>$/;"	l
f01064e5	obj/kern/kernel.asm	/^f01064e5:	89 da                	mov    %ebx,%edx$/;"	l
f01064e7	obj/kern/kernel.asm	/^f01064e7:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f01064ec	obj/kern/kernel.asm	/^f01064ec:	e8 a3 fd ff ff       	call   f0106294 <lapicw>$/;"	l
f01064f1	obj/kern/kernel.asm	/^f01064f1:	89 f2                	mov    %esi,%edx$/;"	l
f01064f3	obj/kern/kernel.asm	/^f01064f3:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f01064f8	obj/kern/kernel.asm	/^f01064f8:	e8 97 fd ff ff       	call   f0106294 <lapicw>$/;"	l
f01064fd	obj/kern/kernel.asm	/^f01064fd:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106500	obj/kern/kernel.asm	/^f0106500:	5b                   	pop    %ebx$/;"	l
f0106501	obj/kern/kernel.asm	/^f0106501:	5e                   	pop    %esi$/;"	l
f0106502	obj/kern/kernel.asm	/^f0106502:	5d                   	pop    %ebp$/;"	l
f0106503	obj/kern/kernel.asm	/^f0106503:	c3                   	ret    $/;"	l
f0106510	obj/kern/kernel.asm	/^f0106510 <__spin_initlock>:$/;"	l
f0106510	obj/kern/kernel.asm	/^f0106510:	55                   	push   %ebp$/;"	l
f0106511	obj/kern/kernel.asm	/^f0106511:	89 e5                	mov    %esp,%ebp$/;"	l
f0106513	obj/kern/kernel.asm	/^f0106513:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106516	obj/kern/kernel.asm	/^f0106516:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f010651c	obj/kern/kernel.asm	/^f010651c:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010651f	obj/kern/kernel.asm	/^f010651f:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
f0106522	obj/kern/kernel.asm	/^f0106522:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
f0106529	obj/kern/kernel.asm	/^f0106529:	5d                   	pop    %ebp$/;"	l
f010652a	obj/kern/kernel.asm	/^f010652a:	c3                   	ret    $/;"	l
f010652b	obj/kern/kernel.asm	/^f010652b <holding>:$/;"	l
f010652b	obj/kern/kernel.asm	/^f010652b:	55                   	push   %ebp$/;"	l
f010652c	obj/kern/kernel.asm	/^f010652c:	89 e5                	mov    %esp,%ebp$/;"	l
f010652e	obj/kern/kernel.asm	/^f010652e:	53                   	push   %ebx$/;"	l
f010652f	obj/kern/kernel.asm	/^f010652f:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0106532	obj/kern/kernel.asm	/^f0106532:	89 c2                	mov    %eax,%edx$/;"	l
f0106534	obj/kern/kernel.asm	/^f0106534:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106539	obj/kern/kernel.asm	/^f0106539:	83 3a 00             	cmpl   $0x0,(%edx)$/;"	l
f010653c	obj/kern/kernel.asm	/^f010653c:	74 18                	je     f0106556 <holding+0x2b>$/;"	l
f010653e	obj/kern/kernel.asm	/^f010653e:	8b 5a 08             	mov    0x8(%edx),%ebx$/;"	l
f0106541	obj/kern/kernel.asm	/^f0106541:	e8 68 fd ff ff       	call   f01062ae <cpunum>$/;"	l
f0106546	obj/kern/kernel.asm	/^f0106546:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106549	obj/kern/kernel.asm	/^f0106549:	05 20 d0 22 f0       	add    $0xf022d020,%eax$/;"	l
f010654e	obj/kern/kernel.asm	/^f010654e:	39 c3                	cmp    %eax,%ebx$/;"	l
f0106550	obj/kern/kernel.asm	/^f0106550:	0f 94 c0             	sete   %al$/;"	l
f0106553	obj/kern/kernel.asm	/^f0106553:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0106556	obj/kern/kernel.asm	/^f0106556:	83 c4 04             	add    $0x4,%esp$/;"	l
f0106559	obj/kern/kernel.asm	/^f0106559:	5b                   	pop    %ebx$/;"	l
f010655a	obj/kern/kernel.asm	/^f010655a:	5d                   	pop    %ebp$/;"	l
f010655b	obj/kern/kernel.asm	/^f010655b:	c3                   	ret    $/;"	l
f010655c	obj/kern/kernel.asm	/^f010655c <spin_unlock>:$/;"	l
f010655c	obj/kern/kernel.asm	/^f010655c:	55                   	push   %ebp$/;"	l
f010655d	obj/kern/kernel.asm	/^f010655d:	89 e5                	mov    %esp,%ebp$/;"	l
f010655f	obj/kern/kernel.asm	/^f010655f:	83 ec 78             	sub    $0x78,%esp$/;"	l
f0106562	obj/kern/kernel.asm	/^f0106562:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f0106565	obj/kern/kernel.asm	/^f0106565:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f0106568	obj/kern/kernel.asm	/^f0106568:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f010656b	obj/kern/kernel.asm	/^f010656b:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010656e	obj/kern/kernel.asm	/^f010656e:	89 d8                	mov    %ebx,%eax$/;"	l
f0106570	obj/kern/kernel.asm	/^f0106570:	e8 b6 ff ff ff       	call   f010652b <holding>$/;"	l
f0106575	obj/kern/kernel.asm	/^f0106575:	85 c0                	test   %eax,%eax$/;"	l
f0106577	obj/kern/kernel.asm	/^f0106577:	0f 85 d5 00 00 00    	jne    f0106652 <spin_unlock+0xf6>$/;"	l
f010657d	obj/kern/kernel.asm	/^f010657d:	c7 44 24 08 28 00 00 	movl   $0x28,0x8(%esp)$/;"	l
f0106584	obj/kern/kernel.asm	/^f0106584:	00 $/;"	l
f0106585	obj/kern/kernel.asm	/^f0106585:	8d 43 0c             	lea    0xc(%ebx),%eax$/;"	l
f0106588	obj/kern/kernel.asm	/^f0106588:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010658c	obj/kern/kernel.asm	/^f010658c:	8d 45 a8             	lea    -0x58(%ebp),%eax$/;"	l
f010658f	obj/kern/kernel.asm	/^f010658f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106592	obj/kern/kernel.asm	/^f0106592:	e8 ce f6 ff ff       	call   f0105c65 <memmove>$/;"	l
f0106597	obj/kern/kernel.asm	/^f0106597:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f010659a	obj/kern/kernel.asm	/^f010659a:	0f b6 30             	movzbl (%eax),%esi$/;"	l
f010659d	obj/kern/kernel.asm	/^f010659d:	8b 5b 04             	mov    0x4(%ebx),%ebx$/;"	l
f01065a0	obj/kern/kernel.asm	/^f01065a0:	e8 09 fd ff ff       	call   f01062ae <cpunum>$/;"	l
f01065a5	obj/kern/kernel.asm	/^f01065a5:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f01065a9	obj/kern/kernel.asm	/^f01065a9:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f01065ad	obj/kern/kernel.asm	/^f01065ad:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01065b1	obj/kern/kernel.asm	/^f01065b1:	c7 04 24 08 84 10 f0 	movl   $0xf0108408,(%esp)$/;"	l
f01065b8	obj/kern/kernel.asm	/^f01065b8:	e8 f2 dc ff ff       	call   f01042af <cprintf>$/;"	l
f01065bd	obj/kern/kernel.asm	/^f01065bd:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f01065c0	obj/kern/kernel.asm	/^f01065c0:	85 c0                	test   %eax,%eax$/;"	l
f01065c2	obj/kern/kernel.asm	/^f01065c2:	74 72                	je     f0106636 <spin_unlock+0xda>$/;"	l
f01065c4	obj/kern/kernel.asm	/^f01065c4:	8d 5d a8             	lea    -0x58(%ebp),%ebx$/;"	l
f01065c7	obj/kern/kernel.asm	/^f01065c7:	8d 7d cc             	lea    -0x34(%ebp),%edi$/;"	l
f01065ca	obj/kern/kernel.asm	/^f01065ca:	8d 75 d0             	lea    -0x30(%ebp),%esi$/;"	l
f01065cd	obj/kern/kernel.asm	/^f01065cd:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01065d1	obj/kern/kernel.asm	/^f01065d1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01065d4	obj/kern/kernel.asm	/^f01065d4:	e8 15 ea ff ff       	call   f0104fee <debuginfo_eip>$/;"	l
f01065d9	obj/kern/kernel.asm	/^f01065d9:	85 c0                	test   %eax,%eax$/;"	l
f01065db	obj/kern/kernel.asm	/^f01065db:	78 39                	js     f0106616 <spin_unlock+0xba>$/;"	l
f01065dd	obj/kern/kernel.asm	/^f01065dd:	8b 03                	mov    (%ebx),%eax$/;"	l
f01065df	obj/kern/kernel.asm	/^f01065df:	89 c2                	mov    %eax,%edx$/;"	l
f01065e1	obj/kern/kernel.asm	/^f01065e1:	2b 55 e0             	sub    -0x20(%ebp),%edx$/;"	l
f01065e4	obj/kern/kernel.asm	/^f01065e4:	89 54 24 18          	mov    %edx,0x18(%esp)$/;"	l
f01065e8	obj/kern/kernel.asm	/^f01065e8:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f01065eb	obj/kern/kernel.asm	/^f01065eb:	89 54 24 14          	mov    %edx,0x14(%esp)$/;"	l
f01065ef	obj/kern/kernel.asm	/^f01065ef:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f01065f2	obj/kern/kernel.asm	/^f01065f2:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
f01065f6	obj/kern/kernel.asm	/^f01065f6:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f01065f9	obj/kern/kernel.asm	/^f01065f9:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f01065fd	obj/kern/kernel.asm	/^f01065fd:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f0106600	obj/kern/kernel.asm	/^f0106600:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0106604	obj/kern/kernel.asm	/^f0106604:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106608	obj/kern/kernel.asm	/^f0106608:	c7 04 24 6c 84 10 f0 	movl   $0xf010846c,(%esp)$/;"	l
f010660f	obj/kern/kernel.asm	/^f010660f:	e8 9b dc ff ff       	call   f01042af <cprintf>$/;"	l
f0106614	obj/kern/kernel.asm	/^f0106614:	eb 12                	jmp    f0106628 <spin_unlock+0xcc>$/;"	l
f0106616	obj/kern/kernel.asm	/^f0106616:	8b 03                	mov    (%ebx),%eax$/;"	l
f0106618	obj/kern/kernel.asm	/^f0106618:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010661c	obj/kern/kernel.asm	/^f010661c:	c7 04 24 83 84 10 f0 	movl   $0xf0108483,(%esp)$/;"	l
f0106623	obj/kern/kernel.asm	/^f0106623:	e8 87 dc ff ff       	call   f01042af <cprintf>$/;"	l
f0106628	obj/kern/kernel.asm	/^f0106628:	39 fb                	cmp    %edi,%ebx$/;"	l
f010662a	obj/kern/kernel.asm	/^f010662a:	74 0a                	je     f0106636 <spin_unlock+0xda>$/;"	l
f010662c	obj/kern/kernel.asm	/^f010662c:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f010662f	obj/kern/kernel.asm	/^f010662f:	83 c3 04             	add    $0x4,%ebx$/;"	l
f0106632	obj/kern/kernel.asm	/^f0106632:	85 c0                	test   %eax,%eax$/;"	l
f0106634	obj/kern/kernel.asm	/^f0106634:	75 97                	jne    f01065cd <spin_unlock+0x71>$/;"	l
f0106636	obj/kern/kernel.asm	/^f0106636:	c7 44 24 08 8b 84 10 	movl   $0xf010848b,0x8(%esp)$/;"	l
f010663d	obj/kern/kernel.asm	/^f010663d:	f0 $/;"	l
f010663e	obj/kern/kernel.asm	/^f010663e:	c7 44 24 04 68 00 00 	movl   $0x68,0x4(%esp)$/;"	l
f0106645	obj/kern/kernel.asm	/^f0106645:	00 $/;"	l
f0106646	obj/kern/kernel.asm	/^f0106646:	c7 04 24 97 84 10 f0 	movl   $0xf0108497,(%esp)$/;"	l
f010664d	obj/kern/kernel.asm	/^f010664d:	e8 33 9a ff ff       	call   f0100085 <_panic>$/;"	l
f0106652	obj/kern/kernel.asm	/^f0106652:	c7 43 0c 00 00 00 00 	movl   $0x0,0xc(%ebx)$/;"	l
f0106659	obj/kern/kernel.asm	/^f0106659:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)$/;"	l
f0106660	obj/kern/kernel.asm	/^f0106660:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106665	obj/kern/kernel.asm	/^f0106665:	f0 87 03             	lock xchg %eax,(%ebx)$/;"	l
f0106668	obj/kern/kernel.asm	/^f0106668:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f010666b	obj/kern/kernel.asm	/^f010666b:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f010666e	obj/kern/kernel.asm	/^f010666e:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f0106671	obj/kern/kernel.asm	/^f0106671:	89 ec                	mov    %ebp,%esp$/;"	l
f0106673	obj/kern/kernel.asm	/^f0106673:	5d                   	pop    %ebp$/;"	l
f0106674	obj/kern/kernel.asm	/^f0106674:	c3                   	ret    $/;"	l
f0106675	obj/kern/kernel.asm	/^f0106675 <spin_lock>:$/;"	l
f0106675	obj/kern/kernel.asm	/^f0106675:	55                   	push   %ebp$/;"	l
f0106676	obj/kern/kernel.asm	/^f0106676:	89 e5                	mov    %esp,%ebp$/;"	l
f0106678	obj/kern/kernel.asm	/^f0106678:	56                   	push   %esi$/;"	l
f0106679	obj/kern/kernel.asm	/^f0106679:	53                   	push   %ebx$/;"	l
f010667a	obj/kern/kernel.asm	/^f010667a:	83 ec 20             	sub    $0x20,%esp$/;"	l
f010667d	obj/kern/kernel.asm	/^f010667d:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0106680	obj/kern/kernel.asm	/^f0106680:	89 d8                	mov    %ebx,%eax$/;"	l
f0106682	obj/kern/kernel.asm	/^f0106682:	e8 a4 fe ff ff       	call   f010652b <holding>$/;"	l
f0106687	obj/kern/kernel.asm	/^f0106687:	85 c0                	test   %eax,%eax$/;"	l
f0106689	obj/kern/kernel.asm	/^f0106689:	75 12                	jne    f010669d <spin_lock+0x28>$/;"	l
f010668b	obj/kern/kernel.asm	/^f010668b:	89 da                	mov    %ebx,%edx$/;"	l
f010668d	obj/kern/kernel.asm	/^f010668d:	b0 01                	mov    $0x1,%al$/;"	l
f010668f	obj/kern/kernel.asm	/^f010668f:	f0 87 03             	lock xchg %eax,(%ebx)$/;"	l
f0106692	obj/kern/kernel.asm	/^f0106692:	b9 01 00 00 00       	mov    $0x1,%ecx$/;"	l
f0106697	obj/kern/kernel.asm	/^f0106697:	85 c0                	test   %eax,%eax$/;"	l
f0106699	obj/kern/kernel.asm	/^f0106699:	75 2e                	jne    f01066c9 <spin_lock+0x54>$/;"	l
f010669b	obj/kern/kernel.asm	/^f010669b:	eb 37                	jmp    f01066d4 <spin_lock+0x5f>$/;"	l
f010669d	obj/kern/kernel.asm	/^f010669d:	8b 5b 04             	mov    0x4(%ebx),%ebx$/;"	l
f01066a0	obj/kern/kernel.asm	/^f01066a0:	e8 09 fc ff ff       	call   f01062ae <cpunum>$/;"	l
f01066a5	obj/kern/kernel.asm	/^f01066a5:	89 5c 24 10          	mov    %ebx,0x10(%esp)$/;"	l
f01066a9	obj/kern/kernel.asm	/^f01066a9:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01066ad	obj/kern/kernel.asm	/^f01066ad:	c7 44 24 08 40 84 10 	movl   $0xf0108440,0x8(%esp)$/;"	l
f01066b4	obj/kern/kernel.asm	/^f01066b4:	f0 $/;"	l
f01066b5	obj/kern/kernel.asm	/^f01066b5:	c7 44 24 04 42 00 00 	movl   $0x42,0x4(%esp)$/;"	l
f01066bc	obj/kern/kernel.asm	/^f01066bc:	00 $/;"	l
f01066bd	obj/kern/kernel.asm	/^f01066bd:	c7 04 24 97 84 10 f0 	movl   $0xf0108497,(%esp)$/;"	l
f01066c4	obj/kern/kernel.asm	/^f01066c4:	e8 bc 99 ff ff       	call   f0100085 <_panic>$/;"	l
f01066c9	obj/kern/kernel.asm	/^f01066c9:	f3 90                	pause  $/;"	l
f01066cb	obj/kern/kernel.asm	/^f01066cb:	89 c8                	mov    %ecx,%eax$/;"	l
f01066cd	obj/kern/kernel.asm	/^f01066cd:	f0 87 02             	lock xchg %eax,(%edx)$/;"	l
f01066d0	obj/kern/kernel.asm	/^f01066d0:	85 c0                	test   %eax,%eax$/;"	l
f01066d2	obj/kern/kernel.asm	/^f01066d2:	75 f5                	jne    f01066c9 <spin_lock+0x54>$/;"	l
f01066d4	obj/kern/kernel.asm	/^f01066d4:	e8 d5 fb ff ff       	call   f01062ae <cpunum>$/;"	l
f01066d9	obj/kern/kernel.asm	/^f01066d9:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01066dc	obj/kern/kernel.asm	/^f01066dc:	05 20 d0 22 f0       	add    $0xf022d020,%eax$/;"	l
f01066e1	obj/kern/kernel.asm	/^f01066e1:	89 43 08             	mov    %eax,0x8(%ebx)$/;"	l
f01066e4	obj/kern/kernel.asm	/^f01066e4:	8d 73 0c             	lea    0xc(%ebx),%esi$/;"	l
f01066e7	obj/kern/kernel.asm	/^f01066e7:	89 e8                	mov    %ebp,%eax$/;"	l
f01066e9	obj/kern/kernel.asm	/^f01066e9:	8d 90 00 00 80 10    	lea    0x10800000(%eax),%edx$/;"	l
f01066ef	obj/kern/kernel.asm	/^f01066ef:	81 fa ff ff 7f 0e    	cmp    $0xe7fffff,%edx$/;"	l
f01066f5	obj/kern/kernel.asm	/^f01066f5:	76 40                	jbe    f0106737 <spin_lock+0xc2>$/;"	l
f01066f7	obj/kern/kernel.asm	/^f01066f7:	eb 33                	jmp    f010672c <spin_lock+0xb7>$/;"	l
f01066f9	obj/kern/kernel.asm	/^f01066f9:	8d 8a 00 00 80 10    	lea    0x10800000(%edx),%ecx$/;"	l
f01066ff	obj/kern/kernel.asm	/^f01066ff:	81 f9 ff ff 7f 0e    	cmp    $0xe7fffff,%ecx$/;"	l
f0106705	obj/kern/kernel.asm	/^f0106705:	77 2a                	ja     f0106731 <spin_lock+0xbc>$/;"	l
f0106707	obj/kern/kernel.asm	/^f0106707:	8b 4a 04             	mov    0x4(%edx),%ecx$/;"	l
f010670a	obj/kern/kernel.asm	/^f010670a:	89 0c 86             	mov    %ecx,(%esi,%eax,4)$/;"	l
f010670d	obj/kern/kernel.asm	/^f010670d:	8b 12                	mov    (%edx),%edx$/;"	l
f010670f	obj/kern/kernel.asm	/^f010670f:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106712	obj/kern/kernel.asm	/^f0106712:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f0106715	obj/kern/kernel.asm	/^f0106715:	75 e2                	jne    f01066f9 <spin_lock+0x84>$/;"	l
f0106717	obj/kern/kernel.asm	/^f0106717:	eb 2d                	jmp    f0106746 <spin_lock+0xd1>$/;"	l
f0106719	obj/kern/kernel.asm	/^f0106719:	c7 02 00 00 00 00    	movl   $0x0,(%edx)$/;"	l
f010671f	obj/kern/kernel.asm	/^f010671f:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106722	obj/kern/kernel.asm	/^f0106722:	83 c2 04             	add    $0x4,%edx$/;"	l
f0106725	obj/kern/kernel.asm	/^f0106725:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0106728	obj/kern/kernel.asm	/^f0106728:	7e ef                	jle    f0106719 <spin_lock+0xa4>$/;"	l
f010672a	obj/kern/kernel.asm	/^f010672a:	eb 1a                	jmp    f0106746 <spin_lock+0xd1>$/;"	l
f010672c	obj/kern/kernel.asm	/^f010672c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106731	obj/kern/kernel.asm	/^f0106731:	8d 54 83 0c          	lea    0xc(%ebx,%eax,4),%edx$/;"	l
f0106735	obj/kern/kernel.asm	/^f0106735:	eb e2                	jmp    f0106719 <spin_lock+0xa4>$/;"	l
f0106737	obj/kern/kernel.asm	/^f0106737:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f010673a	obj/kern/kernel.asm	/^f010673a:	89 53 0c             	mov    %edx,0xc(%ebx)$/;"	l
f010673d	obj/kern/kernel.asm	/^f010673d:	8b 10                	mov    (%eax),%edx$/;"	l
f010673f	obj/kern/kernel.asm	/^f010673f:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0106744	obj/kern/kernel.asm	/^f0106744:	eb b3                	jmp    f01066f9 <spin_lock+0x84>$/;"	l
f0106746	obj/kern/kernel.asm	/^f0106746:	83 c4 20             	add    $0x20,%esp$/;"	l
f0106749	obj/kern/kernel.asm	/^f0106749:	5b                   	pop    %ebx$/;"	l
f010674a	obj/kern/kernel.asm	/^f010674a:	5e                   	pop    %esi$/;"	l
f010674b	obj/kern/kernel.asm	/^f010674b:	5d                   	pop    %ebp$/;"	l
f010674c	obj/kern/kernel.asm	/^f010674c:	c3                   	ret    $/;"	l
f010674d	obj/kern/kernel.asm	/^f010674d:	00 00                	add    %al,(%eax)$/;"	l
f0106750	obj/kern/kernel.asm	/^f0106750 <__udivdi3>:$/;"	l
f0106750	obj/kern/kernel.asm	/^f0106750:	55                   	push   %ebp$/;"	l
f0106751	obj/kern/kernel.asm	/^f0106751:	89 e5                	mov    %esp,%ebp$/;"	l
f0106753	obj/kern/kernel.asm	/^f0106753:	57                   	push   %edi$/;"	l
f0106754	obj/kern/kernel.asm	/^f0106754:	56                   	push   %esi$/;"	l
f0106755	obj/kern/kernel.asm	/^f0106755:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0106758	obj/kern/kernel.asm	/^f0106758:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010675b	obj/kern/kernel.asm	/^f010675b:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010675e	obj/kern/kernel.asm	/^f010675e:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0106761	obj/kern/kernel.asm	/^f0106761:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0106764	obj/kern/kernel.asm	/^f0106764:	85 c0                	test   %eax,%eax$/;"	l
f0106766	obj/kern/kernel.asm	/^f0106766:	89 55 f0             	mov    %edx,-0x10(%ebp)$/;"	l
f0106769	obj/kern/kernel.asm	/^f0106769:	75 35                	jne    f01067a0 <__udivdi3+0x50>$/;"	l
f010676b	obj/kern/kernel.asm	/^f010676b:	39 fe                	cmp    %edi,%esi$/;"	l
f010676d	obj/kern/kernel.asm	/^f010676d:	77 61                	ja     f01067d0 <__udivdi3+0x80>$/;"	l
f010676f	obj/kern/kernel.asm	/^f010676f:	85 f6                	test   %esi,%esi$/;"	l
f0106771	obj/kern/kernel.asm	/^f0106771:	75 0b                	jne    f010677e <__udivdi3+0x2e>$/;"	l
f0106773	obj/kern/kernel.asm	/^f0106773:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0106778	obj/kern/kernel.asm	/^f0106778:	31 d2                	xor    %edx,%edx$/;"	l
f010677a	obj/kern/kernel.asm	/^f010677a:	f7 f6                	div    %esi$/;"	l
f010677c	obj/kern/kernel.asm	/^f010677c:	89 c6                	mov    %eax,%esi$/;"	l
f010677e	obj/kern/kernel.asm	/^f010677e:	8b 4d f0             	mov    -0x10(%ebp),%ecx$/;"	l
f0106781	obj/kern/kernel.asm	/^f0106781:	31 d2                	xor    %edx,%edx$/;"	l
f0106783	obj/kern/kernel.asm	/^f0106783:	89 f8                	mov    %edi,%eax$/;"	l
f0106785	obj/kern/kernel.asm	/^f0106785:	f7 f6                	div    %esi$/;"	l
f0106787	obj/kern/kernel.asm	/^f0106787:	89 c7                	mov    %eax,%edi$/;"	l
f0106789	obj/kern/kernel.asm	/^f0106789:	89 c8                	mov    %ecx,%eax$/;"	l
f010678b	obj/kern/kernel.asm	/^f010678b:	f7 f6                	div    %esi$/;"	l
f010678d	obj/kern/kernel.asm	/^f010678d:	89 c1                	mov    %eax,%ecx$/;"	l
f010678f	obj/kern/kernel.asm	/^f010678f:	89 fa                	mov    %edi,%edx$/;"	l
f0106791	obj/kern/kernel.asm	/^f0106791:	89 c8                	mov    %ecx,%eax$/;"	l
f0106793	obj/kern/kernel.asm	/^f0106793:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106796	obj/kern/kernel.asm	/^f0106796:	5e                   	pop    %esi$/;"	l
f0106797	obj/kern/kernel.asm	/^f0106797:	5f                   	pop    %edi$/;"	l
f0106798	obj/kern/kernel.asm	/^f0106798:	5d                   	pop    %ebp$/;"	l
f0106799	obj/kern/kernel.asm	/^f0106799:	c3                   	ret    $/;"	l
f010679a	obj/kern/kernel.asm	/^f010679a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f01067a0	obj/kern/kernel.asm	/^f01067a0:	39 f8                	cmp    %edi,%eax$/;"	l
f01067a2	obj/kern/kernel.asm	/^f01067a2:	77 1c                	ja     f01067c0 <__udivdi3+0x70>$/;"	l
f01067a4	obj/kern/kernel.asm	/^f01067a4:	0f bd d0             	bsr    %eax,%edx$/;"	l
f01067a7	obj/kern/kernel.asm	/^f01067a7:	83 f2 1f             	xor    $0x1f,%edx$/;"	l
f01067aa	obj/kern/kernel.asm	/^f01067aa:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
f01067ad	obj/kern/kernel.asm	/^f01067ad:	75 39                	jne    f01067e8 <__udivdi3+0x98>$/;"	l
f01067af	obj/kern/kernel.asm	/^f01067af:	3b 75 f0             	cmp    -0x10(%ebp),%esi$/;"	l
f01067b2	obj/kern/kernel.asm	/^f01067b2:	0f 86 a0 00 00 00    	jbe    f0106858 <__udivdi3+0x108>$/;"	l
f01067b8	obj/kern/kernel.asm	/^f01067b8:	39 f8                	cmp    %edi,%eax$/;"	l
f01067ba	obj/kern/kernel.asm	/^f01067ba:	0f 82 98 00 00 00    	jb     f0106858 <__udivdi3+0x108>$/;"	l
f01067c0	obj/kern/kernel.asm	/^f01067c0:	31 ff                	xor    %edi,%edi$/;"	l
f01067c2	obj/kern/kernel.asm	/^f01067c2:	31 c9                	xor    %ecx,%ecx$/;"	l
f01067c4	obj/kern/kernel.asm	/^f01067c4:	89 c8                	mov    %ecx,%eax$/;"	l
f01067c6	obj/kern/kernel.asm	/^f01067c6:	89 fa                	mov    %edi,%edx$/;"	l
f01067c8	obj/kern/kernel.asm	/^f01067c8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01067cb	obj/kern/kernel.asm	/^f01067cb:	5e                   	pop    %esi$/;"	l
f01067cc	obj/kern/kernel.asm	/^f01067cc:	5f                   	pop    %edi$/;"	l
f01067cd	obj/kern/kernel.asm	/^f01067cd:	5d                   	pop    %ebp$/;"	l
f01067ce	obj/kern/kernel.asm	/^f01067ce:	c3                   	ret    $/;"	l
f01067cf	obj/kern/kernel.asm	/^f01067cf:	90                   	nop$/;"	l
f01067d0	obj/kern/kernel.asm	/^f01067d0:	89 d1                	mov    %edx,%ecx$/;"	l
f01067d2	obj/kern/kernel.asm	/^f01067d2:	89 fa                	mov    %edi,%edx$/;"	l
f01067d4	obj/kern/kernel.asm	/^f01067d4:	89 c8                	mov    %ecx,%eax$/;"	l
f01067d6	obj/kern/kernel.asm	/^f01067d6:	31 ff                	xor    %edi,%edi$/;"	l
f01067d8	obj/kern/kernel.asm	/^f01067d8:	f7 f6                	div    %esi$/;"	l
f01067da	obj/kern/kernel.asm	/^f01067da:	89 c1                	mov    %eax,%ecx$/;"	l
f01067dc	obj/kern/kernel.asm	/^f01067dc:	89 fa                	mov    %edi,%edx$/;"	l
f01067de	obj/kern/kernel.asm	/^f01067de:	89 c8                	mov    %ecx,%eax$/;"	l
f01067e0	obj/kern/kernel.asm	/^f01067e0:	83 c4 10             	add    $0x10,%esp$/;"	l
f01067e3	obj/kern/kernel.asm	/^f01067e3:	5e                   	pop    %esi$/;"	l
f01067e4	obj/kern/kernel.asm	/^f01067e4:	5f                   	pop    %edi$/;"	l
f01067e5	obj/kern/kernel.asm	/^f01067e5:	5d                   	pop    %ebp$/;"	l
f01067e6	obj/kern/kernel.asm	/^f01067e6:	c3                   	ret    $/;"	l
f01067e7	obj/kern/kernel.asm	/^f01067e7:	90                   	nop$/;"	l
f01067e8	obj/kern/kernel.asm	/^f01067e8:	0f b6 4d f4          	movzbl -0xc(%ebp),%ecx$/;"	l
f01067ec	obj/kern/kernel.asm	/^f01067ec:	89 f2                	mov    %esi,%edx$/;"	l
f01067ee	obj/kern/kernel.asm	/^f01067ee:	d3 e0                	shl    %cl,%eax$/;"	d
f01067f0	obj/kern/kernel.asm	/^f01067f0:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f01067f3	obj/kern/kernel.asm	/^f01067f3:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01067f8	obj/kern/kernel.asm	/^f01067f8:	2b 45 f4             	sub    -0xc(%ebp),%eax$/;"	l
f01067fb	obj/kern/kernel.asm	/^f01067fb:	89 c1                	mov    %eax,%ecx$/;"	l
f01067fd	obj/kern/kernel.asm	/^f01067fd:	d3 ea                	shr    %cl,%edx$/;"	d
f01067ff	obj/kern/kernel.asm	/^f01067ff:	0f b6 4d f4          	movzbl -0xc(%ebp),%ecx$/;"	l
f0106803	obj/kern/kernel.asm	/^f0106803:	0b 55 ec             	or     -0x14(%ebp),%edx$/;"	l
f0106806	obj/kern/kernel.asm	/^f0106806:	d3 e6                	shl    %cl,%esi$/;"	d
f0106808	obj/kern/kernel.asm	/^f0106808:	89 c1                	mov    %eax,%ecx$/;"	l
f010680a	obj/kern/kernel.asm	/^f010680a:	89 75 e8             	mov    %esi,-0x18(%ebp)$/;"	l
f010680d	obj/kern/kernel.asm	/^f010680d:	89 fe                	mov    %edi,%esi$/;"	l
f010680f	obj/kern/kernel.asm	/^f010680f:	d3 ee                	shr    %cl,%esi$/;"	d
f0106811	obj/kern/kernel.asm	/^f0106811:	0f b6 4d f4          	movzbl -0xc(%ebp),%ecx$/;"	l
f0106815	obj/kern/kernel.asm	/^f0106815:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
f0106818	obj/kern/kernel.asm	/^f0106818:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f010681b	obj/kern/kernel.asm	/^f010681b:	d3 e7                	shl    %cl,%edi$/;"	d
f010681d	obj/kern/kernel.asm	/^f010681d:	89 c1                	mov    %eax,%ecx$/;"	l
f010681f	obj/kern/kernel.asm	/^f010681f:	d3 ea                	shr    %cl,%edx$/;"	d
f0106821	obj/kern/kernel.asm	/^f0106821:	09 d7                	or     %edx,%edi$/;"	l
f0106823	obj/kern/kernel.asm	/^f0106823:	89 f2                	mov    %esi,%edx$/;"	l
f0106825	obj/kern/kernel.asm	/^f0106825:	89 f8                	mov    %edi,%eax$/;"	l
f0106827	obj/kern/kernel.asm	/^f0106827:	f7 75 ec             	divl   -0x14(%ebp)$/;"	l
f010682a	obj/kern/kernel.asm	/^f010682a:	89 d6                	mov    %edx,%esi$/;"	l
f010682c	obj/kern/kernel.asm	/^f010682c:	89 c7                	mov    %eax,%edi$/;"	l
f010682e	obj/kern/kernel.asm	/^f010682e:	f7 65 e8             	mull   -0x18(%ebp)$/;"	l
f0106831	obj/kern/kernel.asm	/^f0106831:	39 d6                	cmp    %edx,%esi$/;"	l
f0106833	obj/kern/kernel.asm	/^f0106833:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
f0106836	obj/kern/kernel.asm	/^f0106836:	72 30                	jb     f0106868 <__udivdi3+0x118>$/;"	l
f0106838	obj/kern/kernel.asm	/^f0106838:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f010683b	obj/kern/kernel.asm	/^f010683b:	0f b6 4d f4          	movzbl -0xc(%ebp),%ecx$/;"	l
f010683f	obj/kern/kernel.asm	/^f010683f:	d3 e2                	shl    %cl,%edx$/;"	d
f0106841	obj/kern/kernel.asm	/^f0106841:	39 c2                	cmp    %eax,%edx$/;"	l
f0106843	obj/kern/kernel.asm	/^f0106843:	73 05                	jae    f010684a <__udivdi3+0xfa>$/;"	l
f0106845	obj/kern/kernel.asm	/^f0106845:	3b 75 ec             	cmp    -0x14(%ebp),%esi$/;"	l
f0106848	obj/kern/kernel.asm	/^f0106848:	74 1e                	je     f0106868 <__udivdi3+0x118>$/;"	l
f010684a	obj/kern/kernel.asm	/^f010684a:	89 f9                	mov    %edi,%ecx$/;"	l
f010684c	obj/kern/kernel.asm	/^f010684c:	31 ff                	xor    %edi,%edi$/;"	l
f010684e	obj/kern/kernel.asm	/^f010684e:	e9 71 ff ff ff       	jmp    f01067c4 <__udivdi3+0x74>$/;"	l
f0106853	obj/kern/kernel.asm	/^f0106853:	90                   	nop$/;"	l
f0106854	obj/kern/kernel.asm	/^f0106854:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0106858	obj/kern/kernel.asm	/^f0106858:	31 ff                	xor    %edi,%edi$/;"	l
f010685a	obj/kern/kernel.asm	/^f010685a:	b9 01 00 00 00       	mov    $0x1,%ecx$/;"	l
f010685f	obj/kern/kernel.asm	/^f010685f:	e9 60 ff ff ff       	jmp    f01067c4 <__udivdi3+0x74>$/;"	l
f0106864	obj/kern/kernel.asm	/^f0106864:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0106868	obj/kern/kernel.asm	/^f0106868:	8d 4f ff             	lea    -0x1(%edi),%ecx$/;"	l
f010686b	obj/kern/kernel.asm	/^f010686b:	31 ff                	xor    %edi,%edi$/;"	l
f010686d	obj/kern/kernel.asm	/^f010686d:	89 c8                	mov    %ecx,%eax$/;"	l
f010686f	obj/kern/kernel.asm	/^f010686f:	89 fa                	mov    %edi,%edx$/;"	l
f0106871	obj/kern/kernel.asm	/^f0106871:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106874	obj/kern/kernel.asm	/^f0106874:	5e                   	pop    %esi$/;"	l
f0106875	obj/kern/kernel.asm	/^f0106875:	5f                   	pop    %edi$/;"	l
f0106876	obj/kern/kernel.asm	/^f0106876:	5d                   	pop    %ebp$/;"	l
f0106877	obj/kern/kernel.asm	/^f0106877:	c3                   	ret    $/;"	l
f0106880	obj/kern/kernel.asm	/^f0106880 <__umoddi3>:$/;"	l
f0106880	obj/kern/kernel.asm	/^f0106880:	55                   	push   %ebp$/;"	l
f0106881	obj/kern/kernel.asm	/^f0106881:	89 e5                	mov    %esp,%ebp$/;"	l
f0106883	obj/kern/kernel.asm	/^f0106883:	57                   	push   %edi$/;"	l
f0106884	obj/kern/kernel.asm	/^f0106884:	56                   	push   %esi$/;"	l
f0106885	obj/kern/kernel.asm	/^f0106885:	83 ec 20             	sub    $0x20,%esp$/;"	l
f0106888	obj/kern/kernel.asm	/^f0106888:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
f010688b	obj/kern/kernel.asm	/^f010688b:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f010688e	obj/kern/kernel.asm	/^f010688e:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f0106891	obj/kern/kernel.asm	/^f0106891:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0106894	obj/kern/kernel.asm	/^f0106894:	85 d2                	test   %edx,%edx$/;"	l
f0106896	obj/kern/kernel.asm	/^f0106896:	89 c8                	mov    %ecx,%eax$/;"	l
f0106898	obj/kern/kernel.asm	/^f0106898:	89 4d f4             	mov    %ecx,-0xc(%ebp)$/;"	l
f010689b	obj/kern/kernel.asm	/^f010689b:	75 13                	jne    f01068b0 <__umoddi3+0x30>$/;"	l
f010689d	obj/kern/kernel.asm	/^f010689d:	39 f7                	cmp    %esi,%edi$/;"	l
f010689f	obj/kern/kernel.asm	/^f010689f:	76 3f                	jbe    f01068e0 <__umoddi3+0x60>$/;"	l
f01068a1	obj/kern/kernel.asm	/^f01068a1:	89 f2                	mov    %esi,%edx$/;"	l
f01068a3	obj/kern/kernel.asm	/^f01068a3:	f7 f7                	div    %edi$/;"	l
f01068a5	obj/kern/kernel.asm	/^f01068a5:	89 d0                	mov    %edx,%eax$/;"	l
f01068a7	obj/kern/kernel.asm	/^f01068a7:	31 d2                	xor    %edx,%edx$/;"	l
f01068a9	obj/kern/kernel.asm	/^f01068a9:	83 c4 20             	add    $0x20,%esp$/;"	l
f01068ac	obj/kern/kernel.asm	/^f01068ac:	5e                   	pop    %esi$/;"	l
f01068ad	obj/kern/kernel.asm	/^f01068ad:	5f                   	pop    %edi$/;"	l
f01068ae	obj/kern/kernel.asm	/^f01068ae:	5d                   	pop    %ebp$/;"	l
f01068af	obj/kern/kernel.asm	/^f01068af:	c3                   	ret    $/;"	l
f01068b0	obj/kern/kernel.asm	/^f01068b0:	39 f2                	cmp    %esi,%edx$/;"	l
f01068b2	obj/kern/kernel.asm	/^f01068b2:	77 4c                	ja     f0106900 <__umoddi3+0x80>$/;"	l
f01068b4	obj/kern/kernel.asm	/^f01068b4:	0f bd ca             	bsr    %edx,%ecx$/;"	l
f01068b7	obj/kern/kernel.asm	/^f01068b7:	83 f1 1f             	xor    $0x1f,%ecx$/;"	l
f01068ba	obj/kern/kernel.asm	/^f01068ba:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
f01068bd	obj/kern/kernel.asm	/^f01068bd:	75 51                	jne    f0106910 <__umoddi3+0x90>$/;"	l
f01068bf	obj/kern/kernel.asm	/^f01068bf:	3b 7d f4             	cmp    -0xc(%ebp),%edi$/;"	l
f01068c2	obj/kern/kernel.asm	/^f01068c2:	0f 87 e0 00 00 00    	ja     f01069a8 <__umoddi3+0x128>$/;"	l
f01068c8	obj/kern/kernel.asm	/^f01068c8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01068cb	obj/kern/kernel.asm	/^f01068cb:	29 f8                	sub    %edi,%eax$/;"	l
f01068cd	obj/kern/kernel.asm	/^f01068cd:	19 d6                	sbb    %edx,%esi$/;"	l
f01068cf	obj/kern/kernel.asm	/^f01068cf:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f01068d2	obj/kern/kernel.asm	/^f01068d2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01068d5	obj/kern/kernel.asm	/^f01068d5:	89 f2                	mov    %esi,%edx$/;"	l
f01068d7	obj/kern/kernel.asm	/^f01068d7:	83 c4 20             	add    $0x20,%esp$/;"	l
f01068da	obj/kern/kernel.asm	/^f01068da:	5e                   	pop    %esi$/;"	l
f01068db	obj/kern/kernel.asm	/^f01068db:	5f                   	pop    %edi$/;"	l
f01068dc	obj/kern/kernel.asm	/^f01068dc:	5d                   	pop    %ebp$/;"	l
f01068dd	obj/kern/kernel.asm	/^f01068dd:	c3                   	ret    $/;"	l
f01068de	obj/kern/kernel.asm	/^f01068de:	66 90                	xchg   %ax,%ax$/;"	l
f01068e0	obj/kern/kernel.asm	/^f01068e0:	85 ff                	test   %edi,%edi$/;"	l
f01068e2	obj/kern/kernel.asm	/^f01068e2:	75 0b                	jne    f01068ef <__umoddi3+0x6f>$/;"	l
f01068e4	obj/kern/kernel.asm	/^f01068e4:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01068e9	obj/kern/kernel.asm	/^f01068e9:	31 d2                	xor    %edx,%edx$/;"	l
f01068eb	obj/kern/kernel.asm	/^f01068eb:	f7 f7                	div    %edi$/;"	l
f01068ed	obj/kern/kernel.asm	/^f01068ed:	89 c7                	mov    %eax,%edi$/;"	l
f01068ef	obj/kern/kernel.asm	/^f01068ef:	89 f0                	mov    %esi,%eax$/;"	l
f01068f1	obj/kern/kernel.asm	/^f01068f1:	31 d2                	xor    %edx,%edx$/;"	l
f01068f3	obj/kern/kernel.asm	/^f01068f3:	f7 f7                	div    %edi$/;"	l
f01068f5	obj/kern/kernel.asm	/^f01068f5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01068f8	obj/kern/kernel.asm	/^f01068f8:	f7 f7                	div    %edi$/;"	l
f01068fa	obj/kern/kernel.asm	/^f01068fa:	eb a9                	jmp    f01068a5 <__umoddi3+0x25>$/;"	l
f01068fc	obj/kern/kernel.asm	/^f01068fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0106900	obj/kern/kernel.asm	/^f0106900:	89 c8                	mov    %ecx,%eax$/;"	l
f0106902	obj/kern/kernel.asm	/^f0106902:	89 f2                	mov    %esi,%edx$/;"	l
f0106904	obj/kern/kernel.asm	/^f0106904:	83 c4 20             	add    $0x20,%esp$/;"	l
f0106907	obj/kern/kernel.asm	/^f0106907:	5e                   	pop    %esi$/;"	l
f0106908	obj/kern/kernel.asm	/^f0106908:	5f                   	pop    %edi$/;"	l
f0106909	obj/kern/kernel.asm	/^f0106909:	5d                   	pop    %ebp$/;"	l
f010690a	obj/kern/kernel.asm	/^f010690a:	c3                   	ret    $/;"	l
f010690b	obj/kern/kernel.asm	/^f010690b:	90                   	nop$/;"	l
f010690c	obj/kern/kernel.asm	/^f010690c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0106910	obj/kern/kernel.asm	/^f0106910:	0f b6 4d f0          	movzbl -0x10(%ebp),%ecx$/;"	l
f0106914	obj/kern/kernel.asm	/^f0106914:	d3 e2                	shl    %cl,%edx$/;"	d
f0106916	obj/kern/kernel.asm	/^f0106916:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
f0106919	obj/kern/kernel.asm	/^f0106919:	ba 20 00 00 00       	mov    $0x20,%edx$/;"	l
f010691e	obj/kern/kernel.asm	/^f010691e:	2b 55 f0             	sub    -0x10(%ebp),%edx$/;"	l
f0106921	obj/kern/kernel.asm	/^f0106921:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
f0106924	obj/kern/kernel.asm	/^f0106924:	0f b6 4d ec          	movzbl -0x14(%ebp),%ecx$/;"	l
f0106928	obj/kern/kernel.asm	/^f0106928:	89 fa                	mov    %edi,%edx$/;"	l
f010692a	obj/kern/kernel.asm	/^f010692a:	d3 ea                	shr    %cl,%edx$/;"	d
f010692c	obj/kern/kernel.asm	/^f010692c:	0f b6 4d f0          	movzbl -0x10(%ebp),%ecx$/;"	l
f0106930	obj/kern/kernel.asm	/^f0106930:	0b 55 f4             	or     -0xc(%ebp),%edx$/;"	l
f0106933	obj/kern/kernel.asm	/^f0106933:	d3 e7                	shl    %cl,%edi$/;"	d
f0106935	obj/kern/kernel.asm	/^f0106935:	0f b6 4d ec          	movzbl -0x14(%ebp),%ecx$/;"	l
f0106939	obj/kern/kernel.asm	/^f0106939:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
f010693c	obj/kern/kernel.asm	/^f010693c:	89 f2                	mov    %esi,%edx$/;"	l
f010693e	obj/kern/kernel.asm	/^f010693e:	89 7d e8             	mov    %edi,-0x18(%ebp)$/;"	l
f0106941	obj/kern/kernel.asm	/^f0106941:	89 c7                	mov    %eax,%edi$/;"	l
f0106943	obj/kern/kernel.asm	/^f0106943:	d3 ea                	shr    %cl,%edx$/;"	d
f0106945	obj/kern/kernel.asm	/^f0106945:	0f b6 4d f0          	movzbl -0x10(%ebp),%ecx$/;"	l
f0106949	obj/kern/kernel.asm	/^f0106949:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f010694c	obj/kern/kernel.asm	/^f010694c:	89 c2                	mov    %eax,%edx$/;"	l
f010694e	obj/kern/kernel.asm	/^f010694e:	d3 e6                	shl    %cl,%esi$/;"	d
f0106950	obj/kern/kernel.asm	/^f0106950:	0f b6 4d ec          	movzbl -0x14(%ebp),%ecx$/;"	l
f0106954	obj/kern/kernel.asm	/^f0106954:	d3 ea                	shr    %cl,%edx$/;"	d
f0106956	obj/kern/kernel.asm	/^f0106956:	0f b6 4d f0          	movzbl -0x10(%ebp),%ecx$/;"	l
f010695a	obj/kern/kernel.asm	/^f010695a:	09 d6                	or     %edx,%esi$/;"	l
f010695c	obj/kern/kernel.asm	/^f010695c:	89 f0                	mov    %esi,%eax$/;"	l
f010695e	obj/kern/kernel.asm	/^f010695e:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0106961	obj/kern/kernel.asm	/^f0106961:	d3 e7                	shl    %cl,%edi$/;"	d
f0106963	obj/kern/kernel.asm	/^f0106963:	89 f2                	mov    %esi,%edx$/;"	l
f0106965	obj/kern/kernel.asm	/^f0106965:	f7 75 f4             	divl   -0xc(%ebp)$/;"	l
f0106968	obj/kern/kernel.asm	/^f0106968:	89 d6                	mov    %edx,%esi$/;"	l
f010696a	obj/kern/kernel.asm	/^f010696a:	f7 65 e8             	mull   -0x18(%ebp)$/;"	l
f010696d	obj/kern/kernel.asm	/^f010696d:	39 d6                	cmp    %edx,%esi$/;"	l
f010696f	obj/kern/kernel.asm	/^f010696f:	72 2b                	jb     f010699c <__umoddi3+0x11c>$/;"	l
f0106971	obj/kern/kernel.asm	/^f0106971:	39 c7                	cmp    %eax,%edi$/;"	l
f0106973	obj/kern/kernel.asm	/^f0106973:	72 23                	jb     f0106998 <__umoddi3+0x118>$/;"	l
f0106975	obj/kern/kernel.asm	/^f0106975:	0f b6 4d f0          	movzbl -0x10(%ebp),%ecx$/;"	l
f0106979	obj/kern/kernel.asm	/^f0106979:	29 c7                	sub    %eax,%edi$/;"	l
f010697b	obj/kern/kernel.asm	/^f010697b:	19 d6                	sbb    %edx,%esi$/;"	l
f010697d	obj/kern/kernel.asm	/^f010697d:	89 f0                	mov    %esi,%eax$/;"	l
f010697f	obj/kern/kernel.asm	/^f010697f:	89 f2                	mov    %esi,%edx$/;"	l
f0106981	obj/kern/kernel.asm	/^f0106981:	d3 ef                	shr    %cl,%edi$/;"	d
f0106983	obj/kern/kernel.asm	/^f0106983:	0f b6 4d ec          	movzbl -0x14(%ebp),%ecx$/;"	l
f0106987	obj/kern/kernel.asm	/^f0106987:	d3 e0                	shl    %cl,%eax$/;"	d
f0106989	obj/kern/kernel.asm	/^f0106989:	0f b6 4d f0          	movzbl -0x10(%ebp),%ecx$/;"	l
f010698d	obj/kern/kernel.asm	/^f010698d:	09 f8                	or     %edi,%eax$/;"	l
f010698f	obj/kern/kernel.asm	/^f010698f:	d3 ea                	shr    %cl,%edx$/;"	d
f0106991	obj/kern/kernel.asm	/^f0106991:	83 c4 20             	add    $0x20,%esp$/;"	l
f0106994	obj/kern/kernel.asm	/^f0106994:	5e                   	pop    %esi$/;"	l
f0106995	obj/kern/kernel.asm	/^f0106995:	5f                   	pop    %edi$/;"	l
f0106996	obj/kern/kernel.asm	/^f0106996:	5d                   	pop    %ebp$/;"	l
f0106997	obj/kern/kernel.asm	/^f0106997:	c3                   	ret    $/;"	l
f0106998	obj/kern/kernel.asm	/^f0106998:	39 d6                	cmp    %edx,%esi$/;"	l
f010699a	obj/kern/kernel.asm	/^f010699a:	75 d9                	jne    f0106975 <__umoddi3+0xf5>$/;"	l
f010699c	obj/kern/kernel.asm	/^f010699c:	2b 45 e8             	sub    -0x18(%ebp),%eax$/;"	l
f010699f	obj/kern/kernel.asm	/^f010699f:	1b 55 f4             	sbb    -0xc(%ebp),%edx$/;"	l
f01069a2	obj/kern/kernel.asm	/^f01069a2:	eb d1                	jmp    f0106975 <__umoddi3+0xf5>$/;"	l
f01069a4	obj/kern/kernel.asm	/^f01069a4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01069a8	obj/kern/kernel.asm	/^f01069a8:	39 f2                	cmp    %esi,%edx$/;"	l
f01069aa	obj/kern/kernel.asm	/^f01069aa:	0f 82 18 ff ff ff    	jb     f01068c8 <__umoddi3+0x48>$/;"	l
f01069b0	obj/kern/kernel.asm	/^f01069b0:	e9 1d ff ff ff       	jmp    f01068d2 <__umoddi3+0x52>$/;"	l
fail	grade-functions.sh	/^fail () {$/;"	f
faketail	obj/kern/kernel.asm	/^	faketail = tail;$/;"	d
fault_va	obj/kern/kernel.asm	/^	fault_va = rcr2();$/;"	d
feature	kern/mpconfig.c	/^	uint32_t feature;               \/\/ feature flags from CPUID instruction$/;"	m	struct:mpproc	file:	access:public
first_free_page	obj/kern/kernel.asm	/^	first_free_page = (char *) boot_alloc(0);$/;"	d
fl	obj/kern/kernel.asm	/^	fl = page_free_list;$/;"	d
flags	kern/mpconfig.c	/^	uint8_t flags;                  \/\/ CPU flags$/;"	m	struct:mpproc	file:	access:public
fork	inc/lib.h	/^envid_t	fork(void);$/;"	p	signature:(void)
fork	lib/fork.c	/^fork(void)$/;"	f	signature:(void)
forkchild	user/forktree.c	/^forkchild(const char *cur, char branch)$/;"	f	signature:(const char *cur, char branch)
forktree	user/forktree.c	/^forktree(const char *cur)$/;"	f	signature:(const char *cur)
forktree	user/forktree.c	/^void forktree(const char *cur);$/;"	p	file:	signature:(const char *cur)
fprintf	inc/stdio.h	/^int	fprintf(int fd, const char *fmt, ...);$/;"	p	signature:(int fd, const char *fmt, ...)
func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:	access:public
gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc	access:public
gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc	access:public
gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc	access:public
gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc	access:public
gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc	access:public
gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc	access:public
gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc	access:public
gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc	access:public
gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc	access:public
gdt	boot/boot.S	/^gdt:$/;"	l
gdt	kern/env.c	/^struct Segdesc gdt[NCPU + 5] =$/;"	v	typeref:struct:Segdesc
gdt	kern/env.h	/^extern struct Segdesc gdt[];$/;"	x
gdt	kern/mpentry.S	/^gdt:$/;"	l
gdt	obj/user/evilhello2.asm	/^	gdt = (struct Segdesc*)(base + offset);$/;"	d
gdt	user/evilhello2.c	/^struct Segdesc *gdt;$/;"	v	typeref:struct:Segdesc
gdt_pd	kern/env.c	/^struct Pseudodesc gdt_pd = {$/;"	v	typeref:struct:Pseudodesc
gdtdesc	boot/boot.S	/^gdtdesc:$/;"	l
gdtdesc	kern/mpentry.S	/^gdtdesc:$/;"	l
generation	obj/kern/kernel.asm	/^		generation = 1 << ENVGENSHIFT;$/;"	d
generation	obj/kern/kernel.asm	/^	generation = (e->env_id + (1 << ENVGENSHIFT)) & ~(NENV - 1);$/;"	d
get_caller_pcs	kern/spinlock.c	/^get_caller_pcs(uint32_t pcs[])$/;"	f	file:	signature:(uint32_t pcs[])
getchar	inc/stdio.h	/^int	getchar(void);$/;"	p	signature:(void)
getchar	kern/console.c	/^getchar(void)$/;"	f	signature:(void)
getchar	lib/console.c	/^getchar(void)$/;"	f	signature:(void)
getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	file:	signature:(va_list *ap, int lflag)
getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)$/;"	f	file:	signature:(va_list *ap, int lflag)
handler	user/faultalloc.c	/^handler(struct UTrapframe *utf)$/;"	f	signature:(struct UTrapframe *utf)
handler	user/faultallocbad.c	/^handler(struct UTrapframe *utf)$/;"	f	signature:(struct UTrapframe *utf)
handler	user/faultdie.c	/^handler(struct UTrapframe *utf)$/;"	f	signature:(struct UTrapframe *utf)
head	obj/kern/kernel.asm	/^		head = (*head).pp_link;$/;"	d
head	obj/kern/kernel.asm	/^		head = head->pp_link;$/;"	d
hello	user/buggyhello2.c	/^const char *hello = "hello, world\\n";$/;"	v
holding	kern/spinlock.c	/^holding(struct spinlock *lock)$/;"	f	file:	signature:(struct spinlock *lock)
i	obj/kern/kernel.asm	/^			i = conf->entry;$/;"	d
i	obj/kern/kernel.asm	/^	i = 0;$/;"	d
i	obj/user/pingpongs.asm	/^	i = 0;$/;"	d
i	obj/user/primes.asm	/^		i = ipc_recv(&envid, 0, 0);$/;"	d
i386_detect_memory	kern/pmap.c	/^i386_detect_memory(void)$/;"	f	file:	signature:(void)
i386_init	kern/init.c	/^i386_init(void)$/;"	f	signature:(void)
id	obj/user/fairness.asm	/^	id = sys_getenvid();$/;"	d
idle	obj/kern/kernel.asm	/^	idle = &envs[cpunum()];$/;"	d
idt	kern/trap.c	/^struct Gatedesc idt[256] = { { 0 } };$/;"	v	typeref:struct:Gatedesc
idt	kern/trap.h	/^extern struct Gatedesc idt[];$/;"	x
idt_pd	kern/trap.c	/^struct Pseudodesc idt_pd = {$/;"	v	typeref:struct:Pseudodesc
idt_pd	kern/trap.h	/^extern struct Pseudodesc idt_pd;$/;"	x
idx	lib/printf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:	access:public
imcrp	kern/mpconfig.c	/^	uint8_t imcrp;$/;"	m	struct:mp	file:	access:public
inb	inc/x86.h	/^inb(int port)$/;"	f	signature:(int port)
inb	inc/x86.h	/^static __inline uint8_t inb(int port) __attribute__((always_inline));$/;"	p	signature:(int port)
index	obj/kern/kernel.asm	/^		index = ROUNDDOWN(index,PGSIZE);$/;"	d
inl	inc/x86.h	/^inl(int port)$/;"	f	signature:(int port)
inl	inc/x86.h	/^static __inline uint32_t inl(int port) __attribute__((always_inline));$/;"	p	signature:(int port)
insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f	signature:(int port, void *addr, int cnt)
insb	inc/x86.h	/^static __inline void insb(int port, void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, void *addr, int cnt)
insl	inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f	signature:(int port, void *addr, int cnt)
insl	inc/x86.h	/^static __inline void insl(int port, void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, void *addr, int cnt)
insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f	signature:(int port, void *addr, int cnt)
insw	inc/x86.h	/^static __inline void insw(int port, void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, void *addr, int cnt)
int	obj/kern/kernel.asm	/^int$/;"	l
int	obj/user/badsegment.asm	/^int$/;"	l
int	obj/user/breakpoint.asm	/^int$/;"	l
int	obj/user/buggyhello.asm	/^int$/;"	l
int	obj/user/buggyhello2.asm	/^int$/;"	l
int	obj/user/divzero.asm	/^int zero;$/;"	l
int	obj/user/divzero.asm	/^int$/;"	l
int	obj/user/dumbfork.asm	/^int$/;"	l
int	obj/user/evilhello.asm	/^int$/;"	l
int	obj/user/evilhello2.asm	/^int$/;"	l
int	obj/user/fairness.asm	/^int$/;"	l
int	obj/user/faultalloc.asm	/^int$/;"	l
int	obj/user/faultallocbad.asm	/^int$/;"	l
int	obj/user/faultbadhandler.asm	/^int$/;"	l
int	obj/user/faultdie.asm	/^int$/;"	l
int	obj/user/faultevilhandler.asm	/^int$/;"	l
int	obj/user/faultnostack.asm	/^int$/;"	l
int	obj/user/faultread.asm	/^int$/;"	l
int	obj/user/faultreadkernel.asm	/^int$/;"	l
int	obj/user/faultregs.asm	/^int$/;"	l
int	obj/user/faultwrite.asm	/^int$/;"	l
int	obj/user/faultwritekernel.asm	/^int$/;"	l
int	obj/user/forktree.asm	/^int$/;"	l
int	obj/user/hello.asm	/^int$/;"	l
int	obj/user/idle.asm	/^int$/;"	l
int	obj/user/pingpong.asm	/^int$/;"	l
int	obj/user/pingpongs.asm	/^int$/;"	l
int	obj/user/primes.asm	/^int$/;"	l
int	obj/user/softint.asm	/^int$/;"	l
int	obj/user/spin.asm	/^int$/;"	l
int	obj/user/stresssched.asm	/^int$/;"	l
int	obj/user/testbss.asm	/^int$/;"	l
int	obj/user/yield.asm	/^int$/;"	l
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t
int32_t	obj/kern/kernel.asm	/^int32_t$/;"	l
int32_t	obj/user/fairness.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpong.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpongs.asm	/^int32_t$/;"	l
int32_t	obj/user/primes.asm	/^int32_t$/;"	l
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t
invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f	signature:(void *addr)
invlpg	inc/x86.h	/^static __inline void invlpg(void *addr) __attribute__((always_inline));$/;"	p	signature:(void *addr)
inw	inc/x86.h	/^inw(int port)$/;"	f	signature:(int port)
inw	inc/x86.h	/^static __inline uint16_t inw(int port) __attribute__((always_inline));$/;"	p	signature:(int port)
ipc_find_env	inc/lib.h	/^envid_t	ipc_find_env(enum EnvType type);$/;"	p	signature:(enum EnvType type)
ipc_find_env	lib/ipc.c	/^ipc_find_env(enum EnvType type)$/;"	f	signature:(enum EnvType type)
ipc_recv	inc/lib.h	/^int32_t ipc_recv(envid_t *from_env_store, void *pg, int *perm_store);$/;"	p	signature:(envid_t *from_env_store, void *pg, int *perm_store)
ipc_recv	lib/ipc.c	/^ipc_recv(envid_t *from_env_store, void *pg, int *perm_store)$/;"	f	signature:(envid_t *from_env_store, void *pg, int *perm_store)
ipc_send	inc/lib.h	/^void	ipc_send(envid_t to_env, uint32_t value, void *pg, int perm);$/;"	p	signature:(envid_t to_env, uint32_t value, void *pg, int perm)
ipc_send	lib/ipc.c	/^ipc_send(envid_t to_env, uint32_t val, void *pg, int perm)$/;"	f	signature:(envid_t to_env, uint32_t val, void *pg, int perm)
irq_mask_8259A	kern/picirq.c	/^uint16_t irq_mask_8259A = 0xFFFF & ~(1<<IRQ_SLAVE);$/;"	v
irq_mask_8259A	kern/picirq.h	/^extern uint16_t irq_mask_8259A;$/;"	x
irq_mask_8259A	obj/kern/kernel.asm	/^	irq_mask_8259A = mask;$/;"	d
irq_setmask_8259A	kern/picirq.c	/^irq_setmask_8259A(uint16_t mask)$/;"	f	signature:(uint16_t mask)
irq_setmask_8259A	kern/picirq.h	/^void irq_setmask_8259A(uint16_t mask);$/;"	p	signature:(uint16_t mask)
iscons	inc/stdio.h	/^int	iscons(int fd);$/;"	p	signature:(int fd)
iscons	kern/console.c	/^iscons(int fdnum)$/;"	f	signature:(int fdnum)
ismp	kern/mpconfig.c	/^int ismp;$/;"	v
ismp	obj/kern/kernel.asm	/^			ismp = 0;$/;"	d
ismp	obj/kern/kernel.asm	/^	ismp = 1;$/;"	d
kbd_init	kern/console.c	/^kbd_init(void)$/;"	f	file:	signature:(void)
kbd_intr	kern/console.c	/^kbd_intr(void)$/;"	f	signature:(void)
kbd_intr	kern/console.h	/^void kbd_intr(void); \/\/ irq 1$/;"	p	signature:(void)
kbd_proc_data	kern/console.c	/^kbd_proc_data(void)$/;"	f	file:	signature:(void)
kern_pgdir	kern/pmap.c	/^pde_t *kern_pgdir;		\/\/ Kernel's initial page directory$/;"	v
kern_pgdir	kern/pmap.h	/^extern pde_t *kern_pgdir;$/;"	x
kern_pgdir	obj/kern/kernel.asm	/^	kern_pgdir = (pde_t *) boot_alloc(PGSIZE);$/;"	d
kernel_lock	kern/spinlock.c	/^struct spinlock kernel_lock = {$/;"	v	typeref:struct:spinlock
kernel_lock	kern/spinlock.h	/^extern struct spinlock kernel_lock;$/;"	x
l	obj/kern/kernel.asm	/^			l = m;$/;"	d
l	obj/kern/kernel.asm	/^			l = true_m + 1;$/;"	d
lapic	kern/cpu.h	/^extern volatile uint32_t *lapic;    \/\/ MMIO address to access the local-APIC$/;"	x
lapic	kern/lapic.c	/^volatile uint32_t *lapic;  \/\/ Initialized in mp.c$/;"	v
lapic	obj/kern/kernel.asm	/^		lapic = NULL;$/;"	d
lapic	obj/kern/kernel.asm	/^	lapic = (uint32_t *)conf->lapicaddr;$/;"	d
lapic_eoi	kern/cpu.h	/^void lapic_eoi(void);$/;"	p	signature:(void)
lapic_eoi	kern/lapic.c	/^lapic_eoi(void)$/;"	f	signature:(void)
lapic_init	kern/cpu.h	/^void lapic_init(void);$/;"	p	signature:(void)
lapic_init	kern/lapic.c	/^lapic_init(void)$/;"	f	signature:(void)
lapic_ipi	kern/cpu.h	/^void lapic_ipi(int vector);$/;"	p	signature:(int vector)
lapic_ipi	kern/lapic.c	/^lapic_ipi(int vector)$/;"	f	signature:(int vector)
lapic_startap	kern/cpu.h	/^void lapic_startap(uint8_t apicid, uint32_t addr);$/;"	p	signature:(uint8_t apicid, uint32_t addr)
lapic_startap	kern/lapic.c	/^lapic_startap(uint8_t apicid, uint32_t addr)$/;"	f	signature:(uint8_t apicid, uint32_t addr)
lapicaddr	kern/mpconfig.c	/^	physaddr_t lapicaddr;           \/\/ address of local APIC$/;"	m	struct:mpconf	file:	access:public
lapicw	kern/lapic.c	/^lapicw(int index, int value)$/;"	f	file:	signature:(int index, int value)
last_tf	kern/trap.c	/^static struct Trapframe *last_tf;$/;"	v	typeref:struct:Trapframe	file:
last_tf	obj/kern/kernel.asm	/^	last_tf = tf;$/;"	d
lcr0	inc/x86.h	/^lcr0(uint32_t val)$/;"	f	signature:(uint32_t val)
lcr0	inc/x86.h	/^static __inline void lcr0(uint32_t val) __attribute__((always_inline));$/;"	p	signature:(uint32_t val)
lcr3	inc/x86.h	/^lcr3(uint32_t val)$/;"	f	signature:(uint32_t val)
lcr3	inc/x86.h	/^static __inline void lcr3(uint32_t val) __attribute__((always_inline));$/;"	p	signature:(uint32_t val)
lcr4	inc/x86.h	/^lcr4(uint32_t val)$/;"	f	signature:(uint32_t val)
lcr4	inc/x86.h	/^static __inline void lcr4(uint32_t val) __attribute__((always_inline));$/;"	p	signature:(uint32_t val)
length	kern/mpconfig.c	/^	uint16_t length;                \/\/ total table length$/;"	m	struct:mpconf	file:	access:public
length	kern/mpconfig.c	/^	uint8_t length;                 \/\/ 1$/;"	m	struct:mp	file:	access:public
lfile	obj/kern/kernel.asm	/^	lfile = 0;$/;"	d
lflag	obj/kern/kernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/badsegment.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/breakpoint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/divzero.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/dumbfork.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/evilhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/evilhello2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/fairness.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultalloc.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultallocbad.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultbadhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultdie.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultevilhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultnostack.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultread.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultreadkernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultregs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwrite.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwritekernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/forktree.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/hello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/idle.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpong.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpongs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/primes.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/softint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/spin.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/stresssched.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testbss.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/yield.asm	/^		lflag = 0;$/;"	d
lfun	obj/kern/kernel.asm	/^	lfun = lfile;$/;"	d
lgdt	inc/x86.h	/^lgdt(void *p)$/;"	f	signature:(void *p)
libmain	lib/libmain.c	/^libmain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
lidt	inc/x86.h	/^lidt(void *p)$/;"	f	signature:(void *p)
lidt	inc/x86.h	/^static __inline void lidt(void *p) __attribute__((always_inline));$/;"	p	signature:(void *p)
lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f	signature:(uint16_t sel)
lldt	inc/x86.h	/^static __inline void lldt(uint16_t sel) __attribute__((always_inline));$/;"	p	signature:(uint16_t sel)
lline	obj/kern/kernel.asm	/^		lline = lfile;$/;"	d
lline	obj/kern/kernel.asm	/^		lline = lfun;$/;"	d
load_icode	kern/env.c	/^load_icode(struct Env *e, uint8_t *binary, size_t size)$/;"	f	file:	signature:(struct Env *e, uint8_t *binary, size_t size)
lock_kernel	kern/spinlock.h	/^lock_kernel(void)$/;"	f	signature:(void)
locked	kern/spinlock.h	/^	unsigned locked;   \/\/ Is the lock held?$/;"	m	struct:spinlock	access:public
long	obj/kern/kernel.asm	/^long$/;"	l
long	obj/user/badsegment.asm	/^long$/;"	l
long	obj/user/breakpoint.asm	/^long$/;"	l
long	obj/user/buggyhello.asm	/^long$/;"	l
long	obj/user/buggyhello2.asm	/^long$/;"	l
long	obj/user/divzero.asm	/^long$/;"	l
long	obj/user/dumbfork.asm	/^long$/;"	l
long	obj/user/evilhello.asm	/^long$/;"	l
long	obj/user/evilhello2.asm	/^long$/;"	l
long	obj/user/fairness.asm	/^long$/;"	l
long	obj/user/faultalloc.asm	/^long$/;"	l
long	obj/user/faultallocbad.asm	/^long$/;"	l
long	obj/user/faultbadhandler.asm	/^long$/;"	l
long	obj/user/faultdie.asm	/^long$/;"	l
long	obj/user/faultevilhandler.asm	/^long$/;"	l
long	obj/user/faultnostack.asm	/^long$/;"	l
long	obj/user/faultread.asm	/^long$/;"	l
long	obj/user/faultreadkernel.asm	/^long$/;"	l
long	obj/user/faultregs.asm	/^long$/;"	l
long	obj/user/faultwrite.asm	/^long$/;"	l
long	obj/user/faultwritekernel.asm	/^long$/;"	l
long	obj/user/forktree.asm	/^long$/;"	l
long	obj/user/hello.asm	/^long$/;"	l
long	obj/user/idle.asm	/^long$/;"	l
long	obj/user/pingpong.asm	/^long$/;"	l
long	obj/user/pingpongs.asm	/^long$/;"	l
long	obj/user/primes.asm	/^long$/;"	l
long	obj/user/softint.asm	/^long$/;"	l
long	obj/user/spin.asm	/^long$/;"	l
long	obj/user/stresssched.asm	/^long$/;"	l
long	obj/user/testbss.asm	/^long$/;"	l
long	obj/user/yield.asm	/^long$/;"	l
lpt_putc	kern/console.c	/^lpt_putc(int c)$/;"	f	file:	signature:(int c)
ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f	signature:(uint16_t sel)
ltr	inc/x86.h	/^static __inline void ltr(uint16_t sel) __attribute__((always_inline));$/;"	p	signature:(uint16_t sel)
mc146818_read	kern/kclock.c	/^mc146818_read(unsigned reg)$/;"	f	signature:(unsigned reg)
mc146818_read	kern/kclock.h	/^unsigned mc146818_read(unsigned reg);$/;"	p	signature:(unsigned reg)
mc146818_write	kern/kclock.c	/^mc146818_write(unsigned reg, unsigned datum)$/;"	f	signature:(unsigned reg, unsigned datum)
mc146818_write	kern/kclock.h	/^void mc146818_write(unsigned reg, unsigned datum);$/;"	p	signature:(unsigned reg, unsigned datum)
mem_init	kern/pmap.c	/^mem_init(void)$/;"	f	signature:(void)
mem_init	kern/pmap.h	/^void	mem_init(void);$/;"	p	signature:(void)
mem_init_mp	kern/pmap.c	/^mem_init_mp(void)$/;"	f	file:	signature:(void)
mem_init_mp	kern/pmap.c	/^static void mem_init_mp(void);$/;"	p	file:	signature:(void)
memcmp	inc/string.h	/^int	memcmp(const void *s1, const void *s2, size_t len);$/;"	p	signature:(const void *s1, const void *s2, size_t len)
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f	signature:(const void *v1, const void *v2, size_t n)
memcpy	lib/string.c	/^memcpy(void *dst, void *src, size_t n)$/;"	f	signature:(void *dst, void *src, size_t n)
memfind	inc/string.h	/^void *	memfind(const void *s, int c, size_t len);$/;"	p	signature:(const void *s, int c, size_t len)
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f	signature:(const void *s, int c, size_t n)
memmove	inc/string.h	/^void *	memmove(void *dst, const void *src, size_t len);$/;"	p	signature:(void *dst, const void *src, size_t len)
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f	signature:(void *dst, const void *src, size_t n)
memset	inc/string.h	/^void *	memset(void *dst, int c, size_t len);$/;"	p	signature:(void *dst, int c, size_t len)
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f	signature:(void *v, int c, size_t n)
microdelay	kern/lapic.c	/^microdelay(int us)$/;"	f	file:	signature:(int us)
mismatch	obj/user/faultregs.asm	/^			mismatch = 1;					\\$/;"	d
mon_backtrace	kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f	signature:(int argc, char **argv, struct Trapframe *tf)
mon_backtrace	kern/monitor.h	/^int mon_backtrace(int argc, char **argv, struct Trapframe *tf);$/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
mon_help	kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f	signature:(int argc, char **argv, struct Trapframe *tf)
mon_help	kern/monitor.h	/^int mon_help(int argc, char **argv, struct Trapframe *tf);$/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
mon_kerninfo	kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f	signature:(int argc, char **argv, struct Trapframe *tf)
mon_kerninfo	kern/monitor.h	/^int mon_kerninfo(int argc, char **argv, struct Trapframe *tf);$/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
monitor	kern/monitor.c	/^monitor(struct Trapframe *tf)$/;"	f	signature:(struct Trapframe *tf)
monitor	kern/monitor.h	/^void monitor(struct Trapframe *tf);$/;"	p	signature:(struct Trapframe *tf)
mp	kern/mpconfig.c	/^struct mp {             \/\/ floating pointer [MP 4.1]$/;"	s	file:
mp::checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mp	file:	access:public
mp::imcrp	kern/mpconfig.c	/^	uint8_t imcrp;$/;"	m	struct:mp	file:	access:public
mp::length	kern/mpconfig.c	/^	uint8_t length;                 \/\/ 1$/;"	m	struct:mp	file:	access:public
mp::physaddr	kern/mpconfig.c	/^	physaddr_t physaddr;            \/\/ phys addr of MP config table$/;"	m	struct:mp	file:	access:public
mp::reserved	kern/mpconfig.c	/^	uint8_t reserved[3];$/;"	m	struct:mp	file:	access:public
mp::signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "_MP_"$/;"	m	struct:mp	file:	access:public
mp::specrev	kern/mpconfig.c	/^	uint8_t specrev;                \/\/ [14]$/;"	m	struct:mp	file:	access:public
mp::type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ MP system config type$/;"	m	struct:mp	file:	access:public
mp_init	kern/cpu.h	/^void mp_init(void);$/;"	p	signature:(void)
mp_init	kern/mpconfig.c	/^mp_init(void)$/;"	f	signature:(void)
mp_main	kern/init.c	/^mp_main(void)$/;"	f	signature:(void)
mpconf	kern/mpconfig.c	/^struct mpconf {         \/\/ configuration table header [MP 4.2]$/;"	s	file:
mpconf::checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mpconf	file:	access:public
mpconf::entries	kern/mpconfig.c	/^	uint8_t entries[0];             \/\/ table entries$/;"	m	struct:mpconf	file:	access:public
mpconf::entry	kern/mpconfig.c	/^	uint16_t entry;                 \/\/ entry count$/;"	m	struct:mpconf	file:	access:public
mpconf::lapicaddr	kern/mpconfig.c	/^	physaddr_t lapicaddr;           \/\/ address of local APIC$/;"	m	struct:mpconf	file:	access:public
mpconf::length	kern/mpconfig.c	/^	uint16_t length;                \/\/ total table length$/;"	m	struct:mpconf	file:	access:public
mpconf::oemlength	kern/mpconfig.c	/^	uint16_t oemlength;             \/\/ OEM table length$/;"	m	struct:mpconf	file:	access:public
mpconf::oemtable	kern/mpconfig.c	/^	physaddr_t oemtable;            \/\/ OEM table pointer$/;"	m	struct:mpconf	file:	access:public
mpconf::product	kern/mpconfig.c	/^	uint8_t product[20];            \/\/ product id$/;"	m	struct:mpconf	file:	access:public
mpconf::reserved	kern/mpconfig.c	/^	uint8_t reserved;$/;"	m	struct:mpconf	file:	access:public
mpconf::signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "PCMP"$/;"	m	struct:mpconf	file:	access:public
mpconf::version	kern/mpconfig.c	/^	uint8_t version;                \/\/ [14]$/;"	m	struct:mpconf	file:	access:public
mpconf::xchecksum	kern/mpconfig.c	/^	uint8_t xchecksum;              \/\/ extended table checksum$/;"	m	struct:mpconf	file:	access:public
mpconf::xlength	kern/mpconfig.c	/^	uint16_t xlength;               \/\/ extended table length$/;"	m	struct:mpconf	file:	access:public
mpconfig	kern/mpconfig.c	/^mpconfig(struct mp **pmp)$/;"	f	file:	signature:(struct mp **pmp)
mpentry_end	kern/mpentry.S	/^mpentry_end:$/;"	l
mpentry_end	obj/kern/kernel.asm	/^mpentry_end:$/;"	l
mpentry_kstack	kern/init.c	/^void *mpentry_kstack;$/;"	v
mpentry_kstack	obj/kern/kernel.asm	/^		mpentry_kstack = percpu_kstacks[c - cpus] + KSTKSIZE;$/;"	d
mpentry_start	kern/mpentry.S	/^mpentry_start:$/;"	l
mpentry_start	obj/kern/kernel.asm	/^mpentry_start:$/;"	l
mpproc	kern/mpconfig.c	/^struct mpproc {         \/\/ processor table entry [MP 4.3.1]$/;"	s	file:
mpproc::apicid	kern/mpconfig.c	/^	uint8_t apicid;                 \/\/ local APIC id$/;"	m	struct:mpproc	file:	access:public
mpproc::feature	kern/mpconfig.c	/^	uint32_t feature;               \/\/ feature flags from CPUID instruction$/;"	m	struct:mpproc	file:	access:public
mpproc::flags	kern/mpconfig.c	/^	uint8_t flags;                  \/\/ CPU flags$/;"	m	struct:mpproc	file:	access:public
mpproc::reserved	kern/mpconfig.c	/^	uint8_t reserved[8];$/;"	m	struct:mpproc	file:	access:public
mpproc::signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ CPU signature$/;"	m	struct:mpproc	file:	access:public
mpproc::type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ entry type (0)$/;"	m	struct:mpproc	file:	access:public
mpproc::version	kern/mpconfig.c	/^	uint8_t version;                \/\/ local APIC version$/;"	m	struct:mpproc	file:	access:public
mpsearch	kern/mpconfig.c	/^mpsearch(void)$/;"	f	file:	signature:(void)
mpsearch1	kern/mpconfig.c	/^mpsearch1(physaddr_t a, int len)$/;"	f	file:	signature:(physaddr_t a, int len)
n	obj/kern/kernel.asm	/^	n = ROUNDUP(NENV*sizeof(struct Env), PGSIZE);$/;"	d
n	obj/kern/kernel.asm	/^	n = ROUNDUP(npages*sizeof(struct Page), PGSIZE);$/;"	d
n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab	access:public
n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab	access:public
n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab	access:public
n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab	access:public
n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab	access:public
name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:	access:public
name	kern/spinlock.h	/^	char *name;        \/\/ Name of lock.$/;"	m	struct:spinlock	access:public
name	kern/trapentry.S	/^	name:								\\$/;"	l
name	kern/trapentry.S	/^	name:			\/* function starts here *\/		\\$/;"	l
ncpu	kern/cpu.h	/^extern int ncpu;                    \/\/ Total number of CPUs in the system$/;"	x
ncpu	kern/mpconfig.c	/^int ncpu;$/;"	v
ncpu	obj/kern/kernel.asm	/^		ncpu = 1;$/;"	d
nextfree	obj/kern/kernel.asm	/^		nextfree = ROUNDUP((char *) end, PGSIZE);$/;"	d
nextfree	obj/kern/kernel.asm	/^	nextfree = ROUNDUP(nextfree, PGSIZE);$/;"	d
normalmap	kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	file:
npages	kern/pmap.c	/^size_t npages;			\/\/ Amount of physical memory (in pages)$/;"	v
npages	kern/pmap.h	/^extern size_t npages;$/;"	x
npages	obj/kern/kernel.asm	/^		npages = (EXTPHYSMEM \/ PGSIZE) + npages_extmem;$/;"	d
npages	obj/kern/kernel.asm	/^		npages = npages_basemem;$/;"	d
npages_basemem	kern/pmap.c	/^static size_t npages_basemem;	\/\/ Amount of base memory (in pages)$/;"	v	file:
npages_basemem	obj/kern/kernel.asm	/^	npages_basemem = (nvram_read(NVRAM_BASELO) * 1024) \/ PGSIZE;$/;"	d
npages_extmem	obj/kern/kernel.asm	/^	npages_extmem = (nvram_read(NVRAM_EXTLO) * 1024) \/ PGSIZE;$/;"	d
num	obj/kern/kernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/kern/kernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/kern/kernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/badsegment.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/badsegment.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/breakpoint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/breakpoint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/divzero.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/divzero.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/dumbfork.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/dumbfork.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/evilhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/evilhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/evilhello2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/evilhello2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/evilhello2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/evilhello2.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/fairness.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/fairness.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultalloc.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultalloc.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultallocbad.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultdie.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultdie.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultnostack.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultnostack.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultread.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultread.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultregs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultregs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwrite.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwrite.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/forktree.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/forktree.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/hello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/hello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/idle.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/idle.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpong.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpong.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpongs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpongs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/primes.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/primes.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/softint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/softint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spin.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spin.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/stresssched.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/stresssched.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testbss.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testbss.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/yield.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/yield.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/kern/kernel.asm	/^		number:$/;"	l
number	obj/user/badsegment.asm	/^		number:$/;"	l
number	obj/user/breakpoint.asm	/^		number:$/;"	l
number	obj/user/buggyhello.asm	/^		number:$/;"	l
number	obj/user/buggyhello2.asm	/^		number:$/;"	l
number	obj/user/divzero.asm	/^		number:$/;"	l
number	obj/user/dumbfork.asm	/^		number:$/;"	l
number	obj/user/evilhello.asm	/^		number:$/;"	l
number	obj/user/evilhello2.asm	/^		number:$/;"	l
number	obj/user/fairness.asm	/^		number:$/;"	l
number	obj/user/faultalloc.asm	/^		number:$/;"	l
number	obj/user/faultallocbad.asm	/^		number:$/;"	l
number	obj/user/faultbadhandler.asm	/^		number:$/;"	l
number	obj/user/faultdie.asm	/^		number:$/;"	l
number	obj/user/faultevilhandler.asm	/^		number:$/;"	l
number	obj/user/faultnostack.asm	/^		number:$/;"	l
number	obj/user/faultread.asm	/^		number:$/;"	l
number	obj/user/faultreadkernel.asm	/^		number:$/;"	l
number	obj/user/faultregs.asm	/^		number:$/;"	l
number	obj/user/faultwrite.asm	/^		number:$/;"	l
number	obj/user/faultwritekernel.asm	/^		number:$/;"	l
number	obj/user/forktree.asm	/^		number:$/;"	l
number	obj/user/hello.asm	/^		number:$/;"	l
number	obj/user/idle.asm	/^		number:$/;"	l
number	obj/user/pingpong.asm	/^		number:$/;"	l
number	obj/user/pingpongs.asm	/^		number:$/;"	l
number	obj/user/primes.asm	/^		number:$/;"	l
number	obj/user/softint.asm	/^		number:$/;"	l
number	obj/user/spin.asm	/^		number:$/;"	l
number	obj/user/stresssched.asm	/^		number:$/;"	l
number	obj/user/testbss.asm	/^		number:$/;"	l
number	obj/user/yield.asm	/^		number:$/;"	l
nvram_read	kern/pmap.c	/^nvram_read(int r)$/;"	f	file:	signature:(int r)
oemlength	kern/mpconfig.c	/^	uint16_t oemlength;             \/\/ OEM table length$/;"	m	struct:mpconf	file:	access:public
oemtable	kern/mpconfig.c	/^	physaddr_t oemtable;            \/\/ OEM table pointer$/;"	m	struct:mpconf	file:	access:public
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t
offset	obj/boot/boot.asm	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
offsetof	inc/types.h	70;"	d
outb	inc/x86.h	/^outb(int port, uint8_t data)$/;"	f	signature:(int port, uint8_t data)
outb	inc/x86.h	/^static __inline void outb(int port, uint8_t data) __attribute__((always_inline));$/;"	p	signature:(int port, uint8_t data)
outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f	signature:(int port, uint32_t data)
outl	inc/x86.h	/^static __inline void outl(int port, uint32_t data) __attribute__((always_inline));$/;"	p	signature:(int port, uint32_t data)
outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f	signature:(int port, const void *addr, int cnt)
outsb	inc/x86.h	/^static __inline void outsb(int port, const void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, const void *addr, int cnt)
outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f	signature:(int port, const void *addr, int cnt)
outsl	inc/x86.h	/^static __inline void outsl(int port, const void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, const void *addr, int cnt)
outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f	signature:(int port, const void *addr, int cnt)
outsw	inc/x86.h	/^static __inline void outsw(int port, const void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, const void *addr, int cnt)
outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f	signature:(int port, uint16_t data)
outw	inc/x86.h	/^static __inline void outw(int port, uint16_t data) __attribute__((always_inline));$/;"	p	signature:(int port, uint16_t data)
overflow_me	kern/monitor.c	/^overflow_me(void)$/;"	f	signature:(void)
p	obj/kern/kernel.asm	/^				p = "(null)";$/;"	d
p	obj/kern/kernel.asm	/^		p = *(uint16_t *) (bda + 0x13) * 1024;$/;"	d
p	obj/kern/kernel.asm	/^		p = page_alloc(0);$/;"	d
p	obj/kern/kernel.asm	/^	p = (pte_t*) KADDR(PTE_ADDR(*pgdir));$/;"	d
p	obj/user/badsegment.asm	/^				p = "(null)";$/;"	d
p	obj/user/breakpoint.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello2.asm	/^				p = "(null)";$/;"	d
p	obj/user/divzero.asm	/^				p = "(null)";$/;"	d
p	obj/user/dumbfork.asm	/^				p = "(null)";$/;"	d
p	obj/user/evilhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/evilhello2.asm	/^				p = "(null)";$/;"	d
p	obj/user/fairness.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultalloc.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultallocbad.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultbadhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultdie.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultevilhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultnostack.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultread.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultreadkernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultregs.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwrite.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwritekernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/forktree.asm	/^				p = "(null)";$/;"	d
p	obj/user/hello.asm	/^				p = "(null)";$/;"	d
p	obj/user/idle.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpong.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpongs.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^	p = ipc_recv(&envid, 0, 0);$/;"	d
p	obj/user/softint.asm	/^				p = "(null)";$/;"	d
p	obj/user/spin.asm	/^				p = "(null)";$/;"	d
p	obj/user/stresssched.asm	/^				p = "(null)";$/;"	d
p	obj/user/testbss.asm	/^				p = "(null)";$/;"	d
p	obj/user/yield.asm	/^				p = "(null)";$/;"	d
p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr	access:public
p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr	access:public
p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr	access:public
p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr	access:public
p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr	access:public
p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr	access:public
p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr	access:public
p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr	access:public
pa	obj/kern/kernel.asm	/^		pa = PTE_ADDR(e->env_pgdir[pdeno]);$/;"	d
pa	obj/kern/kernel.asm	/^	pa = PADDR(e->env_pgdir);$/;"	d
pa2page	kern/pmap.h	/^pa2page(physaddr_t pa)$/;"	f	signature:(physaddr_t pa)
page2kva	kern/pmap.h	/^page2kva(struct Page *pp)$/;"	f	signature:(struct Page *pp)
page2pa	kern/pmap.h	/^page2pa(struct Page *pp)$/;"	f	signature:(struct Page *pp)
page_alloc	kern/pmap.c	/^page_alloc(int alloc_flags)$/;"	f	signature:(int alloc_flags)
page_alloc	kern/pmap.h	/^struct Page *page_alloc(int alloc_flags);$/;"	p	signature:(int alloc_flags)
page_alloc_4pages	kern/pmap.c	/^page_alloc_4pages(int alloc_flags)$/;"	f	signature:(int alloc_flags)
page_decref	kern/pmap.c	/^page_decref(struct Page* pp)$/;"	f	signature:(struct Page* pp)
page_decref	kern/pmap.h	/^void	page_decref(struct Page *pp);$/;"	p	signature:(struct Page *pp)
page_fault_handler	kern/trap.c	/^page_fault_handler(struct Trapframe *tf)$/;"	f	signature:(struct Trapframe *tf)
page_fault_handler	kern/trap.h	/^void page_fault_handler(struct Trapframe *);$/;"	p	signature:(struct Trapframe *)
page_free	kern/pmap.c	/^page_free(struct Page *pp)$/;"	f	signature:(struct Page *pp)
page_free	kern/pmap.h	/^void	page_free(struct Page *pp);$/;"	p	signature:(struct Page *pp)
page_free_4pages	kern/pmap.c	/^page_free_4pages(struct Page *pp)$/;"	f	signature:(struct Page *pp)
page_free_list	kern/pmap.c	/^static struct Page *page_free_list;	\/\/ Free list of physical pages$/;"	v	typeref:struct:Page	file:
page_free_list	obj/kern/kernel.asm	/^		page_free_list = &pages[i];$/;"	d
page_free_list	obj/kern/kernel.asm	/^		page_free_list = (*result).pp_link;$/;"	d
page_free_list	obj/kern/kernel.asm	/^		page_free_list = page_free_list->pp_link;$/;"	d
page_free_list	obj/kern/kernel.asm	/^		page_free_list = pp1;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = 0;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = NULL;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = fl;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = pp;$/;"	d
page_init	kern/pmap.c	/^page_init(void)$/;"	f	signature:(void)
page_init	kern/pmap.h	/^void	page_init(void);$/;"	p	signature:(void)
page_insert	kern/pmap.c	/^page_insert(pde_t *pgdir, struct Page *pp, void *va, int perm)$/;"	f	signature:(pde_t *pgdir, struct Page *pp, void *va, int perm)
page_insert	kern/pmap.h	/^int	page_insert(pde_t *pgdir, struct Page *pp, void *va, int perm);$/;"	p	signature:(pde_t *pgdir, struct Page *pp, void *va, int perm)
page_lookup	kern/pmap.c	/^page_lookup(pde_t *pgdir, void *va, pte_t **pte_store)$/;"	f	signature:(pde_t *pgdir, void *va, pte_t **pte_store)
page_lookup	kern/pmap.h	/^struct Page *page_lookup(pde_t *pgdir, void *va, pte_t **pte_store);$/;"	p	signature:(pde_t *pgdir, void *va, pte_t **pte_store)
page_remove	kern/pmap.c	/^page_remove(pde_t *pgdir, void *va)$/;"	f	signature:(pde_t *pgdir, void *va)
page_remove	kern/pmap.h	/^void	page_remove(pde_t *pgdir, void *va);$/;"	p	signature:(pde_t *pgdir, void *va)
pages	inc/lib.h	/^extern const volatile struct Page pages[];$/;"	x
pages	kern/pmap.c	/^struct Page *pages;		\/\/ Physical page state array$/;"	v	typeref:struct:Page
pages	kern/pmap.h	/^extern struct Page *pages;$/;"	x
pages	obj/kern/kernel.asm	/^	pages = boot_alloc(npages * sizeof(struct Page));$/;"	d
panic	inc/assert.h	12;"	d
panicstr	kern/init.c	/^const char *panicstr;$/;"	v
panicstr	obj/kern/kernel.asm	/^	panicstr = fmt;$/;"	d
pass	grade-functions.sh	/^pass () {$/;"	f
passfailmsg	grade-functions.sh	/^passfailmsg () {$/;"	f
pcs	kern/spinlock.h	/^	uintptr_t pcs[10]; \/\/ The call stack (an array of program counters)$/;"	m	struct:spinlock	access:public
pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc	access:public
pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc	access:public
pde	obj/kern/kernel.asm	/^	pde = pgdir[PDX(va)];$/;"	d
pde_t	inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t
percpu_kstacks	kern/cpu.h	/^extern unsigned char percpu_kstacks[NCPU][KSTKSIZE];$/;"	x
percpu_kstacks	kern/mpconfig.c	/^unsigned char percpu_kstacks[NCPU][KSTKSIZE]$/;"	v
pgdir	obj/kern/kernel.asm	/^	pgdir = &pgdir[PDX(va)];$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = kern_pgdir;$/;"	d
pgdir_walk	kern/pmap.c	/^pgdir_walk(pde_t *pgdir, const void *va, int create)$/;"	f	signature:(pde_t *pgdir, const void *va, int create)
pgdir_walk	kern/pmap.h	/^pte_t *pgdir_walk(pde_t *pgdir, const void *va, int create);$/;"	p	signature:(pde_t *pgdir, const void *va, int create)
pgfault	lib/fork.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:	signature:(struct UTrapframe *utf)
pgfault	user/faultregs.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:	signature:(struct UTrapframe *utf)
ph	obj/boot/boot.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
ph	obj/kern/kernel.asm	/^	ph = (struct Proghdr *)((uint8_t *) elf + elf->e_phoff);$/;"	d
physaddr	kern/mpconfig.c	/^	physaddr_t physaddr;            \/\/ phys addr of MP config table$/;"	m	struct:mp	file:	access:public
physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t
pic_init	kern/picirq.c	/^pic_init(void)$/;"	f	signature:(void)
pic_init	kern/picirq.h	/^void pic_init(void);$/;"	p	signature:(void)
pos	obj/kern/kernel.asm	/^	pos = inb(addr_6845 + 1) << 8;$/;"	d
pp	obj/kern/kernel.asm	/^	pp =  page_alloc(0);$/;"	d
pp	obj/kern/kernel.asm	/^	pp = page_alloc_4pages(0);$/;"	d
pp	obj/kern/kernel.asm	/^	pp = pp0 = 0;$/;"	d
pp0	obj/kern/kernel.asm	/^	pp0 = page_alloc(0);$/;"	d
pp0	obj/kern/kernel.asm	/^	pp0 = page_alloc_4pages(ALLOC_ZERO);$/;"	d
pp0	obj/kern/kernel.asm	/^	pp0 = pp1 = pp2 = 0;$/;"	d
pp1	obj/kern/kernel.asm	/^	pp1 = pp2 = 0;$/;"	d
pp_link	inc/memlayout.h	/^	struct Page *pp_link;$/;"	m	struct:Page	typeref:struct:Page::Page	access:public
pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:Page	access:public
ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t
precision	obj/kern/kernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kern/kernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/kern/kernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/badsegment.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badsegment.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/badsegment.asm	/^		precision = -1;$/;"	d
precision	obj/user/breakpoint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/breakpoint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/breakpoint.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello2.asm	/^		precision = -1;$/;"	d
precision	obj/user/divzero.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/divzero.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/divzero.asm	/^		precision = -1;$/;"	d
precision	obj/user/dumbfork.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/dumbfork.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/dumbfork.asm	/^		precision = -1;$/;"	d
precision	obj/user/evilhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/evilhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/evilhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/evilhello2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/evilhello2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/evilhello2.asm	/^		precision = -1;$/;"	d
precision	obj/user/fairness.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/fairness.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/fairness.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultalloc.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultalloc.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultalloc.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultallocbad.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultallocbad.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultallocbad.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultbadhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultbadhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultbadhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultdie.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultdie.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultdie.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultevilhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultevilhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultevilhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultnostack.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultnostack.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultnostack.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultread.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultread.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultread.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultreadkernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultreadkernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultreadkernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultregs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultregs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultregs.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwrite.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwrite.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwrite.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwritekernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwritekernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwritekernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/forktree.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktree.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/forktree.asm	/^		precision = -1;$/;"	d
precision	obj/user/hello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/hello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/hello.asm	/^		precision = -1;$/;"	d
precision	obj/user/idle.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/idle.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/idle.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpong.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpong.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpong.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpongs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpongs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpongs.asm	/^		precision = -1;$/;"	d
precision	obj/user/primes.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primes.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/primes.asm	/^		precision = -1;$/;"	d
precision	obj/user/softint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/softint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/softint.asm	/^		precision = -1;$/;"	d
precision	obj/user/spin.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spin.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/spin.asm	/^		precision = -1;$/;"	d
precision	obj/user/stresssched.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/stresssched.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/stresssched.asm	/^		precision = -1;$/;"	d
precision	obj/user/testbss.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testbss.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testbss.asm	/^		precision = -1;$/;"	d
precision	obj/user/yield.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/yield.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/yield.asm	/^		precision = -1;$/;"	d
primeproc	user/primes.c	/^primeproc(void)$/;"	f	signature:(void)
print_regs	kern/trap.c	/^print_regs(struct PushRegs *regs)$/;"	f	signature:(struct PushRegs *regs)
print_regs	kern/trap.h	/^void print_regs(struct PushRegs *regs);$/;"	p	signature:(struct PushRegs *regs)
print_trapframe	kern/trap.c	/^print_trapframe(struct Trapframe *tf)$/;"	f	signature:(struct Trapframe *tf)
print_trapframe	kern/trap.h	/^void print_trapframe(struct Trapframe *tf);$/;"	p	signature:(struct Trapframe *tf)
printbuf	lib/printf.c	/^struct printbuf {$/;"	s	file:
printbuf::buf	lib/printf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:	access:public
printbuf::cnt	lib/printf.c	/^	int cnt;	\/\/ total bytes printed so far$/;"	m	struct:printbuf	file:	access:public
printbuf::idx	lib/printf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:	access:public
printf	inc/stdio.h	/^int	printf(const char *fmt, ...);$/;"	p	signature:(const char *fmt, ...)
printfmt	inc/stdio.h	/^void	printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	p	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, ...)
printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, ...)
printfmt	lib/printfmt.c	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	p	file:	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, ...)
printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:	signature:(void (*putch)(int, void*), void *putdat, unsigned long long num, unsigned base, int width, int padc)
proc	obj/kern/kernel.asm	/^			proc = (struct mpproc *)p;$/;"	d
process_precision	obj/kern/kernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/badsegment.asm	/^		process_precision:$/;"	l
process_precision	obj/user/breakpoint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello2.asm	/^		process_precision:$/;"	l
process_precision	obj/user/divzero.asm	/^		process_precision:$/;"	l
process_precision	obj/user/dumbfork.asm	/^		process_precision:$/;"	l
process_precision	obj/user/evilhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/evilhello2.asm	/^		process_precision:$/;"	l
process_precision	obj/user/fairness.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultalloc.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultallocbad.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultbadhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultdie.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultevilhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultnostack.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultread.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultreadkernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultregs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwrite.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwritekernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/forktree.asm	/^		process_precision:$/;"	l
process_precision	obj/user/hello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/idle.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpong.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpongs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/primes.asm	/^		process_precision:$/;"	l
process_precision	obj/user/softint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/spin.asm	/^		process_precision:$/;"	l
process_precision	obj/user/stresssched.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testbss.asm	/^		process_precision:$/;"	l
process_precision	obj/user/yield.asm	/^		process_precision:$/;"	l
product	kern/mpconfig.c	/^	uint8_t product[20];            \/\/ product id$/;"	m	struct:mpconf	file:	access:public
protcseg	boot/boot.S	/^protcseg:$/;"	l
protcseg	obj/boot/boot.asm	/^protcseg:$/;"	l
pt	obj/kern/kernel.asm	/^		pt = (pte_t*) KADDR(pa);$/;"	d
ptable	obj/kern/kernel.asm	/^		ptable = (pte_t *)KADDR(PTE_ADDR(pde)); \/\/pde is physical address of corresponding ptablej$/;"	d
pte	obj/kern/kernel.asm	/^		pte = pgdir_walk(pgdir, va, 1);$/;"	d
pte_t	inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t
pte_t	obj/kern/kernel.asm	/^pte_t *$/;"	l
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(PGSIZE)]));$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) page2kva(pp0);$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = pgdir_walk(kern_pgdir, va, 1);$/;"	d
ptep1	obj/kern/kernel.asm	/^	ptep1 = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(va)]));$/;"	d
putch	kern/printf.c	/^putch(int ch, int *cnt)$/;"	f	file:	signature:(int ch, int *cnt)
putch	lib/printf.c	/^putch(int ch, struct printbuf *b)$/;"	f	file:	signature:(int ch, struct printbuf *b)
quicktest	grade-functions.sh	/^quicktest () {$/;"	f
r	obj/kern/kernel.asm	/^			r = m - 1;$/;"	d
r	obj/kern/kernel.asm	/^	r = page_insert(curenv->env_pgdir, p, va, PTE_U | PTE_W);$/;"	d
rc	obj/kern/kernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/badsegment.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/breakpoint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/divzero.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/dumbfork.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/evilhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/evilhello2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/fairness.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultalloc.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultallocbad.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultbadhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultdie.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultevilhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultnostack.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultread.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultreadkernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultregs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwrite.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwritekernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/forktree.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/hello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/idle.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpong.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpongs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/primes.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/softint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/spin.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/stresssched.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testbss.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/yield.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rcr0	inc/x86.h	/^rcr0(void)$/;"	f	signature:(void)
rcr0	inc/x86.h	/^static __inline uint32_t rcr0(void) __attribute__((always_inline));$/;"	p	signature:(void)
rcr2	inc/x86.h	/^rcr2(void)$/;"	f	signature:(void)
rcr2	inc/x86.h	/^static __inline uint32_t rcr2(void) __attribute__((always_inline));$/;"	p	signature:(void)
rcr3	inc/x86.h	/^rcr3(void)$/;"	f	signature:(void)
rcr3	inc/x86.h	/^static __inline uint32_t rcr3(void) __attribute__((always_inline));$/;"	p	signature:(void)
rcr4	inc/x86.h	/^rcr4(void)$/;"	f	signature:(void)
rcr4	inc/x86.h	/^static __inline uint32_t rcr4(void) __attribute__((always_inline));$/;"	p	signature:(void)
rdmsr	inc/x86.h	296;"	d
read_ebp	inc/x86.h	/^read_ebp(void)$/;"	f	signature:(void)
read_ebp	inc/x86.h	/^static __inline uint32_t read_ebp(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f	signature:(void)
read_eflags	inc/x86.h	/^static __inline uint32_t read_eflags(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_eip	kern/monitor.c	/^read_eip()$/;"	f
read_eip	kern/monitor.c	/^unsigned read_eip();$/;"	p	file:
read_esp	inc/x86.h	/^read_esp(void)$/;"	f	signature:(void)
read_esp	inc/x86.h	/^static __inline uint32_t read_esp(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_pretaddr	kern/monitor.c	/^read_pretaddr() {$/;"	f	file:
read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f	signature:(void)
read_tsc	inc/x86.h	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	p	signature:(void)
readdeps	mergedep.pl	/^sub readdeps {$/;"	s
readline	inc/lib.h	/^char*	readline(const char *buf);$/;"	p	signature:(const char *buf)
readline	inc/stdio.h	/^char*	readline(const char *prompt);$/;"	p	signature:(const char *prompt)
readline	lib/readline.c	/^readline(const char *prompt)$/;"	f	signature:(const char *prompt)
readsect	boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f	signature:(void *dst, uint32_t offset)
readsect	boot/main.c	/^void readsect(void*, uint32_t);$/;"	p	file:	signature:(void*, uint32_t)
readseg	boot/main.c	/^readseg(uint32_t pa, uint32_t count, uint32_t offset)$/;"	f	signature:(uint32_t pa, uint32_t count, uint32_t offset)
readseg	boot/main.c	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	p	file:
reg_eax	inc/trap.h	/^	uint32_t reg_eax;$/;"	m	struct:PushRegs	access:public
reg_ebp	inc/trap.h	/^	uint32_t reg_ebp;$/;"	m	struct:PushRegs	access:public
reg_ebx	inc/trap.h	/^	uint32_t reg_ebx;$/;"	m	struct:PushRegs	access:public
reg_ecx	inc/trap.h	/^	uint32_t reg_ecx;$/;"	m	struct:PushRegs	access:public
reg_edi	inc/trap.h	/^	uint32_t reg_edi;$/;"	m	struct:PushRegs	access:public
reg_edx	inc/trap.h	/^	uint32_t reg_edx;$/;"	m	struct:PushRegs	access:public
reg_esi	inc/trap.h	/^	uint32_t reg_esi;$/;"	m	struct:PushRegs	access:public
reg_oesp	inc/trap.h	/^	uint32_t reg_oesp;		\/* Useless *\/$/;"	m	struct:PushRegs	access:public
region_alloc	kern/env.c	/^region_alloc(struct Env *e, void *va, size_t len)$/;"	f	file:	signature:(struct Env *e, void *va, size_t len)
regs	user/faultregs.c	/^	struct PushRegs regs;$/;"	m	struct:regs	typeref:struct:regs::PushRegs	file:	access:public
regs	user/faultregs.c	/^struct regs$/;"	s	file:
regs::eflags	user/faultregs.c	/^	uint32_t eflags;$/;"	m	struct:regs	file:	access:public
regs::eip	user/faultregs.c	/^	uintptr_t eip;$/;"	m	struct:regs	file:	access:public
regs::esp	user/faultregs.c	/^	uintptr_t esp;$/;"	m	struct:regs	file:	access:public
regs::regs	user/faultregs.c	/^	struct PushRegs regs;$/;"	m	struct:regs	typeref:struct:regs::PushRegs	file:	access:public
relocated	kern/entry.S	/^relocated:$/;"	l
relocated	obj/kern/kernel.asm	/^relocated:$/;"	l
reserved	kern/mpconfig.c	/^	uint8_t reserved;$/;"	m	struct:mpconf	file:	access:public
reserved	kern/mpconfig.c	/^	uint8_t reserved[3];$/;"	m	struct:mp	file:	access:public
reserved	kern/mpconfig.c	/^	uint8_t reserved[8];$/;"	m	struct:mpproc	file:	access:public
result	obj/kern/kernel.asm	/^		result = page_free_list;$/;"	d
result	obj/kern/kernel.asm	/^	result = nextfree;$/;"	d
reswitch	obj/kern/kernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/badsegment.asm	/^	reswitch:$/;"	l
reswitch	obj/user/breakpoint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello2.asm	/^	reswitch:$/;"	l
reswitch	obj/user/divzero.asm	/^	reswitch:$/;"	l
reswitch	obj/user/dumbfork.asm	/^	reswitch:$/;"	l
reswitch	obj/user/evilhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/evilhello2.asm	/^	reswitch:$/;"	l
reswitch	obj/user/fairness.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultalloc.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultallocbad.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultbadhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultdie.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultevilhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultnostack.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultread.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultreadkernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultregs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwrite.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwritekernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/forktree.asm	/^	reswitch:$/;"	l
reswitch	obj/user/hello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/idle.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpong.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpongs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/primes.asm	/^	reswitch:$/;"	l
reswitch	obj/user/softint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/spin.asm	/^	reswitch:$/;"	l
reswitch	obj/user/stresssched.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testbss.asm	/^	reswitch:$/;"	l
reswitch	obj/user/yield.asm	/^	reswitch:$/;"	l
ret	obj/kern/kernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/badsegment.asm	/^	ret = dst;$/;"	d
ret	obj/user/breakpoint.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello2.asm	/^	ret = dst;$/;"	d
ret	obj/user/divzero.asm	/^	ret = dst;$/;"	d
ret	obj/user/dumbfork.asm	/^	ret = dst;$/;"	d
ret	obj/user/evilhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/evilhello2.asm	/^	ret = dst;$/;"	d
ret	obj/user/fairness.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultalloc.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultallocbad.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultbadhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultdie.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultevilhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultnostack.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultread.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultreadkernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultregs.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwrite.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwritekernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/forktree.asm	/^	ret = dst;$/;"	d
ret	obj/user/hello.asm	/^	ret = dst;$/;"	d
ret	obj/user/idle.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpong.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpongs.asm	/^	ret = dst;$/;"	d
ret	obj/user/primes.asm	/^	ret = dst;$/;"	d
ret	obj/user/softint.asm	/^	ret = dst;$/;"	d
ret	obj/user/spin.asm	/^	ret = dst;$/;"	d
ret	obj/user/stresssched.asm	/^	ret = dst;$/;"	d
ret	obj/user/testbss.asm	/^	ret = dst;$/;"	d
ret	obj/user/yield.asm	/^	ret = dst;$/;"	d
rfile	obj/kern/kernel.asm	/^	rfile = (stab_end - stabs) - 1;$/;"	d
rfun	obj/kern/kernel.asm	/^	rfun = rfile;$/;"	d
ring0_call	user/evilhello2.c	/^void ring0_call(void (*fun_ptr)(void)) {$/;"	f	signature:(void (*fun_ptr)(void))
rline	obj/kern/kernel.asm	/^		rline = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfun;$/;"	d
rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon1	file:	access:public
run	grade-functions.sh	/^run () {$/;"	f
runcmd	kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	file:	signature:(char *buf, struct Trapframe *tf)
runtest	grade-functions.sh	/^runtest () {$/;"	f
runtest1	grade-functions.sh	/^runtest1 () {$/;"	f
s	obj/kern/kernel.asm	/^	s = src;$/;"	d
s	obj/user/badsegment.asm	/^	s = src;$/;"	d
s	obj/user/breakpoint.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello2.asm	/^	s = src;$/;"	d
s	obj/user/divzero.asm	/^	s = src;$/;"	d
s	obj/user/dumbfork.asm	/^	s = src;$/;"	d
s	obj/user/evilhello.asm	/^	s = src;$/;"	d
s	obj/user/evilhello2.asm	/^	s = src;$/;"	d
s	obj/user/fairness.asm	/^	s = src;$/;"	d
s	obj/user/faultalloc.asm	/^	s = src;$/;"	d
s	obj/user/faultallocbad.asm	/^	s = src;$/;"	d
s	obj/user/faultbadhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultdie.asm	/^	s = src;$/;"	d
s	obj/user/faultevilhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultnostack.asm	/^	s = src;$/;"	d
s	obj/user/faultread.asm	/^	s = src;$/;"	d
s	obj/user/faultreadkernel.asm	/^	s = src;$/;"	d
s	obj/user/faultregs.asm	/^	s = src;$/;"	d
s	obj/user/faultwrite.asm	/^	s = src;$/;"	d
s	obj/user/faultwritekernel.asm	/^	s = src;$/;"	d
s	obj/user/forktree.asm	/^	s = src;$/;"	d
s	obj/user/hello.asm	/^	s = src;$/;"	d
s	obj/user/idle.asm	/^	s = src;$/;"	d
s	obj/user/pingpong.asm	/^	s = src;$/;"	d
s	obj/user/pingpongs.asm	/^	s = src;$/;"	d
s	obj/user/primes.asm	/^	s = src;$/;"	d
s	obj/user/softint.asm	/^	s = src;$/;"	d
s	obj/user/spin.asm	/^	s = src;$/;"	d
s	obj/user/stresssched.asm	/^	s = src;$/;"	d
s	obj/user/testbss.asm	/^	s = src;$/;"	d
s	obj/user/yield.asm	/^	s = src;$/;"	d
sched_yield	kern/sched.c	/^sched_yield(void)$/;"	f	signature:(void)
sched_yield	kern/sched.h	/^void sched_yield(void) __attribute__((noreturn));$/;"	p	signature:(void)
sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc	access:public
sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc	access:public
sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc	access:public
sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc	access:public
sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc	access:public
sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc	access:public
sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc	access:public
sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc	access:public
sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc	access:public
sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc	access:public
sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc	access:public
sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc	access:public
sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc	access:public
serial_exists	kern/console.c	/^static bool serial_exists;$/;"	v	file:
serial_exists	obj/kern/kernel.asm	/^	serial_exists = (inb(COM1+COM_LSR) != 0xFF);$/;"	d
serial_init	kern/console.c	/^serial_init(void)$/;"	f	file:	signature:(void)
serial_intr	kern/console.c	/^serial_intr(void)$/;"	f	signature:(void)
serial_intr	kern/console.h	/^void serial_intr(void); \/\/ irq 4$/;"	p	signature:(void)
serial_proc_data	kern/console.c	/^serial_proc_data(void)$/;"	f	file:	signature:(void)
serial_putc	kern/console.c	/^serial_putc(int c)$/;"	f	file:	signature:(int c)
set_pgfault_handler	inc/lib.h	/^void	set_pgfault_handler(void (*handler)(struct UTrapframe *utf));$/;"	p	signature:(void (*handler)(struct UTrapframe *utf))
set_pgfault_handler	lib/pgfault.c	/^set_pgfault_handler(void (*handler)(struct UTrapframe *utf))$/;"	f	signature:(void (*handler)(struct UTrapframe *utf))
sfork	inc/lib.h	/^envid_t	sfork(void);	\/\/ Challenge!$/;"	p	signature:(void)
sfork	lib/fork.c	/^sfork(void)$/;"	f	signature:(void)
sgdt	user/evilhello2.c	/^sgdt(struct Pseudodesc* gdtd)$/;"	f	file:	signature:(struct Pseudodesc* gdtd)
sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr	access:public
sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr	access:public
sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr	access:public
sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr	access:public
sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr	access:public
sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr	access:public
sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr	access:public
sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr	access:public
sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr	access:public
sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr	access:public
shiftcode	kern/console.c	/^static uint8_t shiftcode[256] = $/;"	v	file:
shiftmap	kern/console.c	/^static uint8_t shiftmap[256] = $/;"	v	file:
showfinal	grade-functions.sh	/^showfinal () {$/;"	f
showpart	grade-functions.sh	/^showpart () {$/;"	f
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "PCMP"$/;"	m	struct:mpconf	file:	access:public
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "_MP_"$/;"	m	struct:mp	file:	access:public
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ CPU signature$/;"	m	struct:mpproc	file:	access:public
size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t
size_t	obj/kern/kernel.asm	/^size_t$/;"	l
size_t	obj/user/badsegment.asm	/^size_t$/;"	l
size_t	obj/user/breakpoint.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello2.asm	/^size_t$/;"	l
size_t	obj/user/divzero.asm	/^size_t$/;"	l
size_t	obj/user/dumbfork.asm	/^size_t$/;"	l
size_t	obj/user/evilhello.asm	/^size_t$/;"	l
size_t	obj/user/evilhello2.asm	/^size_t$/;"	l
size_t	obj/user/fairness.asm	/^size_t$/;"	l
size_t	obj/user/faultalloc.asm	/^size_t$/;"	l
size_t	obj/user/faultallocbad.asm	/^size_t$/;"	l
size_t	obj/user/faultbadhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultdie.asm	/^size_t$/;"	l
size_t	obj/user/faultevilhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultnostack.asm	/^size_t$/;"	l
size_t	obj/user/faultread.asm	/^size_t$/;"	l
size_t	obj/user/faultreadkernel.asm	/^size_t$/;"	l
size_t	obj/user/faultregs.asm	/^size_t$/;"	l
size_t	obj/user/faultwrite.asm	/^size_t$/;"	l
size_t	obj/user/faultwritekernel.asm	/^size_t$/;"	l
size_t	obj/user/forktree.asm	/^size_t$/;"	l
size_t	obj/user/hello.asm	/^size_t$/;"	l
size_t	obj/user/idle.asm	/^size_t$/;"	l
size_t	obj/user/pingpong.asm	/^size_t$/;"	l
size_t	obj/user/pingpongs.asm	/^size_t$/;"	l
size_t	obj/user/primes.asm	/^size_t$/;"	l
size_t	obj/user/softint.asm	/^size_t$/;"	l
size_t	obj/user/spin.asm	/^size_t$/;"	l
size_t	obj/user/stresssched.asm	/^size_t$/;"	l
size_t	obj/user/testbss.asm	/^size_t$/;"	l
size_t	obj/user/yield.asm	/^size_t$/;"	l
snprintf	inc/stdio.h	/^int	snprintf(char *str, int size, const char *fmt, ...);$/;"	p	signature:(char *str, int size, const char *fmt, ...)
snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f	signature:(char *buf, int n, const char *fmt, ...)
specrev	kern/mpconfig.c	/^	uint8_t specrev;                \/\/ [14]$/;"	m	struct:mp	file:	access:public
spin	boot/boot.S	/^spin:$/;"	l
spin	kern/entry.S	/^spin:	jmp	spin$/;"	l
spin	kern/mpentry.S	/^spin:$/;"	l
spin	obj/boot/boot.asm	/^spin:$/;"	l
spin	obj/kern/kernel.asm	/^spin:	jmp	spin$/;"	l
spin	obj/kern/kernel.asm	/^spin:$/;"	l
spin_initlock	kern/spinlock.h	26;"	d
spin_lock	kern/spinlock.c	/^spin_lock(struct spinlock *lk)$/;"	f	signature:(struct spinlock *lk)
spin_lock	kern/spinlock.h	/^void spin_lock(struct spinlock *lk);$/;"	p	signature:(struct spinlock *lk)
spin_unlock	kern/spinlock.c	/^spin_unlock(struct spinlock *lk)$/;"	f	signature:(struct spinlock *lk)
spin_unlock	kern/spinlock.h	/^void spin_unlock(struct spinlock *lk);$/;"	p	signature:(struct spinlock *lk)
spinlock	kern/spinlock.h	/^struct spinlock {$/;"	s
spinlock::cpu	kern/spinlock.h	/^	struct Cpu *cpu;   \/\/ The CPU holding the lock.$/;"	m	struct:spinlock	typeref:struct:spinlock::Cpu	access:public
spinlock::locked	kern/spinlock.h	/^	unsigned locked;   \/\/ Is the lock held?$/;"	m	struct:spinlock	access:public
spinlock::name	kern/spinlock.h	/^	char *name;        \/\/ Name of lock.$/;"	m	struct:spinlock	access:public
spinlock::pcs	kern/spinlock.h	/^	uintptr_t pcs[10]; \/\/ The call stack (an array of program counters)$/;"	m	struct:spinlock	access:public
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintbuf::buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:	access:public
sprintbuf::cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:	access:public
sprintbuf::ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:	access:public
sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	file:	signature:(int ch, struct sprintbuf *b)
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t
stab_binsearch	kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	file:	signature:(const struct Stab *stabs, int *region_left, int *region_right, int type, uintptr_t addr)
stab_end	kern/kdebug.c	/^	const struct Stab *stab_end;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:	access:public
stab_end	obj/kern/kernel.asm	/^		stab_end = usd->stab_end;$/;"	d
stabs	kern/kdebug.c	/^	const struct Stab *stabs;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:	access:public
stabs	obj/kern/kernel.asm	/^		stabs = usd->stabs;$/;"	d
stabstr	kern/kdebug.c	/^	const char *stabstr;$/;"	m	struct:UserStabData	file:	access:public
stabstr	obj/kern/kernel.asm	/^		stabstr = usd->stabstr;$/;"	d
stabstr_end	kern/kdebug.c	/^	const char *stabstr_end;$/;"	m	struct:UserStabData	file:	access:public
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = usd->stabstr_end;$/;"	d
start	boot/boot.S	/^start:$/;"	l
start	obj/boot/boot.asm	/^start:$/;"	l
start32	kern/mpentry.S	/^start32:$/;"	l
start32	obj/kern/kernel.asm	/^start32:$/;"	l
start_overflow	kern/monitor.c	/^start_overflow(void)$/;"	f	signature:(void)
static	obj/boot/boot.asm	/^static __inline uint8_t$/;"	l
static	obj/boot/boot.asm	/^static __inline void$/;"	l
static	obj/kern/kernel.asm	/^static __inline uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline void $/;"	l
static	obj/kern/kernel.asm	/^static __inline void$/;"	l
static	obj/kern/kernel.asm	/^static bool didinit;$/;"	l
static	obj/kern/kernel.asm	/^static bool serial_exists;$/;"	l
static	obj/kern/kernel.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/kern/kernel.asm	/^static envid_t$/;"	l
static	obj/kern/kernel.asm	/^static inline physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static inline struct Page*$/;"	l
static	obj/kern/kernel.asm	/^static inline void*$/;"	l
static	obj/kern/kernel.asm	/^static int$/;"	l
static	obj/kern/kernel.asm	/^static long long$/;"	l
static	obj/kern/kernel.asm	/^static physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static struct mp *$/;"	t
static	obj/kern/kernel.asm	/^static uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static unsigned long long$/;"	l
static	obj/kern/kernel.asm	/^static void *$/;"	l
static	obj/kern/kernel.asm	/^static void cons_putc(int c);$/;"	l
static	obj/kern/kernel.asm	/^static void$/;"	l
static	obj/user/badsegment.asm	/^static inline int32_t$/;"	l
static	obj/user/badsegment.asm	/^static long long$/;"	l
static	obj/user/badsegment.asm	/^static unsigned long long$/;"	l
static	obj/user/badsegment.asm	/^static void$/;"	l
static	obj/user/breakpoint.asm	/^static inline int32_t$/;"	l
static	obj/user/breakpoint.asm	/^static long long$/;"	l
static	obj/user/breakpoint.asm	/^static unsigned long long$/;"	l
static	obj/user/breakpoint.asm	/^static void$/;"	l
static	obj/user/buggyhello.asm	/^static inline int32_t$/;"	l
static	obj/user/buggyhello.asm	/^static long long$/;"	l
static	obj/user/buggyhello.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello.asm	/^static void$/;"	l
static	obj/user/buggyhello2.asm	/^static inline int32_t$/;"	l
static	obj/user/buggyhello2.asm	/^static long long$/;"	l
static	obj/user/buggyhello2.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello2.asm	/^static void$/;"	l
static	obj/user/divzero.asm	/^static inline int32_t$/;"	l
static	obj/user/divzero.asm	/^static long long$/;"	l
static	obj/user/divzero.asm	/^static unsigned long long$/;"	l
static	obj/user/divzero.asm	/^static void$/;"	l
static	obj/user/dumbfork.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/dumbfork.asm	/^static inline int32_t$/;"	l
static	obj/user/dumbfork.asm	/^static long long$/;"	l
static	obj/user/dumbfork.asm	/^static unsigned long long$/;"	l
static	obj/user/dumbfork.asm	/^static void$/;"	l
static	obj/user/evilhello.asm	/^static inline int32_t$/;"	l
static	obj/user/evilhello.asm	/^static long long$/;"	l
static	obj/user/evilhello.asm	/^static unsigned long long$/;"	l
static	obj/user/evilhello.asm	/^static void$/;"	l
static	obj/user/evilhello2.asm	/^static __inline void$/;"	l
static	obj/user/evilhello2.asm	/^static inline int32_t$/;"	l
static	obj/user/evilhello2.asm	/^static long long$/;"	l
static	obj/user/evilhello2.asm	/^static unsigned long long$/;"	l
static	obj/user/evilhello2.asm	/^static void$/;"	l
static	obj/user/fairness.asm	/^static inline int32_t$/;"	l
static	obj/user/fairness.asm	/^static long long$/;"	l
static	obj/user/fairness.asm	/^static unsigned long long$/;"	l
static	obj/user/fairness.asm	/^static void$/;"	l
static	obj/user/faultalloc.asm	/^static inline int32_t$/;"	l
static	obj/user/faultalloc.asm	/^static long long$/;"	l
static	obj/user/faultalloc.asm	/^static unsigned long long$/;"	l
static	obj/user/faultalloc.asm	/^static void$/;"	l
static	obj/user/faultallocbad.asm	/^static inline int32_t$/;"	l
static	obj/user/faultallocbad.asm	/^static long long$/;"	l
static	obj/user/faultallocbad.asm	/^static unsigned long long$/;"	l
static	obj/user/faultallocbad.asm	/^static void$/;"	l
static	obj/user/faultbadhandler.asm	/^static inline int32_t$/;"	l
static	obj/user/faultbadhandler.asm	/^static long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static void$/;"	l
static	obj/user/faultdie.asm	/^static inline int32_t$/;"	l
static	obj/user/faultdie.asm	/^static long long$/;"	l
static	obj/user/faultdie.asm	/^static unsigned long long$/;"	l
static	obj/user/faultdie.asm	/^static void$/;"	l
static	obj/user/faultevilhandler.asm	/^static inline int32_t$/;"	l
static	obj/user/faultevilhandler.asm	/^static long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static void$/;"	l
static	obj/user/faultnostack.asm	/^static inline int32_t$/;"	l
static	obj/user/faultnostack.asm	/^static long long$/;"	l
static	obj/user/faultnostack.asm	/^static unsigned long long$/;"	l
static	obj/user/faultnostack.asm	/^static void$/;"	l
static	obj/user/faultread.asm	/^static inline int32_t$/;"	l
static	obj/user/faultread.asm	/^static long long$/;"	l
static	obj/user/faultread.asm	/^static unsigned long long$/;"	l
static	obj/user/faultread.asm	/^static void$/;"	l
static	obj/user/faultreadkernel.asm	/^static inline int32_t$/;"	l
static	obj/user/faultreadkernel.asm	/^static long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static void$/;"	l
static	obj/user/faultregs.asm	/^static inline int32_t$/;"	l
static	obj/user/faultregs.asm	/^static long long$/;"	l
static	obj/user/faultregs.asm	/^static struct regs before, during, after;$/;"	t
static	obj/user/faultregs.asm	/^static unsigned long long$/;"	l
static	obj/user/faultregs.asm	/^static void$/;"	l
static	obj/user/faultwrite.asm	/^static inline int32_t$/;"	l
static	obj/user/faultwrite.asm	/^static long long$/;"	l
static	obj/user/faultwrite.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwrite.asm	/^static void$/;"	l
static	obj/user/faultwritekernel.asm	/^static inline int32_t$/;"	l
static	obj/user/faultwritekernel.asm	/^static long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static void$/;"	l
static	obj/user/forktree.asm	/^static inline int32_t$/;"	l
static	obj/user/forktree.asm	/^static long long$/;"	l
static	obj/user/forktree.asm	/^static unsigned long long$/;"	l
static	obj/user/forktree.asm	/^static void$/;"	l
static	obj/user/hello.asm	/^static inline int32_t$/;"	l
static	obj/user/hello.asm	/^static long long$/;"	l
static	obj/user/hello.asm	/^static unsigned long long$/;"	l
static	obj/user/hello.asm	/^static void$/;"	l
static	obj/user/idle.asm	/^static inline int32_t$/;"	l
static	obj/user/idle.asm	/^static long long$/;"	l
static	obj/user/idle.asm	/^static unsigned long long$/;"	l
static	obj/user/idle.asm	/^static void$/;"	l
static	obj/user/pingpong.asm	/^static inline int32_t$/;"	l
static	obj/user/pingpong.asm	/^static long long$/;"	l
static	obj/user/pingpong.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpong.asm	/^static void$/;"	l
static	obj/user/pingpongs.asm	/^static inline int32_t$/;"	l
static	obj/user/pingpongs.asm	/^static long long$/;"	l
static	obj/user/pingpongs.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpongs.asm	/^static void$/;"	l
static	obj/user/primes.asm	/^static inline int32_t$/;"	l
static	obj/user/primes.asm	/^static long long$/;"	l
static	obj/user/primes.asm	/^static unsigned long long$/;"	l
static	obj/user/primes.asm	/^static void$/;"	l
static	obj/user/softint.asm	/^static inline int32_t$/;"	l
static	obj/user/softint.asm	/^static long long$/;"	l
static	obj/user/softint.asm	/^static unsigned long long$/;"	l
static	obj/user/softint.asm	/^static void$/;"	l
static	obj/user/spin.asm	/^static inline int32_t$/;"	l
static	obj/user/spin.asm	/^static long long$/;"	l
static	obj/user/spin.asm	/^static unsigned long long$/;"	l
static	obj/user/spin.asm	/^static void$/;"	l
static	obj/user/stresssched.asm	/^static inline int32_t$/;"	l
static	obj/user/stresssched.asm	/^static long long$/;"	l
static	obj/user/stresssched.asm	/^static unsigned long long$/;"	l
static	obj/user/stresssched.asm	/^static void$/;"	l
static	obj/user/testbss.asm	/^static inline int32_t$/;"	l
static	obj/user/testbss.asm	/^static long long$/;"	l
static	obj/user/testbss.asm	/^static unsigned long long$/;"	l
static	obj/user/testbss.asm	/^static void$/;"	l
static	obj/user/yield.asm	/^static inline int32_t$/;"	l
static	obj/user/yield.asm	/^static long long$/;"	l
static	obj/user/yield.asm	/^static unsigned long long$/;"	l
static	obj/user/yield.asm	/^static void$/;"	l
static_assert	inc/assert.h	18;"	d
strcat	inc/string.h	/^char *	strcat(char *dst, const char *src);$/;"	p	signature:(char *dst, const char *src)
strcat	lib/string.c	/^strcat(char *dst, const char *src)$/;"	f	signature:(char *dst, const char *src)
strchr	inc/string.h	/^char *	strchr(const char *s, char c);$/;"	p	signature:(const char *s, char c)
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f	signature:(const char *s, char c)
strcmp	inc/string.h	/^int	strcmp(const char *s1, const char *s2);$/;"	p	signature:(const char *s1, const char *s2)
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f	signature:(const char *p, const char *q)
strcpy	inc/string.h	/^char *	strcpy(char *dst, const char *src);$/;"	p	signature:(char *dst, const char *src)
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f	signature:(char *dst, const char *src)
strfind	inc/string.h	/^char *	strfind(const char *s, char c);$/;"	p	signature:(const char *s, char c)
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f	signature:(const char *s, char c)
strlcpy	inc/string.h	/^size_t	strlcpy(char *dst, const char *src, size_t size);$/;"	p	signature:(char *dst, const char *src, size_t size)
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f	signature:(char *dst, const char *src, size_t size)
strlen	inc/string.h	/^int	strlen(const char *s);$/;"	p	signature:(const char *s)
strlen	lib/string.c	/^strlen(const char *s)$/;"	f	signature:(const char *s)
strncmp	inc/string.h	/^int	strncmp(const char *s1, const char *s2, size_t size);$/;"	p	signature:(const char *s1, const char *s2, size_t size)
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f	signature:(const char *p, const char *q, size_t n)
strncpy	inc/string.h	/^char *	strncpy(char *dst, const char *src, size_t size);$/;"	p	signature:(char *dst, const char *src, size_t size)
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f	signature:(char *dst, const char *src, size_t size)
strnlen	inc/string.h	/^int	strnlen(const char *s, size_t size);$/;"	p	signature:(const char *s, size_t size)
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f	signature:(const char *s, size_t size)
strtol	inc/string.h	/^long	strtol(const char *s, char **endptr, int base);$/;"	p	signature:(const char *s, char **endptr, int base)
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f	signature:(const char *s, char **endptr, int base)
sum	kern/mpconfig.c	/^sum(void *addr, int len)$/;"	f	file:	signature:(void *addr, int len)
sum	obj/kern/kernel.asm	/^	sum = 0;$/;"	d
sys_cgetc	inc/lib.h	/^int	sys_cgetc(void);$/;"	p	signature:(void)
sys_cgetc	kern/syscall.c	/^sys_cgetc(void)$/;"	f	file:	signature:(void)
sys_cgetc	lib/syscall.c	/^sys_cgetc(void)$/;"	f	signature:(void)
sys_cputs	inc/lib.h	/^void	sys_cputs(const char *string, size_t len);$/;"	p	signature:(const char *string, size_t len)
sys_cputs	kern/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f	file:	signature:(const char *s, size_t len)
sys_cputs	lib/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f	signature:(const char *s, size_t len)
sys_env_destroy	inc/lib.h	/^int	sys_env_destroy(envid_t);$/;"	p	signature:(envid_t)
sys_env_destroy	kern/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f	file:	signature:(envid_t envid)
sys_env_destroy	lib/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f	signature:(envid_t envid)
sys_env_set_pgfault_upcall	inc/lib.h	/^int	sys_env_set_pgfault_upcall(envid_t env, void *upcall);$/;"	p	signature:(envid_t env, void *upcall)
sys_env_set_pgfault_upcall	kern/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *func)$/;"	f	file:	signature:(envid_t envid, void *func)
sys_env_set_pgfault_upcall	lib/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *upcall)$/;"	f	signature:(envid_t envid, void *upcall)
sys_env_set_status	inc/lib.h	/^int	sys_env_set_status(envid_t env, int status);$/;"	p	signature:(envid_t env, int status)
sys_env_set_status	kern/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f	file:	signature:(envid_t envid, int status)
sys_env_set_status	lib/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f	signature:(envid_t envid, int status)
sys_exofork	inc/lib.h	/^static envid_t sys_exofork(void);$/;"	p	signature:(void)
sys_exofork	inc/lib.h	/^sys_exofork(void)$/;"	f	signature:(void)
sys_exofork	kern/syscall.c	/^sys_exofork(void)$/;"	f	file:	signature:(void)
sys_getenvid	inc/lib.h	/^envid_t	sys_getenvid(void);$/;"	p	signature:(void)
sys_getenvid	kern/syscall.c	/^sys_getenvid(void)$/;"	f	file:	signature:(void)
sys_getenvid	lib/syscall.c	/^sys_getenvid(void)$/;"	f	signature:(void)
sys_ipc_recv	inc/lib.h	/^int	sys_ipc_recv(void *rcv_pg);$/;"	p	signature:(void *rcv_pg)
sys_ipc_recv	kern/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f	file:	signature:(void *dstva)
sys_ipc_recv	lib/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f	signature:(void *dstva)
sys_ipc_try_send	inc/lib.h	/^int	sys_ipc_try_send(envid_t to_env, uint32_t value, void *pg, int perm);$/;"	p	signature:(envid_t to_env, uint32_t value, void *pg, int perm)
sys_ipc_try_send	kern/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, unsigned perm)$/;"	f	file:	signature:(envid_t envid, uint32_t value, void *srcva, unsigned perm)
sys_ipc_try_send	lib/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, int perm)$/;"	f	signature:(envid_t envid, uint32_t value, void *srcva, int perm)
sys_map_kernel_page	inc/lib.h	/^int     sys_map_kernel_page(void* kpage, void* va);$/;"	p	signature:(void* kpage, void* va)
sys_map_kernel_page	kern/syscall.c	/^sys_map_kernel_page(void* kpage, void* va)$/;"	f	file:	signature:(void* kpage, void* va)
sys_map_kernel_page	lib/syscall.c	/^sys_map_kernel_page(void* kpage, void* va)$/;"	f	signature:(void* kpage, void* va)
sys_page_alloc	inc/lib.h	/^int	sys_page_alloc(envid_t env, void *pg, int perm);$/;"	p	signature:(envid_t env, void *pg, int perm)
sys_page_alloc	kern/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f	file:	signature:(envid_t envid, void *va, int perm)
sys_page_alloc	lib/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f	signature:(envid_t envid, void *va, int perm)
sys_page_map	inc/lib.h	/^int	sys_page_map(envid_t src_env, void *src_pg,$/;"	p	signature:(envid_t src_env, void *src_pg, envid_t dst_env, void *dst_pg, int perm)
sys_page_map	kern/syscall.c	/^sys_page_map(envid_t srcenvid, void *srcva,$/;"	f	file:	signature:(envid_t srcenvid, void *srcva, envid_t dstenvid, void *dstva, int perm)
sys_page_map	lib/syscall.c	/^sys_page_map(envid_t srcenv, void *srcva, envid_t dstenv, void *dstva, int perm)$/;"	f	signature:(envid_t srcenv, void *srcva, envid_t dstenv, void *dstva, int perm)
sys_page_unmap	inc/lib.h	/^int	sys_page_unmap(envid_t env, void *pg);$/;"	p	signature:(envid_t env, void *pg)
sys_page_unmap	kern/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f	file:	signature:(envid_t envid, void *va)
sys_page_unmap	lib/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f	signature:(envid_t envid, void *va)
sys_yield	inc/lib.h	/^void	sys_yield(void);$/;"	p	signature:(void)
sys_yield	kern/syscall.c	/^sys_yield(void)$/;"	f	file:	signature:(void)
sys_yield	lib/syscall.c	/^sys_yield(void)$/;"	f	signature:(void)
syscall	kern/syscall.c	/^syscall(uint32_t syscallno, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f	signature:(uint32_t syscallno, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)
syscall	kern/syscall.h	/^int32_t syscall(uint32_t num, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5);$/;"	p	signature:(uint32_t num, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)
syscall	lib/syscall.c	/^syscall(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f	file:	signature:(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)
syscall_dummy	kern/syscall.c	/^syscall_dummy(struct Trapframe *tf){$/;"	f	signature:(struct Trapframe *tf)
sysenter_handler	kern/trapentry.S	/^sysenter_handler:$/;"	l
sysenter_handler	obj/kern/kernel.asm	/^sysenter_handler:$/;"	l
tail	obj/kern/kernel.asm	/^			tail = (*tail).pp_link;$/;"	d
tail	obj/kern/kernel.asm	/^		tail = (*tail).pp_link;$/;"	d
tf	obj/kern/kernel.asm	/^		tf = &curenv->env_tf;$/;"	d
tf_cs	inc/trap.h	/^	uint16_t tf_cs;$/;"	m	struct:Trapframe	access:public
tf_ds	inc/trap.h	/^	uint16_t tf_ds;$/;"	m	struct:Trapframe	access:public
tf_eflags	inc/trap.h	/^	uint32_t tf_eflags;$/;"	m	struct:Trapframe	access:public
tf_eip	inc/trap.h	/^	uintptr_t tf_eip;$/;"	m	struct:Trapframe	access:public
tf_err	inc/trap.h	/^	uint32_t tf_err;$/;"	m	struct:Trapframe	access:public
tf_es	inc/trap.h	/^	uint16_t tf_es;$/;"	m	struct:Trapframe	access:public
tf_esp	inc/trap.h	/^	uintptr_t tf_esp;$/;"	m	struct:Trapframe	access:public
tf_padding1	inc/trap.h	/^	uint16_t tf_padding1;$/;"	m	struct:Trapframe	access:public
tf_padding2	inc/trap.h	/^	uint16_t tf_padding2;$/;"	m	struct:Trapframe	access:public
tf_padding3	inc/trap.h	/^	uint16_t tf_padding3;$/;"	m	struct:Trapframe	access:public
tf_padding4	inc/trap.h	/^	uint16_t tf_padding4;$/;"	m	struct:Trapframe	access:public
tf_regs	inc/trap.h	/^	struct PushRegs tf_regs;$/;"	m	struct:Trapframe	typeref:struct:Trapframe::PushRegs	access:public
tf_ss	inc/trap.h	/^	uint16_t tf_ss;$/;"	m	struct:Trapframe	access:public
tf_trapno	inc/trap.h	/^	uint32_t tf_trapno;$/;"	m	struct:Trapframe	access:public
thiscpu	kern/cpu.h	37;"	d
thisenv	inc/lib.h	/^extern const volatile struct Env *thisenv;$/;"	x
thisenv	lib/libmain.c	/^const volatile struct Env *thisenv;$/;"	v	typeref:struct:Env
thisenv	obj/user/badsegment.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/badsegment.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/breakpoint.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/breakpoint.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/buggyhello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/buggyhello.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/buggyhello2.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/buggyhello2.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/divzero.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/divzero.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/dumbfork.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/dumbfork.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/dumbfork.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/evilhello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/evilhello.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/evilhello2.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/evilhello2.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/fairness.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/fairness.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/faultalloc.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultalloc.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/faultallocbad.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultallocbad.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/faultbadhandler.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultbadhandler.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/faultdie.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultdie.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/faultevilhandler.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultevilhandler.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/faultnostack.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultnostack.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/faultread.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultread.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/faultreadkernel.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultreadkernel.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/faultregs.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultregs.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/faultwrite.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultwrite.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/faultwritekernel.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultwritekernel.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/forktree.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/forktree.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/hello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/hello.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/idle.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/idle.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/pingpong.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpong.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/pingpongs.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpongs.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/primes.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primes.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/softint.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/softint.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/spin.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/spin.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/stresssched.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/stresssched.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/testbss.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testbss.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/yield.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/yield.asm	/^	thisenv = 0;$/;"	d
tlb_invalidate	kern/pmap.c	/^tlb_invalidate(pde_t *pgdir, void *va)$/;"	f	signature:(pde_t *pgdir, void *va)
tlb_invalidate	kern/pmap.h	/^void	tlb_invalidate(pde_t *pgdir, void *va);$/;"	p	signature:(pde_t *pgdir, void *va)
tlbflush	inc/x86.h	/^static __inline void tlbflush(void) __attribute__((always_inline));$/;"	p	signature:(void)
tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f	signature:(void)
tmppte	obj/kern/kernel.asm	/^		tmppte = pgdir_walk(env->env_pgdir, (void *)index, 0);$/;"	d
togglecode	kern/console.c	/^static uint8_t togglecode[256] = $/;"	v	file:
top	obj/user/primes.asm	/^top:$/;"	l
trap	kern/trap.c	/^trap(struct Trapframe *tf)$/;"	f	signature:(struct Trapframe *tf)
trap_dispatch	kern/trap.c	/^trap_dispatch(struct Trapframe *tf)$/;"	f	file:	signature:(struct Trapframe *tf)
trap_init	kern/trap.c	/^trap_init(void)$/;"	f	signature:(void)
trap_init	kern/trap.h	/^void trap_init(void);$/;"	p	signature:(void)
trap_init_percpu	kern/trap.c	/^trap_init_percpu(void)$/;"	f	signature:(void)
trap_init_percpu	kern/trap.h	/^void trap_init_percpu(void);$/;"	p	signature:(void)
trapname	kern/trap.c	/^static const char *trapname(int trapno)$/;"	f	file:	signature:(int trapno)
ts	kern/trap.c	/^static struct Taskstate ts;$/;"	v	typeref:struct:Taskstate	file:
ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate	access:public
ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate	access:public
ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate	access:public
ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate	access:public
ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate	access:public
ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate	access:public
ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate	access:public
ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate	access:public
ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate	access:public
ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate	access:public
ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate	access:public
ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate	access:public
ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate	access:public
ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate	access:public
ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate	access:public
ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate	access:public
ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate	access:public
ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate	access:public
ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate	access:public
ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate	access:public
ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate	access:public
ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate	access:public
ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate	access:public
ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate	access:public
ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate	access:public
ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate	access:public
ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate	access:public
ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate	access:public
ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate	access:public
ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate	access:public
ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate	access:public
ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate	access:public
ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate	access:public
ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate	access:public
ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate	access:public
ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate	access:public
ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate	access:public
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ MP system config type$/;"	m	struct:mp	file:	access:public
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ entry type (0)$/;"	m	struct:mpproc	file:	access:public
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t
uint32_t	obj/user/pingpongs.asm	/^uint32_t val;$/;"	l
uint32_t	obj/user/testbss.asm	/^uint32_t bigarray[ARRAYSIZE];$/;"	l
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t
uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t
umain	inc/lib.h	/^void	umain(int argc, char **argv);$/;"	p	signature:(int argc, char **argv)
umain	lib/libmain.c	/^extern void umain(int argc, char **argv);$/;"	p	file:	signature:(int argc, char **argv)
umain	user/badsegment.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/breakpoint.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/buggyhello.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/buggyhello2.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/divzero.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/dumbfork.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/evilhello.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/evilhello2.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/fairness.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultalloc.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultallocbad.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultbadhandler.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultdie.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultevilhandler.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultnostack.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultread.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultreadkernel.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultregs.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultwrite.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultwritekernel.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/forktree.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/hello.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/idle.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/pingpong.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/pingpongs.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/primes.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/softint.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/spin.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/stresssched.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/testbss.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/yield.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
unlock_kernel	kern/spinlock.h	/^unlock_kernel(void)$/;"	f	signature:(void)
unsigned	obj/kern/kernel.asm	/^unsigned$/;"	l
unsigned	obj/user/primes.asm	/^unsigned$/;"	l
user_mem_assert	kern/pmap.c	/^user_mem_assert(struct Env *env, const void *va, size_t len, int perm)$/;"	f	signature:(struct Env *env, const void *va, size_t len, int perm)
user_mem_assert	kern/pmap.h	/^void	user_mem_assert(struct Env *env, const void *va, size_t len, int perm);$/;"	p	signature:(struct Env *env, const void *va, size_t len, int perm)
user_mem_check	kern/pmap.c	/^user_mem_check(struct Env *env, const void *va, size_t len, int perm)$/;"	f	signature:(struct Env *env, const void *va, size_t len, int perm)
user_mem_check	kern/pmap.h	/^int	user_mem_check(struct Env *env, const void *va, size_t len, int perm);$/;"	p	signature:(struct Env *env, const void *va, size_t len, int perm)
user_mem_check_addr	kern/pmap.c	/^static uintptr_t user_mem_check_addr;$/;"	v	file:
user_mem_check_addr	obj/kern/kernel.asm	/^				user_mem_check_addr = index;$/;"	d
user_mem_check_addr	obj/kern/kernel.asm	/^			user_mem_check_addr = index;$/;"	d
utf_eflags	inc/trap.h	/^	uint32_t utf_eflags;$/;"	m	struct:UTrapframe	access:public
utf_eip	inc/trap.h	/^	uintptr_t utf_eip;$/;"	m	struct:UTrapframe	access:public
utf_err	inc/trap.h	/^	uint32_t utf_err;$/;"	m	struct:UTrapframe	access:public
utf_esp	inc/trap.h	/^	uintptr_t utf_esp;$/;"	m	struct:UTrapframe	access:public
utf_fault_va	inc/trap.h	/^	uint32_t utf_fault_va;	\/* va for T_PGFLT, 0 otherwise *\/$/;"	m	struct:UTrapframe	access:public
utf_regs	inc/trap.h	/^	struct PushRegs utf_regs;$/;"	m	struct:UTrapframe	typeref:struct:UTrapframe::PushRegs	access:public
va	obj/kern/kernel.asm	/^	va = (void*)(PGSIZE * NPDENTRIES + PGSIZE);$/;"	d
va	user/evilhello2.c	/^char va[PGSIZE];$/;"	v
va_arg	inc/stdarg.h	10;"	d
va_end	inc/stdarg.h	12;"	d
va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	inc/stdarg.h	8;"	d
val	user/pingpongs.c	/^uint32_t val;$/;"	v
vcprintf	inc/stdio.h	/^int	vcprintf(const char *fmt, va_list);$/;"	p	signature:(const char *fmt, va_list)
vcprintf	kern/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f	signature:(const char *fmt, va_list ap)
vcprintf	lib/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f	signature:(const char *fmt, va_list ap)
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ [14]$/;"	m	struct:mpconf	file:	access:public
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ local APIC version$/;"	m	struct:mpproc	file:	access:public
vfprintf	inc/stdio.h	/^int	vfprintf(int fd, const char *fmt, va_list);$/;"	p	signature:(int fd, const char *fmt, va_list)
void	obj/boot/boot.asm	/^void readsect(void*, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void$/;"	l
void	obj/kern/kernel.asm	/^void	user_mem_assert(struct Env *env, const void *va, size_t len, int perm);$/;"	l
void	obj/kern/kernel.asm	/^void *$/;"	l
void	obj/kern/kernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
void	obj/user/badsegment.asm	/^void *$/;"	l
void	obj/user/badsegment.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/badsegment.asm	/^void$/;"	l
void	obj/user/breakpoint.asm	/^void *$/;"	l
void	obj/user/breakpoint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/breakpoint.asm	/^void$/;"	l
void	obj/user/buggyhello.asm	/^void *$/;"	l
void	obj/user/buggyhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello.asm	/^void$/;"	l
void	obj/user/buggyhello2.asm	/^void *$/;"	l
void	obj/user/buggyhello2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello2.asm	/^void$/;"	l
void	obj/user/divzero.asm	/^void *$/;"	l
void	obj/user/divzero.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/divzero.asm	/^void$/;"	l
void	obj/user/dumbfork.asm	/^void *$/;"	l
void	obj/user/dumbfork.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/dumbfork.asm	/^void$/;"	l
void	obj/user/evilhello.asm	/^void *$/;"	l
void	obj/user/evilhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/evilhello.asm	/^void$/;"	l
void	obj/user/evilhello2.asm	/^void *$/;"	l
void	obj/user/evilhello2.asm	/^void evil()$/;"	l
void	obj/user/evilhello2.asm	/^void evil_do(){$/;"	l
void	obj/user/evilhello2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/evilhello2.asm	/^void ring0_call(void (*fun_ptr)(void)) {$/;"	l
void	obj/user/evilhello2.asm	/^void$/;"	l
void	obj/user/fairness.asm	/^void *$/;"	l
void	obj/user/fairness.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/fairness.asm	/^void$/;"	l
void	obj/user/faultalloc.asm	/^void *$/;"	l
void	obj/user/faultalloc.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultalloc.asm	/^void$/;"	l
void	obj/user/faultallocbad.asm	/^void *$/;"	l
void	obj/user/faultallocbad.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultallocbad.asm	/^void$/;"	l
void	obj/user/faultbadhandler.asm	/^void *$/;"	l
void	obj/user/faultbadhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultbadhandler.asm	/^void$/;"	l
void	obj/user/faultdie.asm	/^void *$/;"	l
void	obj/user/faultdie.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultdie.asm	/^void$/;"	l
void	obj/user/faultevilhandler.asm	/^void *$/;"	l
void	obj/user/faultevilhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultevilhandler.asm	/^void$/;"	l
void	obj/user/faultnostack.asm	/^void *$/;"	l
void	obj/user/faultnostack.asm	/^void _pgfault_upcall();$/;"	l
void	obj/user/faultnostack.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultnostack.asm	/^void$/;"	l
void	obj/user/faultread.asm	/^void *$/;"	l
void	obj/user/faultread.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultread.asm	/^void$/;"	l
void	obj/user/faultreadkernel.asm	/^void *$/;"	l
void	obj/user/faultreadkernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultreadkernel.asm	/^void$/;"	l
void	obj/user/faultregs.asm	/^void *$/;"	l
void	obj/user/faultregs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultregs.asm	/^void$/;"	l
void	obj/user/faultwrite.asm	/^void *$/;"	l
void	obj/user/faultwrite.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwrite.asm	/^void$/;"	l
void	obj/user/faultwritekernel.asm	/^void *$/;"	l
void	obj/user/faultwritekernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwritekernel.asm	/^void$/;"	l
void	obj/user/forktree.asm	/^void *$/;"	l
void	obj/user/forktree.asm	/^void forktree(const char *cur);$/;"	l
void	obj/user/forktree.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/forktree.asm	/^void$/;"	l
void	obj/user/hello.asm	/^void *$/;"	l
void	obj/user/hello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/hello.asm	/^void$/;"	l
void	obj/user/idle.asm	/^void *$/;"	l
void	obj/user/idle.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/idle.asm	/^void$/;"	l
void	obj/user/pingpong.asm	/^void *$/;"	l
void	obj/user/pingpong.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpong.asm	/^void$/;"	l
void	obj/user/pingpongs.asm	/^void *$/;"	l
void	obj/user/pingpongs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpongs.asm	/^void$/;"	l
void	obj/user/primes.asm	/^void *$/;"	l
void	obj/user/primes.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/primes.asm	/^void$/;"	l
void	obj/user/softint.asm	/^void *$/;"	l
void	obj/user/softint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/softint.asm	/^void$/;"	l
void	obj/user/spin.asm	/^void *$/;"	l
void	obj/user/spin.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/spin.asm	/^void$/;"	l
void	obj/user/stresssched.asm	/^void *$/;"	l
void	obj/user/stresssched.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/stresssched.asm	/^void$/;"	l
void	obj/user/testbss.asm	/^void *$/;"	l
void	obj/user/testbss.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testbss.asm	/^void$/;"	l
void	obj/user/yield.asm	/^void *$/;"	l
void	obj/user/yield.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/yield.asm	/^void$/;"	l
volatile	obj/kern/kernel.asm	/^volatile uint32_t *lapic;  \/\/ Initialized in mp.c$/;"	l
volatile	obj/user/stresssched.asm	/^volatile int counter;$/;"	l
vpd	inc/memlayout.h	/^extern volatile pde_t vpd[];     \/\/ VA of current page directory$/;"	x
vprintfmt	inc/stdio.h	/^void	vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list);$/;"	p	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, va_list)
vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)
vpt	inc/memlayout.h	/^extern volatile pte_t vpt[];     \/\/ VA of "virtual page table"$/;"	x
vsnprintf	inc/stdio.h	/^int	vsnprintf(char *str, int size, const char *fmt, va_list);$/;"	p	signature:(char *str, int size, const char *fmt, va_list)
vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f	signature:(char *buf, int n, const char *fmt, va_list ap)
waitdisk	boot/main.c	/^waitdisk(void)$/;"	f	signature:(void)
warn	inc/assert.h	11;"	d
was	obj/kern/kernel.asm	/^	was = *cp;$/;"	d
who	obj/user/dumbfork.asm	/^	who = dumbfork();$/;"	d
width	obj/kern/kernel.asm	/^				width = 0;$/;"	d
width	obj/kern/kernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/kern/kernel.asm	/^		width = -1;$/;"	d
width	obj/user/badsegment.asm	/^				width = 0;$/;"	d
width	obj/user/badsegment.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/badsegment.asm	/^		width = -1;$/;"	d
width	obj/user/breakpoint.asm	/^				width = 0;$/;"	d
width	obj/user/breakpoint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/breakpoint.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^		width = -1;$/;"	d
width	obj/user/divzero.asm	/^				width = 0;$/;"	d
width	obj/user/divzero.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/divzero.asm	/^		width = -1;$/;"	d
width	obj/user/dumbfork.asm	/^				width = 0;$/;"	d
width	obj/user/dumbfork.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/dumbfork.asm	/^		width = -1;$/;"	d
width	obj/user/evilhello.asm	/^				width = 0;$/;"	d
width	obj/user/evilhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/evilhello.asm	/^		width = -1;$/;"	d
width	obj/user/evilhello2.asm	/^				width = 0;$/;"	d
width	obj/user/evilhello2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/evilhello2.asm	/^		width = -1;$/;"	d
width	obj/user/fairness.asm	/^				width = 0;$/;"	d
width	obj/user/fairness.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/fairness.asm	/^		width = -1;$/;"	d
width	obj/user/faultalloc.asm	/^				width = 0;$/;"	d
width	obj/user/faultalloc.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultalloc.asm	/^		width = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = 0;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^		width = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultdie.asm	/^				width = 0;$/;"	d
width	obj/user/faultdie.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultdie.asm	/^		width = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultnostack.asm	/^				width = 0;$/;"	d
width	obj/user/faultnostack.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultnostack.asm	/^		width = -1;$/;"	d
width	obj/user/faultread.asm	/^				width = 0;$/;"	d
width	obj/user/faultread.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultread.asm	/^		width = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^		width = -1;$/;"	d
width	obj/user/faultregs.asm	/^				width = 0;$/;"	d
width	obj/user/faultregs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultregs.asm	/^		width = -1;$/;"	d
width	obj/user/faultwrite.asm	/^				width = 0;$/;"	d
width	obj/user/faultwrite.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwrite.asm	/^		width = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^		width = -1;$/;"	d
width	obj/user/forktree.asm	/^				width = 0;$/;"	d
width	obj/user/forktree.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/forktree.asm	/^		width = -1;$/;"	d
width	obj/user/hello.asm	/^				width = 0;$/;"	d
width	obj/user/hello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/hello.asm	/^		width = -1;$/;"	d
width	obj/user/idle.asm	/^				width = 0;$/;"	d
width	obj/user/idle.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/idle.asm	/^		width = -1;$/;"	d
width	obj/user/pingpong.asm	/^				width = 0;$/;"	d
width	obj/user/pingpong.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpong.asm	/^		width = -1;$/;"	d
width	obj/user/pingpongs.asm	/^				width = 0;$/;"	d
width	obj/user/pingpongs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpongs.asm	/^		width = -1;$/;"	d
width	obj/user/primes.asm	/^				width = 0;$/;"	d
width	obj/user/primes.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/primes.asm	/^		width = -1;$/;"	d
width	obj/user/softint.asm	/^				width = 0;$/;"	d
width	obj/user/softint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/softint.asm	/^		width = -1;$/;"	d
width	obj/user/spin.asm	/^				width = 0;$/;"	d
width	obj/user/spin.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/spin.asm	/^		width = -1;$/;"	d
width	obj/user/stresssched.asm	/^				width = 0;$/;"	d
width	obj/user/stresssched.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/stresssched.asm	/^		width = -1;$/;"	d
width	obj/user/testbss.asm	/^				width = 0;$/;"	d
width	obj/user/testbss.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testbss.asm	/^		width = -1;$/;"	d
width	obj/user/yield.asm	/^				width = 0;$/;"	d
width	obj/user/yield.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/yield.asm	/^		width = -1;$/;"	d
wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon1	file:	access:public
write_eflags	inc/x86.h	/^static __inline void write_eflags(uint32_t eflags) __attribute__((always_inline));$/;"	p	signature:(uint32_t eflags)
write_eflags	inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f	signature:(uint32_t eflags)
wrmsr	inc/x86.h	301;"	d
wrv	obj/kern/kernel.asm	/^	wrv = (uint16_t *)KADDR((0x40 << 4 | 0x67));  \/\/ Warm reset vector$/;"	d
xchecksum	kern/mpconfig.c	/^	uint8_t xchecksum;              \/\/ extended table checksum$/;"	m	struct:mpconf	file:	access:public
xchg	inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f	signature:(volatile uint32_t *addr, uint32_t newval)
xlength	kern/mpconfig.c	/^	uint16_t xlength;               \/\/ extended table length$/;"	m	struct:mpconf	file:	access:public
zero	obj/user/divzero.asm	/^	zero = 0;$/;"	d
zero	user/divzero.c	/^int zero;$/;"	v
